[{"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/index.js":"1","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/store.js":"2","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/app/App.tsx":"3","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/reducer.js":"4","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/reducer.js":"5","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/reducer.js":"6","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/reducer.js":"7","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/routes/AndrewgramRoutes.js":"8","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Theme/theme.js":"9","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/types.js":"10","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/types.js":"11","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/types.js":"12","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/selectors.js":"13","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/EntryPage.js":"14","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ForgotPasswordPage.js":"15","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ResetPasswordPage.js":"16","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/Andrewgram.js":"17","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/AuthPage.js":"18","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ProfilePage.js":"19","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/selectors.js":"20","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/actions.js":"21","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/actions.js":"22","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/selectors.js":"23","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/EntryComponents/Entry.js":"24","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ResetPassword.js":"25","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Loaders/Loader.js":"26","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/hooks/http.hook.js":"27","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostsList/PostsList.js":"28","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileInfo.js":"29","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewPost.js":"30","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo.js":"31","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePostsGrid.js":"32","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Login.js":"33","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Register.js":"34","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePost.js":"35","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileRef/ProfileRef.js":"36","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/SubscribeSection.js":"37","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/actions.js":"38","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/Subscribes.js":"39","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileSubs.js":"40","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewAvatar.js":"41","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/PostIcons/PostIcons.js":"42","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/PostComments/PostComments.js":"43","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Auth.tsx":"44","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ForgotPassword.tsx":"45","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/Post/Post.tsx":"46","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/NewComment/NewComment.tsx":"47","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/Likes/Likes.tsx":"48"},{"size":438,"mtime":1635196842233,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":1635196508417,"results":"51","hashOfConfig":"50"},{"size":395,"mtime":1635191458539,"results":"52","hashOfConfig":"50"},{"size":266,"mtime":1635196595346,"results":"53","hashOfConfig":"50"},{"size":2540,"mtime":1635197433678,"results":"54","hashOfConfig":"50"},{"size":1208,"mtime":1635196571389,"results":"55","hashOfConfig":"50"},{"size":2144,"mtime":1635196458924,"results":"56","hashOfConfig":"50"},{"size":1305,"mtime":1635196666624,"results":"57","hashOfConfig":"50"},{"size":573,"mtime":1635196884431,"results":"58","hashOfConfig":"50"},{"size":449,"mtime":1613425996108,"results":"59","hashOfConfig":"50"},{"size":244,"mtime":1635196446192,"results":"60","hashOfConfig":"50"},{"size":212,"mtime":1635196562104,"results":"61","hashOfConfig":"50"},{"size":432,"mtime":1635196436821,"results":"62","hashOfConfig":"50"},{"size":526,"mtime":1635196800853,"results":"63","hashOfConfig":"50"},{"size":796,"mtime":1635196750685,"results":"64","hashOfConfig":"50"},{"size":1155,"mtime":1635196694944,"results":"65","hashOfConfig":"50"},{"size":2202,"mtime":1635196835749,"results":"66","hashOfConfig":"50"},{"size":182,"mtime":1635196772942,"results":"67","hashOfConfig":"50"},{"size":2052,"mtime":1635196916461,"results":"68","hashOfConfig":"50"},{"size":401,"mtime":1635196587553,"results":"69","hashOfConfig":"50"},{"size":1003,"mtime":1635196627554,"results":"70","hashOfConfig":"50"},{"size":562,"mtime":1635196480816,"results":"71","hashOfConfig":"50"},{"size":225,"mtime":1635196566399,"results":"72","hashOfConfig":"50"},{"size":1645,"mtime":1635196758060,"results":"73","hashOfConfig":"50"},{"size":5539,"mtime":1635197413946,"results":"74","hashOfConfig":"50"},{"size":430,"mtime":1635196861050,"results":"75","hashOfConfig":"50"},{"size":1277,"mtime":1635196851129,"results":"76","hashOfConfig":"50"},{"size":3287,"mtime":1635197042702,"results":"77","hashOfConfig":"50"},{"size":2003,"mtime":1635197144979,"results":"78","hashOfConfig":"50"},{"size":4909,"mtime":1635197170225,"results":"79","hashOfConfig":"50"},{"size":719,"mtime":1635196946244,"results":"80","hashOfConfig":"50"},{"size":3529,"mtime":1635197149659,"results":"81","hashOfConfig":"50"},{"size":5579,"mtime":1635197327246,"results":"82","hashOfConfig":"50"},{"size":8237,"mtime":1635197393791,"results":"83","hashOfConfig":"50"},{"size":2512,"mtime":1635197059927,"results":"84","hashOfConfig":"50"},{"size":5166,"mtime":1635197167961,"results":"85","hashOfConfig":"50"},{"size":788,"mtime":1635196955229,"results":"86","hashOfConfig":"50"},{"size":524,"mtime":1635196581154,"results":"87","hashOfConfig":"50"},{"size":2109,"mtime":1635197211913,"results":"88","hashOfConfig":"50"},{"size":4832,"mtime":1635196992083,"results":"89","hashOfConfig":"50"},{"size":3868,"mtime":1635197237164,"results":"90","hashOfConfig":"50"},{"size":1589,"mtime":1635197024328,"results":"91","hashOfConfig":"50"},{"size":2241,"mtime":1635197012298,"results":"92","hashOfConfig":"50"},{"size":3251,"mtime":1635197180808,"results":"93","hashOfConfig":"50"},{"size":4267,"mtime":1635197476265,"results":"94","hashOfConfig":"50"},{"size":6477,"mtime":1635197638788,"results":"95","hashOfConfig":"50"},{"size":3486,"mtime":1635195821961,"results":"96","hashOfConfig":"50"},{"size":3184,"mtime":1635197599467,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"10k906i",{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"101"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"101"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"101"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"101"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"101"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"101"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"101"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"101"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"101"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"101"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"101"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"101"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"101"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"101"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"101"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"101"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"101"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"101"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"101"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"101"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"101"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/index.js",["223"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/store.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/app/App.tsx",[],[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/reducer.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/reducer.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/reducer.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/reducer.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/routes/AndrewgramRoutes.js",["224"],"import React from 'react';\nimport EntryPage from '../pages/EntryPage';\nimport AuthPage from '../pages/AuthPage';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Andrewgram from '../pages/Andrewgram';\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage';\nimport ResetPasswordPage from '../pages/ResetPasswordPage';\nimport { useSelector } from 'react-redux';\nimport { isAuth } from '../store/user/selectors';\nimport ProfilePage from '../pages/ProfilePage';\n\nconst ProtectedRoute = (props) => {\n  const { exact, path, component } = props;\n\n  const isAuthUser = useSelector(isAuth);\n\n  return isAuthUser ? (\n    <Route exact={exact} path={path} component={component} />\n  ) : (\n    <Redirect to={'/auth'} />\n  );\n};\nconst AndrewgramRoutes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={EntryPage} />\n      <Route exact path=\"/auth\" component={AuthPage} />\n      <Route exact path=\"/auth/reset\" component={ForgotPasswordPage} />\n      <Route exact path=\"/auth/reset/:token\" component={ResetPasswordPage} />\n      <ProtectedRoute exact path=\"/app\" component={Andrewgram} />\n      <ProtectedRoute exact path=\"/profile/:login\" component={ProfilePage} />\n      {/*<Route path='*' component={Page404}/>*/}\n    </Switch>\n  );\n};\n\nexport default AndrewgramRoutes;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Theme/theme.js",["225"],"import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst theme = createMuiTheme({\n  colors: {\n    main: '#3f51b5',\n    error: '#f44336',\n    success: '#4caf50',\n    like: 'rgb(219, 86, 91)',\n  },\n  typography: {\n    fontFamily: '\"Montserrat\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n});\n\nconst Theme = (props) => {\n  return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\n};\n\nexport default Theme;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/EntryPage.js",["226"],"import React from 'react';\nimport Entry from '../components/EntryComponents/Entry';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  'entry-page': {\n    width: '100%',\n    height: '90vh',\n    boxSizing: 'border-box',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nconst EntryPage = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes['entry-page']}>\n      <Entry />\n    </div>\n  );\n};\n\nexport default EntryPage;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ForgotPasswordPage.js",["227"],"import React, { useEffect, useState } from 'react';\nimport ForgotPassword from '../components/AuthComponents/ForgotPassword';\nimport { Slide } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  'forgot-page': {\n    width: '100%',\n    height: '50vh',\n    fontSize: '1.5rem',\n    paddingTop: '4rem',\n  },\n}));\n\nconst ForgotPasswordPage = () => {\n  const [isAppear, setIsAppear] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setIsAppear(true);\n  }, []);\n  return (\n    <Slide in={isAppear} timeout={{ enter: 1000, exit: 500 }}>\n      <div className={classes['forgot-page']}>\n        <ForgotPassword setIsAppear={setIsAppear} />\n      </div>\n    </Slide>\n  );\n};\n\nexport default ForgotPasswordPage;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ResetPasswordPage.js",["228"],"import React, { useEffect, useState } from 'react';\nimport ResetPassword from '../components/AuthComponents/ResetPassword';\nimport Loader from '../components/Loaders/Loader';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useHttp } from '../hooks/http.hook';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  'reset-page': {\n    width: '100%',\n    height: '50vh',\n    fontSize: '1.5rem',\n    paddingTop: '6rem',\n  },\n}));\n\nconst ResetPasswordPage = () => {\n  const [isValid, setIsValid] = useState(false);\n  const { loading, request } = useHttp();\n  const { token } = useParams();\n  const history = useHistory();\n  const classes = useStyles();\n\n  useEffect(() => {\n    request('/auth/reset/check', 'post', { token })\n      .then((res) => {\n        if (res.success) {\n          setIsValid(true);\n        } else {\n          history.push('/auth');\n        }\n      })\n      .catch(() => {});\n  }, []);\n\n  return (\n    <div className={classes['reset-page']}>\n      {loading && <Loader />}\n      {isValid && <ResetPassword token={token} />}\n    </div>\n  );\n};\n\nexport default ResetPasswordPage;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/Andrewgram.js",["229"],"import React, { useEffect, useRef } from 'react';\nimport PostsList from '../components/AppComponents/PostsList/PostsList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SideProfileInfo from '../components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPostsLoading } from '../store/posts/selectors';\nimport { useHttp } from '../hooks/http.hook';\nimport { getUserInfo } from '../store/user/selectors';\nimport { setAllPosts, toggleAllPostsLoading } from '../store/posts/actions';\n\nconst useStyles = makeStyles(() => ({\n  main: {\n    width: '100%',\n    height: 'auto',\n    minHeight: '97vh',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: '4rem',\n  },\n  main__posts: {\n    width: '100%',\n  },\n  'main__profile-info': {\n    width: '100%',\n  },\n  '@media (min-width: 600px)': {\n    main: {\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n    },\n    main__posts: {\n      width: '40%',\n      maxWidth: '700px',\n    },\n    'main__profile-info': {\n      width: '20%',\n      marginLeft: '2rem',\n      position: 'sticky',\n      top: 'calc(4rem + 10px)',\n      minWidth: '300px',\n    },\n  },\n}));\n\nconst Andrewgram = () => {\n  const classes = useStyles();\n\n  const { request } = useHttp();\n\n  const isLoadingInfo = useSelector(getAllPostsLoading);\n\n  const dispatch = useDispatch();\n\n  const user = useSelector(getUserInfo);\n\n  const app = useRef();\n\n  useEffect(() => {\n    dispatch(toggleAllPostsLoading());\n    request('/posts/all', 'post', { login: user.login, length: 3 })\n      .then((res) => {\n        dispatch(setAllPosts(res.posts, user.login));\n        dispatch(toggleAllPostsLoading());\n      })\n      .catch(() => {});\n  }, []);\n\n  return (\n    <>\n      <div ref={app} className={classes.main}>\n        <div className={classes.main__posts}>\n          <PostsList isLoading={isLoadingInfo} />\n        </div>\n        <div className={classes['main__profile-info']}>\n          <SideProfileInfo />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Andrewgram;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/AuthPage.js",["230"],"import React from 'react';\nimport Auth from '../components/AuthComponents/Auth';\n\nconst AuthPage = () => {\n  return (\n    <>\n      <Auth />\n    </>\n  );\n};\n\nexport default AuthPage;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ProfilePage.js",["231"],"import React, { useEffect } from 'react';\nimport ProfileInfo from '../components/AppComponents/Profile/ProfileInfo';\nimport ProfilePostsGrid from '../components/AppComponents/Profile/ProfilePostsGrid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NewPost from '../components/AppComponents/Profile/NewPost';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHttp } from '../hooks/http.hook';\nimport { setUserPosts } from '../store/posts/actions';\nimport { useParams } from 'react-router-dom';\nimport { getUserInfo } from '../store/user/selectors';\nimport {\n  getRecommended,\n  getSubscriptions,\n} from '../store/subscribers/selectors';\nimport { setVisitedUserInfo } from '../store/user/actions';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nsmoothscroll.polyfill();\n\nconst useStyles = makeStyles(() => ({\n  'profile-page': {\n    padding: '4rem 2rem',\n    margin: '0 auto',\n  },\n}));\n\nconst ProfilePage = () => {\n  const classes = useStyles();\n\n  const { request, loading } = useHttp();\n\n  const { login } = useParams();\n\n  const dispatch = useDispatch();\n\n  const user = useSelector(getUserInfo);\n\n  const visitedUser = [\n    ...useSelector(getRecommended),\n    ...useSelector(getSubscriptions),\n  ].filter((item) => item.login === login)[0];\n\n  const isOwn = login === user.login;\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n    if (!isOwn) {\n      dispatch(setUserPosts([]));\n    }\n    request('/posts/users', 'post', { login })\n      .then((res) => {\n        dispatch(setUserPosts(res.posts, user.login));\n        dispatch(setVisitedUserInfo(res.userInfo));\n      })\n      .catch(() => {});\n  }, [login]);\n\n  return (\n    <div className={classes['profile-page']}>\n      <ProfileInfo\n        user={isOwn ? user : visitedUser}\n        isOwn={isOwn}\n        isLoading={loading}\n      />\n      {isOwn && <NewPost isLoading={loading} />}\n      <ProfilePostsGrid user={isOwn ? user : visitedUser} isLoading={loading} />\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/EntryComponents/Entry.js",["232"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Fade } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  entry__title: {\n    fontSize: '2.5rem',\n  },\n  entry__actions: {\n    marginTop: '50px',\n    textAlign: 'center',\n  },\n}));\n\nconst Entry = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [isAppear, setIsAppear] = useState({ title: false, actions: false });\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsAppear((prevState) => ({ ...prevState, title: true }));\n    }, 500);\n    setTimeout(() => {\n      setIsAppear((prevState) => ({ ...prevState, actions: true }));\n    }, 1000);\n  }, []);\n\n  const startApp = () => {\n    setTimeout(() => {\n      setIsAppear((prevState) => ({ ...prevState, title: false }));\n    }, 0);\n    setTimeout(() => {\n      setIsAppear((prevState) => ({ ...prevState, actions: false }));\n    }, 0);\n    setTimeout(() => {\n      history.push('/auth');\n    }, 500);\n  };\n\n  return (\n    <div className={classes.entry__content}>\n      <Fade in={isAppear.title} timeout={{ enter: 2000, exit: 500 }}>\n        <div className={classes.entry__title}>\n          Добро пожаловать в Andrewgram\n        </div>\n      </Fade>\n      <div className={classes.entry__actions}>\n        <Fade in={isAppear.actions} timeout={{ enter: 1500, exit: 500 }}>\n          <Button onClick={startApp} variant=\"contained\" color=\"primary\">\n            Войти\n          </Button>\n        </Fade>\n      </div>\n    </div>\n  );\n};\n\nexport default Entry;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ResetPassword.js",["233"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { useHttp } from '../../hooks/http.hook';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  'reset-form': {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    maxWidth: '500px',\n    margin: '0 auto',\n  },\n  'reset-form__input': {\n    marginBottom: '1rem',\n    minWidth: '250px',\n  },\n  'reset-form__title': {\n    marginBottom: '2rem',\n  },\n  'reset-form__action': {\n    marginTop: '2rem',\n  },\n  'reset-form__resp': {\n    fontSize: '1.2rem',\n  },\n  'reset-form__resp-success': {\n    color: theme.colors.success,\n  },\n  'reset-form__resp-error': {\n    color: theme.colors.error,\n  },\n}));\n\nconst ResetPassword = (props) => {\n  const { token } = props;\n\n  const [password, setPassword] = useState({ password: '', rePassword: '' });\n  const [error, setError] = useState({ password: false, rePassword: false });\n  const [errorText, setErrorText] = useState({ password: '', rePassword: '' });\n\n  const [serverError, setServerError] = useState({\n    isError: false,\n    errorText: '',\n  });\n  const [isReady, setIsReady] = useState(false);\n\n  const classes = useStyles();\n  const history = useHistory();\n  const { loading, request } = useHttp();\n\n  const handleInputs = (e) => {\n    const field = e.target;\n    if (field.name === 'password') {\n      if (field.value.length < 7) {\n        setError((prevState) => ({ ...prevState, password: true }));\n        setErrorText((prevState) => ({\n          ...prevState,\n          password: 'Минимальная длина 7 символов',\n        }));\n      } else {\n        setError((prevState) => ({ ...prevState, password: false }));\n        setErrorText((prevState) => ({ ...prevState, password: '' }));\n      }\n    }\n    if (field.name === 'rePassword') {\n      if (password.password !== field.value) {\n        setError((prevState) => ({ ...prevState, rePassword: true }));\n        setErrorText((prevState) => ({\n          ...prevState,\n          rePassword: 'Пароли должны совпадать',\n        }));\n      } else {\n        setError((prevState) => ({ ...prevState, rePassword: false }));\n        setErrorText((prevState) => ({ ...prevState, rePassword: '' }));\n      }\n    }\n    setPassword((prevState) => ({ ...prevState, [field.name]: field.value }));\n  };\n\n  const resetPassword = (e) => {\n    e.preventDefault();\n\n    if (password.password.length < 7) {\n      setError((prevState) => ({ ...prevState, password: true }));\n      setErrorText((prevState) => ({\n        ...prevState,\n        password: 'Минимальная длина 7 символов',\n      }));\n      return;\n    }\n\n    if (password.password !== password.rePassword) {\n      setError((prevState) => ({ ...prevState, rePassword: true }));\n      setErrorText((prevState) => ({\n        ...prevState,\n        rePassword: 'Пароли должны совпадать',\n      }));\n      return;\n    }\n\n    request('/auth/reset/password', 'post', Object.assign(password, { token }))\n      .then((resp) => {\n        if (resp.success) {\n          setServerError({ isError: false, errorText: '' });\n          setPassword({ password: '', rePassword: '' });\n        }\n      })\n      .catch((err) =>\n        setServerError({ isError: true, errorText: err.message || err })\n      )\n      .finally(() => setIsReady(true));\n  };\n\n  return (\n    <form className={classes['reset-form']}>\n      <div className={classes['reset-form__title']}>Введите новый пароль</div>\n      <TextField\n        className={classes['reset-form__input']}\n        error={error.password}\n        type=\"password\"\n        id=\"filled-error-helper-text23\"\n        label=\"Пароль\"\n        onChange={handleInputs}\n        helperText={errorText.password}\n        variant=\"filled\"\n        name={'password'}\n        value={password.password}\n      />\n      <TextField\n        className={classes['reset-form__input']}\n        error={error.rePassword}\n        type=\"password\"\n        id=\"filled-error-helper-text44\"\n        label=\"Пароль ещё раз\"\n        onChange={handleInputs}\n        helperText={errorText.rePassword}\n        variant=\"filled\"\n        name={'rePassword'}\n        value={password.rePassword}\n      />\n      <div className={classes['reset-form__resp']}>\n        {isReady && serverError.isError && (\n          <div className={classes['reset-form__resp-error']}>\n            {serverError.errorText}\n          </div>\n        )}\n        {isReady && !serverError.isError && (\n          <div className={classes['reset-form__resp-success']}>\n            Вы успешно изменили пароль\n          </div>\n        )}\n      </div>\n      <Button\n        onClick={resetPassword}\n        className={classes['reset-form__action']}\n        disabled={loading}\n        type={'submit'}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Измeнить пароль\n      </Button>\n      {isReady && !serverError.isError && (\n        <Button\n          onClick={() => history.push('/auth')}\n          className={classes['reset-form__action']}\n          disabled={loading}\n          type={'submit'}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Авторизоваться\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default ResetPassword;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Loaders/Loader.js",["234"],"import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => {\n  return (\n    <div id=\"cube-loader\">\n      <div className=\"caption\">\n        <div className=\"cube-loader\">\n          <div className=\"cube loader-1\" />\n          <div className=\"cube loader-2\" />\n          <div className=\"cube loader-4\" />\n          <div className=\"cube loader-3\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/hooks/http.hook.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostsList/PostsList.js",["235"],"import React, { useEffect, useState } from 'react';\nimport Post from '../PostComponents/Post/Post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as postsActions from '../../../store/posts/actions';\nimport { getUserInfo } from '../../../store/user/selectors';\nimport { getPosts } from '../../../store/posts/selectors';\nimport { useHttp } from '../../../hooks/http.hook';\nimport { setAllPosts, toggleLoadingLike } from '../../../store/posts/actions';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { CircularProgress } from '@material-ui/core';\n\nconst PostsList = (props) => {\n  const { isLoading } = props;\n\n  const serverPosts = useSelector(getPosts);\n\n  const dispatch = useDispatch();\n\n  const user = useSelector(getUserInfo);\n\n  const [isAllPosts, setIsAllPosts] = useState(false);\n\n  const { request } = useHttp();\n\n  const toggleLikePost = (e) => {\n    const targetData = e.target.dataset;\n    if (targetData.type === 'post' && targetData.info) {\n      dispatch(toggleLoadingLike());\n      request('/post/like', 'post', {\n        id: targetData.info,\n        likerLogin: user.login,\n      })\n        .then(() => {\n          dispatch(postsActions.toggleLike(targetData.info, user.login));\n        })\n        .catch(() => {})\n        .finally(() => dispatch(toggleLoadingLike()));\n    }\n  };\n\n  const loadPosts = async () => {\n    const res = await request('/posts/all', 'post', {\n      login: user.login,\n      length: serverPosts.length + 3,\n    });\n    dispatch(setAllPosts(res.posts, user.login));\n    if (res.isAllPosts) {\n      setIsAllPosts(true);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('dblclick', toggleLikePost);\n    return () => {\n      document.removeEventListener('dblclick', toggleLikePost);\n    };\n  }, []);\n\n  const loading = [1, 2, 3];\n\n  return (\n    <>\n      {isLoading ? (\n        loading.map((item, index) => <Post key={index} loadingPost={true} />)\n      ) : (\n        <InfiniteScroll\n          next={loadPosts}\n          hasMore={!isAllPosts}\n          loader={\n            <CircularProgress\n              style={{ margin: '1rem auto', display: 'block' }}\n              color=\"primary\"\n            />\n          }\n          dataLength={serverPosts.length}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>На этом все!</b>\n            </p>\n          }\n        >\n          {serverPosts.map((item) => (\n            <Post\n              info={{\n                isLiked: !!item.isLiked,\n                likes: item.likes,\n                comments: item.comments,\n                id: item._id,\n                avatar: item.avatar,\n                imgSrc: item.imageSrc,\n                ownerLogin: item.ownerLogin,\n                created: item.created,\n              }}\n              key={item._id}\n            />\n          ))}\n          {!serverPosts.length && (\n            <div\n              style={{\n                fontSize: '2rem',\n                textAlign: 'center',\n                textTransform: 'uppercase',\n                marginTop: '5rem',\n              }}\n            >\n              Публикаций пока что нету\n            </div>\n          )}\n        </InfiniteScroll>\n      )}\n    </>\n  );\n};\n\nexport default PostsList;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileInfo.js",["236"],"import ProfileRef from './ProfileRef/ProfileRef';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\nimport {\n  getLoading,\n  getRecommended,\n} from '../../../store/subscribers/selectors';\n\nconst useStyles = makeStyles(() => ({\n  'profile-info': {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  'profile-loading': {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    '& span:last-of-type': {\n      marginTop: '1rem',\n    },\n  },\n  '@media (min-width: 600px)': {\n    'profile-info': {\n      paddingLeft: '10rem',\n      flexDirection: 'column',\n    },\n    'profile-loading': {\n      flexDirection: 'row',\n      '& span:last-of-type': {\n        marginTop: 0,\n      },\n    },\n  },\n}));\n\nconst ProfileInfo = (props) => {\n  const { isLoading, isOwn } = props;\n\n  const { user } = props;\n\n  const classes = useStyles();\n\n  const recommended = useSelector(getRecommended);\n\n  const isLoadingSubs = useSelector(getLoading);\n\n  const userProfType = recommended.find((item) => item.login === user.login)\n    ? 'recommended'\n    : 'subscription';\n\n  return (\n    <div className={classes['profile-info']}>\n      {!isLoading && (\n        <ProfileRef\n          type={isOwn ? '' : userProfType}\n          isLoading={isLoadingSubs}\n          login={user.login}\n          avatar={user.avatar || ''}\n          isPageComp\n          isOwn={isOwn}\n        />\n      )}\n      {isLoading && (\n        <div className={classes['profile-loading']}>\n          <Skeleton\n            animation={'wave'}\n            variant=\"circle\"\n            height={'5rem'}\n            width={'5rem'}\n          />\n          <Skeleton\n            animation={'wave'}\n            variant=\"text\"\n            height={'4vh'}\n            width={'80%'}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewPost.js",["237"],"import React, { useRef, useState } from 'react';\nimport { Backdrop, Button, Input, Modal, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDispatch } from 'react-redux';\nimport { addUserPost } from '../../../store/posts/actions';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Montserrat',\n  },\n  'new-post': {\n    fontFamily: 'Montserrat',\n    minWidth: '500px',\n    boxSizing: 'border-box',\n    backgroundColor: 'white',\n    borderRadius: '10px',\n    boxShadow: theme.shadows[5],\n    position: 'relative',\n    padding: '3rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n  'new-post__title': {\n    marginBottom: '1rem',\n    fontWeight: 'bold',\n    fontSize: '1.5rem',\n  },\n  'new-post__close-btn': {\n    position: 'absolute',\n    top: '1.5rem',\n    right: '1.5rem',\n  },\n  'new-post__info': {\n    alignSelf: 'flex-start',\n    width: '100%',\n  },\n  'new-post__load-btn': {\n    marginTop: '1rem',\n  },\n  'new-post__input-file': {\n    width: '100%',\n    marginBottom: '2rem',\n  },\n  'new-post__input-title': {\n    fontSize: '1.2rem',\n    marginBottom: '1rem',\n  },\n  'new-post__error': {\n    color: theme.colors.error,\n    fontWeight: 'bold',\n    marginTop: '1rem',\n  },\n}));\n\nconst NewPost = (props) => {\n  const { isLoading } = props;\n  const [isNewPost, setIsNewPost] = useState(false);\n\n  const [newPostInfo, setNewPostInfo] = useState('');\n\n  const [isError, setIsError] = useState(false);\n\n  const handleInput = (e) => {\n    setNewPostInfo(e.target.value);\n  };\n\n  const classes = useStyles();\n\n  const fileInput = useRef();\n\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setIsNewPost(true);\n  };\n\n  const handleClose = () => {\n    setIsNewPost(false);\n  };\n\n  const download = async () => {\n    try {\n      if (!fileInput.current.files[0]) {\n        setIsError(true);\n        return;\n      }\n\n      if (isError) setIsError(false);\n      let formData = new FormData();\n      formData.append('avatar', fileInput.current.files[0]);\n      formData.set('user', 'andrew');\n      formData.set('info', newPostInfo);\n\n      const res = await fetch('/post/new', {\n        method: 'post',\n        body: formData,\n      });\n\n      const data = await res.json();\n\n      if (data.post) {\n        dispatch(addUserPost(data.post));\n        setIsNewPost(false);\n        setNewPostInfo('');\n      }\n    } catch (e) {}\n  };\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '1rem' }}>\n      {isLoading ? (\n        <Skeleton width={'20%'} style={{ margin: '0 auto' }} />\n      ) : (\n        <>\n          <Button onClick={handleOpen}>Создать пост</Button>\n          <Modal\n            disableAutoFocus\n            disableEnforceFocus\n            className={classes.modal}\n            open={isNewPost}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n          >\n            <div className={classes['new-post']}>\n              <CloseIcon\n                onClick={handleClose}\n                className={classes['new-post__close-btn']}\n              />\n              <div className={classes['new-post__title']}>\n                Создание нового поста\n              </div>\n              <div className={classes['new-post__input-title']}>Фото поста</div>\n              <Input\n                accept=\"image/*\"\n                id=\"contained-button-file\"\n                multiple\n                className={classes['new-post__input-file']}\n                type=\"file\"\n                name={'avatar'}\n                inputRef={fileInput}\n              />\n              <div className={classes['new-post__input-title']}>\n                Информация о посте\n              </div>\n              <TextField\n                className={classes['new-post__info']}\n                id=\"standard-textarea\"\n                placeholder=\"Информация\"\n                multiline\n                onChange={handleInput}\n                value={newPostInfo}\n              />\n              {isError && (\n                <div className={classes['new-post__error']}>\n                  Сначала загрузите фото\n                </div>\n              )}\n              <Button\n                className={classes['new-post__load-btn']}\n                variant={'contained'}\n                color={'primary'}\n                onClick={download}\n              >\n                загрузить\n              </Button>\n            </div>\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NewPost;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo.js",["238"],"import React from 'react';\nimport ProfileRef from '../../Profile/ProfileRef/ProfileRef';\nimport SubscribeSection from '../SubscribeSection/SubscribeSection';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { getUserInfo } from '../../../../store/user/selectors';\n\nconst useStyles = makeStyles(() => ({\n  'profile-info': {\n    padding: '.5rem',\n  },\n}));\nconst SideProfileInfo = () => {\n  const user = useSelector(getUserInfo);\n\n  const classes = useStyles();\n  return (\n    <div className={classes['profile-info']}>\n      <ProfileRef isOwn avatar={user.avatar} login={user.login} />\n      <SubscribeSection />\n    </div>\n  );\n};\n\nexport default SideProfileInfo;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePostsGrid.js",["239"],"import React, { useState } from 'react';\nimport ProfilePost from './ProfilePost';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Backdrop, Modal } from '@material-ui/core';\nimport Post from '../PostComponents/Post/Post';\n\nimport { useSelector } from 'react-redux';\nimport { getUserPosts } from '../../../store/posts/selectors';\n\nconst useStyles = makeStyles(() => ({\n  profile__posts: {\n    display: 'grid',\n    marginTop: '2rem',\n    gridTemplateColumns: 'repeat(1, 1fr)',\n    gridTemplateRows: 'repeat(2, 1fr)',\n    gridColumnGap: '2rem',\n    gridRowGap: '2rem',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflowY: 'scroll',\n    width: '100vw',\n  },\n  'profile__modal-post': {\n    width: '80%',\n    height: 'auto',\n    outline: 'none',\n    position: 'absolute',\n    top: '1rem',\n    padding: '1rem 0',\n  },\n  'profile__posts-exist': {\n    textAlign: 'center',\n    marginTop: '2rem',\n    fontWeight: 'bold',\n    fontSize: '2rem',\n    gridColumnStart: 1,\n    gridColumnEnd: 5,\n    gridRowStart: 2,\n    gridRowEnd: 3,\n  },\n  '@media (min-width: 600px)': {\n    profile__posts: {\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      gridTemplateRows: 'repeat(2, 1fr)',\n    },\n    'profile__modal-post': {\n      width: '50%',\n      height: 'auto',\n      outline: 'none',\n      position: 'relative',\n    },\n  },\n}));\n\nconst ProfilePostsGrid = (props) => {\n  const [isPostOpen, setIsPostOpen] = useState(false);\n  const [modalInfo, setModalInfo] = useState(false);\n  const classes = useStyles();\n\n  const { user, isLoading } = props;\n\n  const posts = useSelector(getUserPosts);\n\n  const handleClose = () => {\n    setIsPostOpen(false);\n  };\n\n  const openModal = (info) => {\n    setModalInfo(info);\n    setIsPostOpen(true);\n  };\n\n  const loadingPostsArr = [1, 2, 3, 4, 5, 6];\n\n  return (\n    <>\n      <div className={classes.profile__posts}>\n        {!isLoading &&\n          posts.map((item) => (\n            <ProfilePost\n              key={item._id}\n              id={item._id}\n              avatar={user.avatar}\n              imgSrc={item.imageSrc}\n              info={item.info}\n              created={item.created}\n              isLiked={item.isLiked}\n              comments={item.comments}\n              likes={item.likes}\n              ownerLogin={item.ownerLogin}\n              open={openModal}\n            />\n          ))}\n        {!isLoading && !posts.length && (\n          <div className={classes['profile__posts-exist']}>Постов нету</div>\n        )}\n        {isLoading &&\n          loadingPostsArr.map((item, index) => (\n            <ProfilePost key={index} isLoading />\n          ))}\n      </div>\n      {isPostOpen && (\n        <Modal\n          disableAutoFocus\n          disableEnforceFocus={true}\n          disableRestoreFocus={true}\n          disablePortal={true}\n          className={classes.modal}\n          open={isPostOpen}\n          onClose={handleClose}\n          onClick={(event) => {\n            if (event.target.tagName === 'A') {\n              handleClose();\n            }\n          }}\n          closeAfterTransition\n          disableScrollLock={true}\n          BackdropComponent={Backdrop}\n        >\n          <div className={classes['profile__modal-post']}>\n            <Post\n              isUserPost={true}\n              handleClose={handleClose}\n              setModalInfo={setModalInfo}\n              info={modalInfo}\n            />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ProfilePostsGrid;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Login.js",["240"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { useHttp } from '../../hooks/http.hook';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authUser } from '../../store/user/actions';\nimport {\n  setRecommended,\n  setSubscriptions,\n} from '../../store/subscribers/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  inputs: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    width: '60%',\n    marginTop: '20px',\n  },\n  'form-actions': {\n    width: '100%',\n    maxWidth: '200px',\n    margin: '2rem auto 0',\n    display: 'flex',\n    justifyContent: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  'form-title': {\n    textAlign: 'center',\n    fontSize: '1.5rem',\n  },\n  form: {\n    '& .MuiFormHelperText-root\t': {\n      fontSize: '1rem',\n    },\n  },\n  'login-error': {\n    color: theme.colors.error,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n}));\n\nconst Login = (props) => {\n  const [error, setError] = useState({ login: false, password: false });\n  const [errorText, setErrorText] = useState({ login: '', password: '' });\n  const [inputs, setInputs] = useState({ login: '', password: '' });\n\n  const [isServerError, setIsServerError] = useState(false);\n  const [serverErrorText, setServerErrorText] = useState('');\n\n  const { loading, request } = useHttp();\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const { setIsAppear } = props;\n\n  const handleInputs = (e) => {\n    if (error[e.target.name]) {\n      setError((prevState) => ({ ...prevState, [e.target.name]: false }));\n      setErrorText((prevState) => ({ ...prevState, [e.target.name]: '' }));\n    }\n    if (!e.target.value) {\n      setError((prevState) => ({ ...prevState, [e.target.name]: true }));\n      setErrorText((prevState) => ({\n        ...prevState,\n        [e.target.name]: 'Введите значение',\n      }));\n    }\n    return setInputs((prevInput) => ({\n      ...prevInput,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleForm = async (e) => {\n    e.preventDefault();\n    try {\n      if (error.login || error.password) {\n        if (!inputs.login || !inputs.password) {\n          return;\n        }\n      }\n      let isValid = true;\n      for (let value in inputs) {\n        if (!inputs[value]) {\n          setError((prevState) => ({\n            ...prevState,\n            [value]: true,\n          }));\n          setErrorText((prevState) => ({\n            ...prevState,\n            [value]: 'Введите значение',\n          }));\n          isValid = false;\n        }\n      }\n\n      if (!isValid) return;\n\n      const user = await request('/auth/login', 'post', inputs);\n\n      if (!user.userInfo) {\n        throw new Error('Такого пользователя нету');\n      } else {\n        if (isServerError) {\n          setIsServerError(false);\n        }\n        setIsAppear(false);\n        setTimeout(() => {\n          history.push('/app');\n        }, 700);\n      }\n\n      dispatch(authUser(user));\n      dispatch(setSubscriptions(user.userInfo.subscriptions));\n      dispatch(setRecommended(user.userInfo.recommended));\n    } catch (err) {\n      if (err.message.toLowerCase().includes('пароль')) {\n        setError((prevState) => ({ ...prevState, password: true }));\n      } else if (e.message.toLowerCase().includes('пользователя')) {\n        setError((prevState) => ({ ...prevState, login: true }));\n      }\n      setIsServerError(true);\n      setServerErrorText(err.message);\n    }\n  };\n\n  const forgotPasswordHandle = () => {\n    setIsAppear(false);\n    setTimeout(() => {\n      history.push('/auth/reset');\n    }, 700);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes['form-title']}>Введите данные</div>\n      <form className={classes.form}>\n        <div className={classes.inputs}>\n          <TextField\n            className={classes.input}\n            error={error.login}\n            id=\"filled-error-helper-text\"\n            label=\"Логин\"\n            onChange={handleInputs}\n            helperText={errorText.login}\n            variant=\"filled\"\n            name={'login'}\n            value={inputs.login}\n          />\n          <TextField\n            className={classes.input}\n            error={error.password}\n            type=\"password\"\n            id=\"filled-error-helper-text1\"\n            label=\"Пароль\"\n            onChange={handleInputs}\n            helperText={errorText.password}\n            variant=\"filled\"\n            name={'password'}\n            value={inputs.password}\n          />\n        </div>\n        {isServerError && (\n          <p className={classes['login-error']}>{serverErrorText}</p>\n        )}\n        <div className={classes['form-actions']}>\n          <Button\n            onClick={handleForm}\n            disabled={loading}\n            type={'submit'}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Войти\n          </Button>\n          <Button\n            onClick={forgotPasswordHandle}\n            variant=\"contained\"\n            style={{ marginTop: '20px' }}\n            disabled={loading}\n            color=\"primary\"\n          >\n            Забыли пароль\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Register.js",["241"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHttp } from '../../hooks/http.hook';\n\nconst useStyles = makeStyles((theme) => ({\n  inputs: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    width: '60%',\n    marginTop: '20px',\n  },\n  'form-actions': {\n    width: '100%',\n    marginTop: '2rem',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  'form-title': {\n    textAlign: 'center',\n    fontSize: '1.5rem',\n  },\n  form: {\n    '& .MuiFormHelperText-root\t': {\n      fontSize: '1rem',\n    },\n  },\n  'register-error': {\n    color: theme.colors.error,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  'register-success': {\n    color: theme.colors.success,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: '1.2rem',\n  },\n}));\nconst validateEmail = (email) => {\n  const re =\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nconst Register = () => {\n  const [errors, setErrors] = useState({\n    login: false,\n    password: false,\n    name: false,\n    email: false,\n    rePassword: false,\n  });\n  const [errorText, setErrorText] = useState({\n    login: '',\n    password: '',\n    name: '',\n    email: '',\n    rePassword: '',\n  });\n  const [inputs, setInputs] = useState({\n    login: '',\n    password: '',\n    name: '',\n    email: '',\n    rePassword: '',\n  });\n\n  const { loading, request } = useHttp();\n  const [isServerError, setIsServerError] = useState(false);\n  const [serverErrorText, setServerErrorText] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const checkFieldValue = (field, min, error) => {\n    if (field.value.length < min) {\n      setErrors((prevState) => ({ ...prevState, [field.name]: true }));\n      setErrorText((prevState) => ({ ...prevState, [field.name]: error }));\n      return true;\n    } else if (field.value.length >= min) {\n      setErrors((prevState) => ({ ...prevState, [field.name]: false }));\n      setErrorText((prevState) => ({ ...prevState, [field.name]: '' }));\n      return false;\n    }\n  };\n\n  const handleInputs = (e) => {\n    const field = e.target;\n    if (field.name === 'login') {\n      checkFieldValue(field, 5, 'Минимальная длина 5 символов');\n    }\n    if (field.name === 'password') {\n      checkFieldValue(field, 7, 'Минимальная длина 7 символов');\n    }\n    if (field.name === 'email') {\n      if (!validateEmail(field.value)) {\n        setErrors((prevState) => ({ ...prevState, email: true }));\n        setErrorText((prevState) => ({\n          ...prevState,\n          email: 'Введите правильный email',\n        }));\n      } else {\n        setErrors((prevState) => ({ ...prevState, email: false }));\n        setErrorText((prevState) => ({ ...prevState, email: '' }));\n      }\n    }\n    if (field.name === 'rePassword') {\n      if (field.value !== inputs.password) {\n        setErrors((prevState) => ({ ...prevState, rePassword: true }));\n        setErrorText((prevState) => ({\n          ...prevState,\n          rePassword: 'Пароли не совпадают',\n        }));\n      } else if (errors.rePassword) {\n        setErrors((prevState) => ({ ...prevState, rePassword: false }));\n        setErrorText((prevState) => ({ ...prevState, rePassword: '' }));\n      }\n    }\n    return setInputs((prevInput) => ({\n      ...prevInput,\n      [field.name]: field.value,\n    }));\n  };\n\n  const handleForm = async (e) => {\n    e.preventDefault();\n    try {\n      let isValid = true;\n      for (let value in inputs) {\n        if (value === 'name') continue;\n        if (!inputs[value]) {\n          isValid = false;\n          setErrors((prevState) => ({ ...prevState, [value]: true }));\n          setErrorText((prevState) => ({\n            ...prevState,\n            [value]: 'Введите значение',\n          }));\n        }\n      }\n      if (!isValid) return;\n\n      for (let error in errors) {\n        if (error === 'name') continue;\n        if (errors[error]) return;\n      }\n\n      const userInputs = { ...inputs };\n\n      delete userInputs.rePassword;\n\n      const userValues = { ...userInputs };\n\n      const user = await request('/auth/register', 'post', userValues);\n\n      if (!user.user) {\n        throw new Error('Ошибка регистрации');\n      } else {\n        if (isServerError) {\n          setIsServerError(false);\n        }\n        setInputs({\n          login: '',\n          name: '',\n          email: '',\n          password: '',\n          rePassword: '',\n        });\n        setIsSuccess(true);\n      }\n    } catch (error) {\n      if (error.message.toLowerCase().includes('логин')) {\n        setErrors((prevState) => ({ ...prevState, login: true }));\n      } else if (error.message.includes('email')) {\n        setErrors((prevState) => ({ ...prevState, email: true }));\n      } else if (\n        error.message.toLowerCase().includes('пароль') ||\n        error.message.toLowerCase().includes('пароли')\n      ) {\n        setErrors((prevState) => ({\n          ...prevState,\n          password: true,\n          rePassword: true,\n        }));\n      }\n      setIsServerError(true);\n      setServerErrorText(e.message);\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes['form-title']}>Введите данные</div>\n      <form className={classes.form}>\n        <div className={classes.inputs}>\n          <TextField\n            className={classes.input}\n            error={errors.login}\n            id=\"filled-error-helper-text2\"\n            label=\"Логин\"\n            onChange={handleInputs}\n            helperText={errorText.login}\n            variant=\"filled\"\n            name={'login'}\n            value={inputs.login}\n          />\n          <TextField\n            className={classes.input}\n            error={errors.name}\n            id=\"filled-error-helper-text5\"\n            label=\"Имя\"\n            onChange={handleInputs}\n            helperText={errorText.name}\n            variant=\"filled\"\n            name={'name'}\n            value={inputs.name}\n          />\n          <TextField\n            className={classes.input}\n            error={errors.email}\n            id=\"filled-error-helper-text6\"\n            label=\"Email\"\n            onChange={handleInputs}\n            helperText={errorText.email}\n            variant=\"filled\"\n            name={'email'}\n            value={inputs.email}\n          />\n          <TextField\n            className={classes.input}\n            error={errors.password}\n            type=\"password\"\n            id=\"filled-error-helper-text3\"\n            label=\"Пароль\"\n            onChange={handleInputs}\n            helperText={errorText.password}\n            variant=\"filled\"\n            name={'password'}\n            value={inputs.password}\n          />\n          <TextField\n            className={classes.input}\n            error={errors.rePassword}\n            type=\"password\"\n            id=\"filled-error-helper-text4\"\n            label=\"Пароль ещё раз\"\n            onChange={handleInputs}\n            helperText={errorText.rePassword}\n            variant=\"filled\"\n            name={'rePassword'}\n            value={inputs.rePassword}\n          />\n        </div>\n        {isServerError && (\n          <p className={classes['register-error']}>{serverErrorText}</p>\n        )}\n        {isSuccess && (\n          <p className={classes['register-success']}>\n            Вы успешно зарегистрировались\n          </p>\n        )}\n        <div className={classes['form-actions']}>\n          <Button\n            onClick={handleForm}\n            disabled={loading}\n            type={'submit'}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Зарегестривароваться\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePost.js",["242"],"import React from 'react';\nimport { Skeleton } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\n\nconst useStyles = makeStyles(() => ({\n  'profile-post': {\n    height: '10rem',\n    overflowY: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&:hover $profile-post__hover': {\n      visibility: 'visible',\n    },\n  },\n  'profile-post__img': {\n    width: '100%',\n    height: 'auto',\n  },\n  'profile-post__hover': {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0, .5)',\n    color: 'white',\n    fontSize: '1.5rem',\n    transition: '.3s',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    visibility: 'hidden',\n  },\n  'profile-post__icons-prev': {\n    width: '2rem',\n    height: '2rem',\n    color: 'white',\n    display: 'flex',\n    marginRight: '3px',\n    '&:last-child': {\n      marginLeft: '1rem',\n    },\n  },\n  '@media (min-width: 600px)': {\n    'profile-post': {\n      height: '20rem',\n    },\n  },\n}));\n\nconst ProfilePost = (props) => {\n  const {\n    isLoading = false,\n    open,\n    isLiked,\n    created,\n    imgSrc,\n    info,\n    comments,\n    avatar,\n    ownerLogin,\n    likes,\n    id,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {isLoading ? (\n        <div>\n          <Skeleton\n            animation=\"wave\"\n            variant=\"rect\"\n            style={{ width: '100%', height: '20rem' }}\n          />\n        </div>\n      ) : (\n        <div\n          className={classes['profile-post']}\n          onClick={() =>\n            open({\n              imgSrc,\n              created,\n              comments,\n              avatar,\n              text: info,\n              ownerLogin,\n              likes,\n              id,\n              isLiked,\n            })\n          }\n        >\n          <img\n            className={classes['profile-post__img']}\n            src={'/' + imgSrc}\n            alt=\"post-image\"\n          />\n          <div className={classes['profile-post__hover']}>\n            <FavoriteIcon className={classes['profile-post__icons-prev']} />\n            {likes.length}\n            <ChatBubbleIcon className={classes['profile-post__icons-prev']} />\n            {comments.length}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProfilePost;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileRef/ProfileRef.js",["243"],"import React, { useState } from 'react';\nimport { Avatar, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  toggleLoading,\n  toggleSubs,\n} from '../../../../store/subscribers/actions';\nimport { Link } from 'react-router-dom';\nimport { useHttp } from '../../../../hooks/http.hook';\nimport { logoutUser, toggleUserSubs } from '../../../../store/user/actions';\nimport NewAvatar from '../NewAvatar';\nimport {\n  getUserInfo,\n  getVisitedUserInfo,\n} from '../../../../store/user/selectors';\nimport ProfileSubs from '../ProfileSubs';\n\nconst useStyles = makeStyles((theme) => ({\n  profile: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: (props) => (props.isPage ? 'column' : 'row'),\n    justifyContent: 'space-between',\n    width: '100%',\n    marginTop: (props) => (props.isList ? '1rem' : ''),\n  },\n  profile__info: {\n    display: 'flex',\n    alignItems: 'center',\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  profile__avatar: {\n    width: '4rem',\n    height: '4rem',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  profile__name: {\n    marginLeft: '1rem',\n    fontWeight: 'bold',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  'profile__sbsc-btn': {\n    fontSize: '1rem',\n    marginRight: '.5rem',\n    textTransform: 'none',\n    color: (props) => (props.type === 'subscription' ? '' : theme.colors.main),\n    '&:hover': {\n      background: 'none',\n    },\n  },\n  'profile__logout-btn': {\n    minWidth: '5rem',\n    minHeight: '2rem',\n    marginTop: '1rem',\n  },\n  'profile__subs-list': {\n    marginTop: '1rem',\n    fontWeight: 'bold',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  '@media (min-width: 600px)': {\n    profile: {\n      flexDirection: () => 'row',\n    },\n    'profile__logout-btn': {\n      marginTop: '0',\n    },\n    'profile__sbsc-btn': {\n      fontSize: '.8rem',\n    },\n    'profile__subs-list': {\n      marginTop: 0,\n    },\n  },\n}));\n\nconst ProfileRef = (props) => {\n  const {\n    type,\n    isOwn,\n    avatarClass,\n    isLoading,\n    isPageComp = false,\n    avatar = '',\n    login = 'andrew',\n    isList = false,\n  } = props;\n\n  const dispatch = useDispatch();\n\n  const { request, loading } = useHttp();\n  const [isNewAvatar, setNewAvatar] = useState(false);\n\n  const user = useSelector(getUserInfo);\n\n  const visitedUser = useSelector(getVisitedUserInfo);\n\n  const toggleSubsBtn = () => {\n    dispatch(toggleLoading());\n    request('/user/subs', 'post', {\n      login,\n      avatar: avatar,\n      type,\n      userLogin: user.login,\n    })\n      .then((res) => {\n        if (res.success) {\n          dispatch(toggleSubs({ login, type }));\n          dispatch(toggleUserSubs({ login, avatar }));\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        dispatch(toggleLoading());\n      });\n  };\n\n  const btnText = type === 'subscription' ? 'Отписаться' : 'Подписаться';\n\n  const logout = () => {\n    request('/auth/logout')\n      .then((res) => {\n        if (res.success) {\n          dispatch(logoutUser());\n        }\n      })\n      .catch(() => {});\n  };\n\n  const classes = useStyles({ type, isOwn, isPage: isPageComp, isList });\n\n  return (\n    <div className={classes.profile}>\n      {isPageComp ? (\n        <>\n          <div className={classes.profile__info}>\n            <Avatar\n              className={avatarClass || classes.profile__avatar}\n              src={'/' + avatar}\n            />\n            <div className={classes.profile__name}>{login}</div>\n          </div>\n          {isPageComp && (\n            <ProfileSubs\n              className={classes['profile__subs-list']}\n              ownUser={user}\n              user={isOwn ? user : visitedUser}\n            />\n          )}\n          {isOwn && (\n            <Button\n              variant={'contained'}\n              color={'primary'}\n              onClick={() => setNewAvatar(true)}\n              disabled={loading}\n              className={classes['profile__logout-btn']}\n            >\n              Изменить аватар\n            </Button>\n          )}\n        </>\n      ) : (\n        <Link\n          to={{ pathname: '/profile/' + login }}\n          className={classes.profile__info}\n        >\n          <Avatar\n            alt=\"Avatar\"\n            className={avatarClass || classes.profile__avatar}\n            src={'/' + avatar}\n          />\n          <div className={classes.profile__name}>{login}</div>\n        </Link>\n      )}\n      {isOwn ? (\n        !isList && (\n          <Button\n            variant={'contained'}\n            color={'primary'}\n            onClick={logout}\n            disabled={loading}\n            className={classes['profile__logout-btn']}\n          >\n            Выйти\n          </Button>\n        )\n      ) : (\n        <Button\n          disableRipple\n          disabled={isLoading}\n          onClick={toggleSubsBtn}\n          className={classes['profile__sbsc-btn']}\n        >\n          {btnText}\n        </Button>\n      )}\n      {isNewAvatar && <NewAvatar login={login} open={setNewAvatar} />}\n    </div>\n  );\n};\n\nexport default ProfileRef;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/SubscribeSection.js",["244"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Subscribes from './Subscribes';\nimport { useSelector } from 'react-redux';\nimport {\n  getRecommended,\n  getSubscriptions,\n} from '../../../../store/subscribers/selectors';\n\nconst useStyles = makeStyles(() => ({\n  'subscribe-section': {\n    marginTop: '2rem',\n  },\n}));\n\nconst SubscribeSection = () => {\n  const classes = useStyles();\n\n  const subscribed = useSelector(getSubscriptions);\n\n  const recommended = useSelector(getRecommended);\n\n  return (\n    <section className={classes['subscribe-section']}>\n      <Subscribes subscribers={subscribed} type={'subscription'} />\n      <Subscribes subscribers={recommended} type={'recommended'} />\n    </section>\n  );\n};\n\nexport default SubscribeSection;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/Subscribes.js",["245"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProfileRef from '../../Profile/ProfileRef/ProfileRef';\nimport { useSelector } from 'react-redux';\nimport { getLoading } from '../../../../store/subscribers/selectors';\n\nconst useStyles = makeStyles(() => ({\n  'subscribe-section': {\n    marginTop: (info) => (info.type === 'recommended' ? '2rem' : 0),\n    border: '1px solid rgb(219, 219, 219)',\n    backgroundColor: '2px solid black',\n    borderRadius: '3px',\n    padding: '1rem 0 1rem 1rem',\n    boxShadow:\n      '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n  },\n  'subscribe-section__list': {\n    marginTop: '1rem',\n    overflowX: 'hidden',\n    maxHeight: '200px',\n    fontSize: '1rem',\n    '& div': {\n      marginBottom: '.5rem',\n    },\n  },\n  'subscribe-section__no-subs-text': {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    padding: '1rem 1rem 0 0',\n  },\n  'subscribe-section__profile': {\n    width: '3rem',\n    height: '3rem',\n  },\n}));\n\nconst Subscribes = (props = []) => {\n  const { type, subscribers = [] } = props;\n\n  const classes = useStyles({ type });\n\n  const isLoading = useSelector(getLoading);\n\n  return (\n    <div className={classes['subscribe-section']}>\n      <span>\n        {type === 'subscription' ? 'Подписки' : 'Рекомендации для вас'}\n      </span>\n      <div className={classes['subscribe-section__list']}>\n        {subscribers.map((item, index) => (\n          <ProfileRef\n            key={index}\n            type={type}\n            avatar={item.avatar}\n            isLoading={isLoading}\n            avatarClass={classes['subscribe-section__profile']}\n            login={item.login}\n          />\n        ))}\n        {!subscribers.length && (\n          <div className={classes['subscribe-section__no-subs-text']}>\n            {type === 'subscription'\n              ? 'Подписок пока нет'\n              : 'Рекомендаций пока нету'}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Subscribes;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileSubs.js",["246"],"import React, { useState } from 'react';\nimport { Backdrop, Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ProfileRef from './ProfileRef/ProfileRef';\n\nconst useStyles = makeStyles((theme) => ({\n  'profile__subs-title': {\n    marginTop: '1rem',\n    fontWeight: 'bold',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  'all-subs': {\n    minWidth: '250px',\n    boxSizing: 'border-box',\n    backgroundColor: 'white',\n    borderRadius: '10px',\n    boxShadow: theme.shadows[5],\n    padding: '1rem 0',\n    position: 'relative',\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n  'all-subs__list': {\n    maxHeight: '12rem',\n    overflowX: 'hidden',\n    padding: '0 2rem',\n  },\n  'all-subs__list-item': {\n    display: 'flex',\n    margin: '1rem 0',\n    alignItems: 'center',\n  },\n  'all-subs__title': {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    position: 'relative',\n    paddingBottom: '1rem',\n    top: 0,\n    borderBottom: '2px solid black',\n  },\n  'all-subs__close-btn': {\n    position: 'absolute',\n    top: '-3px',\n    right: '1rem',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  'all-subs__item-avatar': {\n    width: '3rem',\n    height: '3rem',\n  },\n  'all-subs__list-empty': {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginTop: '1rem',\n  },\n  '@media (min-width: 600px)': {\n    'profile__subs-title': {\n      marginTop: 0,\n    },\n    'all-subs': {\n      minWidth: '400px',\n    },\n  },\n}));\n\nconst ProfileSubs = (props) => {\n  const { user, ownUser } = props;\n  const classes = useStyles();\n\n  const [isModal, setIsModal] = useState(false);\n  const [modalInfo, setModalInfo] = useState({});\n\n  const openModal = (info) => {\n    setModalInfo(info);\n    setIsModal(true);\n  };\n\n  const checkSubs = (subscriptions, userLogin) => {\n    const candidate = subscriptions.findIndex(\n      (item) => item.login === userLogin\n    );\n    if (candidate === -1) {\n      return 'recommended';\n    } else {\n      return 'subscription';\n    }\n  };\n\n  return (\n    <>\n      <div\n        onClick={() => openModal({ type: 'Подписчики' })}\n        className={classes['profile__subs-title']}\n      >\n        Подписчики {user.subscribers.length}\n      </div>\n      <div\n        onClick={() => openModal({ type: 'Подписки' })}\n        className={classes['profile__subs-title']}\n      >\n        Подписки {user.subscriptions.length}\n      </div>\n      {isModal && (\n        <Modal\n          disableAutoFocus\n          disableEnforceFocus={true}\n          disableRestoreFocus={true}\n          disablePortal={true}\n          className={classes.modal}\n          open={isModal}\n          onClose={() => setIsModal(false)}\n          closeAfterTransition\n          disableScrollLock={true}\n          BackdropComponent={Backdrop}\n        >\n          <div className={classes['all-subs']}>\n            <div className={classes['all-subs__title']}>\n              {modalInfo.type}\n              <CloseIcon\n                onClick={() => setIsModal(false)}\n                className={classes['all-subs__close-btn']}\n              />\n            </div>\n            <div className={classes['all-subs__list']}>\n              {modalInfo.type === 'Подписки'\n                ? user.subscriptions.map((item, index) => (\n                    <ProfileRef\n                      type={checkSubs(ownUser.subscriptions, item.login)}\n                      key={index}\n                      avatarClass={classes['all-subs__item-avatar']}\n                      isOwn={item.login === ownUser.login}\n                      isList={true}\n                      avatar={item.avatar}\n                      login={item.login}\n                    />\n                  ))\n                : user.subscribers.map((item, index) => (\n                    <ProfileRef\n                      type={checkSubs(ownUser.subscriptions, item.login)}\n                      key={index}\n                      avatarClass={classes['all-subs__item-avatar']}\n                      isOwn={item.login === ownUser.login}\n                      isList={true}\n                      avatar={item.avatar}\n                      login={item.login}\n                    />\n                  ))}\n            </div>\n            {(modalInfo.type === 'Подписки'\n              ? !user.subscriptions.length\n              : !user.subscribers.length) && (\n              <div className={classes['all-subs__list-empty']}>\n                {modalInfo.type === 'Подписки' ? 'Подписок' : 'Подписчиков'} нет\n              </div>\n            )}\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ProfileSubs;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewAvatar.js",["247"],"import React, { useRef, useState } from 'react';\nimport { Avatar, Backdrop, Button, Input, Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { setUserAvatar } from '../../../store/user/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Montserrat',\n  },\n  'new-avatar': {\n    fontFamily: 'Montserrat',\n    minWidth: '500px',\n    boxSizing: 'border-box',\n    backgroundColor: 'white',\n    borderRadius: '10px',\n    boxShadow: theme.shadows[5],\n    position: 'relative',\n    padding: '3rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n  'new-avatar__file-error': {\n    marginTop: '1rem',\n    textAlign: 'center',\n    color: theme.colors.error,\n    fontWeight: 'bold',\n  },\n  'new-avatar__load-btn': {\n    marginTop: '2rem',\n  },\n}));\n\nconst NewAvatar = (props) => {\n  const { open, login } = props;\n\n  const classes = useStyles();\n\n  const [img, setImg] = useState('');\n\n  const [error, setError] = useState({ isError: false, text: '' });\n\n  const [inputImg, setInputImg] = useState('');\n\n  const dispatch = useDispatch();\n\n  const input = useRef();\n\n  const downloadImg = (event) => {\n    const file = event.target.files[0];\n    if (!file.type) {\n      setInputImg('');\n      setImg('');\n      setError({\n        isError: true,\n        text: 'Ошибка, эта функция не поддерживается в вашем браузере !',\n      });\n      return;\n    }\n    if (!file.type.match('image.*')) {\n      setInputImg('');\n      setImg('');\n      setError({ isError: true, text: 'Выбраный файл не есть изображением !' });\n      return;\n    }\n    setError({ isError: false, text: '' });\n    setInputImg(event.target.file);\n    const reader = new FileReader();\n    reader.addEventListener('load', (e) => {\n      setImg(e.target.result);\n    });\n    reader.readAsDataURL(file);\n  };\n\n  const download = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', input.current.files[0]);\n      formData.set('user', login);\n\n      const res = await fetch('/user/avatar', {\n        method: 'post',\n        body: formData,\n      });\n\n      const data = await res.json();\n      if (data.path) {\n        dispatch(setUserAvatar(data.path));\n        open(false);\n      } else {\n        setError({\n          isError: true,\n          text: 'Что-то пошло не так попробуйте позже',\n        });\n      }\n    } catch (e) {\n      setError({ isError: true, text: 'Cерверная ошибка попробуйте позже' });\n    }\n  };\n\n  return (\n    <Modal\n      disableAutoFocus\n      disableEnforceFocus\n      className={classes.modal}\n      open={true}\n      onClose={() => open(false)}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n    >\n      <div className={classes['new-avatar']}>\n        <Avatar style={{ width: '7rem', height: '7rem' }} src={img} />\n        <Input\n          accept=\"image/*\"\n          id=\"contained-button-file\"\n          multiple\n          type=\"file\"\n          name={'avatar'}\n          value={inputImg}\n          inputRef={input}\n          style={{ marginTop: '1rem' }}\n          onChange={downloadImg}\n        />\n        {error.isError && (\n          <div className={classes['new-avatar__file-error']}>{error.text}</div>\n        )}\n        <Button\n          className={classes['new-avatar__load-btn']}\n          onClick={download}\n          variant={'contained'}\n          color={'primary'}\n        >\n          загрузить\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NewAvatar;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/PostIcons/PostIcons.js",["248"],"import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport {\n  getPostCommentLoading,\n  getPostLikeLoading,\n} from '../../../../store/posts/selectors';\n\nconst useStyles = makeStyles((theme) => ({\n  like: {},\n  'like-active': {\n    color: theme.colors.like,\n  },\n}));\n\nconst PostIcons = (props) => {\n  const { isLiked, toggleLike, isComment, toggleComment } = props;\n\n  const isLikeLoading = useSelector(getPostLikeLoading);\n\n  const isComLoading = useSelector(getPostCommentLoading);\n\n  const classes = useStyles();\n  return (\n    <>\n      <IconButton\n        disabled={isLikeLoading}\n        onClick={toggleLike}\n        aria-label=\"add to favorites\"\n      >\n        {isLiked ? (\n          <FavoriteIcon className={classes['like-active']} />\n        ) : (\n          <FavoriteBorderOutlinedIcon className={classes.like} />\n        )}\n      </IconButton>\n      <IconButton\n        disabled={isComLoading}\n        onClick={toggleComment}\n        aria-label=\"add comment\"\n      >\n        {isComment ? (\n          <ChatBubbleIcon color={'action'} />\n        ) : (\n          <ChatBubbleOutlineOutlinedIcon />\n        )}\n      </IconButton>\n    </>\n  );\n};\n\nexport default PostIcons;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/PostComments/PostComments.js",["249"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Collapse } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  comments: {\n    marginLeft: '1rem',\n  },\n  'show-all-comment-btn': {\n    marginTop: '5px',\n    paddingLeft: 0,\n    '&:hover': {\n      backgroundColor: 'white',\n    },\n  },\n  comment: {\n    '& a': {\n      color: 'black',\n      fontWeight: 'bold',\n      marginRight: '0.5rem',\n      textDecoration: 'none',\n      transition: '.3s',\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n    '&:last-of-type': {\n      marginBottom: '0',\n    },\n  },\n}));\n\nconst PostComments = (props) => {\n  const { comments } = props;\n\n  const [isAllComments, setIsAllComments] = useState(false);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.comments}>\n      {comments.length > 1 ? (\n        <>\n          <p className={classes.comment}>\n            <Link to={'/profile/' + comments[0].owner}>\n              {comments[0].owner}\n            </Link>\n            <span>{comments[0].text}</span>\n          </p>\n          <Collapse mountOnEnter unmountOnExit in={isAllComments}>\n            {comments.slice(1).map((item) => (\n              <p key={item._id} className={classes.comment}>\n                <Link to={'/profile/' + item.owner}>{item.owner}</Link>\n                <span>{item.text}</span>\n              </p>\n            ))}\n          </Collapse>\n          <Button\n            disableRipple\n            className={classes['show-all-comment-btn']}\n            onClick={() => setIsAllComments((prevState) => !prevState)}\n          >\n            {isAllComments\n              ? 'Скрыть'\n              : `Показать больше (${comments.length - 1})`}\n          </Button>\n        </>\n      ) : comments.length ? (\n        <p className={classes.comment}>\n          <Link to={'/profile/' + comments[0].owner}>{comments[0].owner}</Link>\n          <span>{comments[0].text}</span>\n        </p>\n      ) : (\n        <p className={classes.comment}>\n          <span>Комментариев нету</span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default PostComments;\n","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Auth.tsx",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ForgotPassword.tsx",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/Post/Post.tsx",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/NewComment/NewComment.tsx",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostComponents/Likes/Likes.tsx",[],{"ruleId":"250","severity":1,"message":"251","line":10,"column":3,"nodeType":"252","messageId":"253","endLine":16,"endColumn":22},{"ruleId":"250","severity":1,"message":"251","line":18,"column":5,"nodeType":"252","messageId":"253","endLine":18,"endColumn":62},{"ruleId":"250","severity":1,"message":"251","line":21,"column":10,"nodeType":"252","messageId":"253","endLine":21,"endColumn":71},{"ruleId":"250","severity":1,"message":"251","line":19,"column":5,"nodeType":"252","messageId":"253","endLine":21,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":24,"column":5,"nodeType":"252","messageId":"253","endLine":28,"endColumn":13},{"ruleId":"250","severity":1,"message":"251","line":37,"column":5,"nodeType":"252","messageId":"253","endLine":40,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":72,"column":5,"nodeType":"254","messageId":"253","endLine":81,"endColumn":8},{"ruleId":"250","severity":1,"message":"251","line":6,"column":5,"nodeType":"254","messageId":"253","endLine":8,"endColumn":8},{"ruleId":"250","severity":1,"message":"251","line":62,"column":5,"nodeType":"252","messageId":"253","endLine":70,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":44,"column":5,"nodeType":"252","messageId":"253","endLine":57,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":119,"column":5,"nodeType":"252","messageId":"253","endLine":179,"endColumn":12},{"ruleId":"250","severity":1,"message":"251","line":6,"column":5,"nodeType":"252","messageId":"253","endLine":15,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":62,"column":5,"nodeType":"254","messageId":"253","endLine":111,"endColumn":8},{"ruleId":"250","severity":1,"message":"251","line":56,"column":5,"nodeType":"252","messageId":"253","endLine":83,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":120,"column":5,"nodeType":"252","messageId":"253","endLine":181,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":18,"column":5,"nodeType":"252","messageId":"253","endLine":21,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":79,"column":5,"nodeType":"254","messageId":"253","endLine":133,"endColumn":8},{"ruleId":"250","severity":1,"message":"251","line":146,"column":5,"nodeType":"252","messageId":"253","endLine":198,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":196,"column":5,"nodeType":"252","messageId":"253","endLine":278,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":73,"column":5,"nodeType":"254","messageId":"253","endLine":112,"endColumn":8},{"ruleId":"250","severity":1,"message":"251","line":141,"column":5,"nodeType":"252","messageId":"253","endLine":206,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":24,"column":5,"nodeType":"252","messageId":"253","endLine":27,"endColumn":15},{"ruleId":"250","severity":1,"message":"251","line":45,"column":5,"nodeType":"252","messageId":"253","endLine":68,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":101,"column":5,"nodeType":"254","messageId":"253","endLine":170,"endColumn":8},{"ruleId":"250","severity":1,"message":"251","line":110,"column":5,"nodeType":"252","messageId":"253","endLine":144,"endColumn":13},{"ruleId":"250","severity":1,"message":"251","line":30,"column":5,"nodeType":"254","messageId":"253","endLine":53,"endColumn":8},{"ruleId":"250","severity":1,"message":"251","line":42,"column":5,"nodeType":"252","messageId":"253","endLine":79,"endColumn":11},"react/jsx-filename-extension","JSX not allowed in files with extension '.js'","JSXElement","noJSXWithExtension","JSXFragment"]
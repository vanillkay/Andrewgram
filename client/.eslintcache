[{"/Users/andreyshkurenko/Projects/Andrewgram/client/src/index.js":"1","/Users/andreyshkurenko/Projects/Andrewgram/client/src/reportWebVitals.js":"2","/Users/andreyshkurenko/Projects/Andrewgram/client/src/App.js":"3","/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/AuthComponents/Auth.js":"4","/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/AuthComponents/Login.js":"5","/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/AuthComponents/Register.js":"6","/Users/andreyshkurenko/Projects/Andrewgram/client/src/hooks/http.hook.js":"7","/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/Theme/theme.js":"8","/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/EntryComponents/Entry.js":"9","/Users/andreyshkurenko/Projects/Andrewgram/client/src/routes/AndrewgramRoutes.js":"10","/Users/andreyshkurenko/Projects/Andrewgram/client/src/pages/EntryPage.js":"11","/Users/andreyshkurenko/Projects/Andrewgram/client/src/pages/AuthPage.js":"12","/Users/andreyshkurenko/Projects/Andrewgram/client/src/pages/Andrewgram.js":"13"},{"size":606,"mtime":1611668059380,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611561350800,"results":"16","hashOfConfig":"15"},{"size":652,"mtime":1611668091360,"results":"17","hashOfConfig":"15"},{"size":3749,"mtime":1611680241632,"results":"18","hashOfConfig":"15"},{"size":5644,"mtime":1611680586496,"results":"19","hashOfConfig":"15"},{"size":9107,"mtime":1611680353079,"results":"20","hashOfConfig":"15"},{"size":1382,"mtime":1611595602666,"results":"21","hashOfConfig":"15"},{"size":642,"mtime":1611678905057,"results":"22","hashOfConfig":"15"},{"size":1798,"mtime":1611680695177,"results":"23","hashOfConfig":"15"},{"size":575,"mtime":1611687747140,"results":"24","hashOfConfig":"15"},{"size":574,"mtime":1611671490932,"results":"25","hashOfConfig":"15"},{"size":198,"mtime":1611668852326,"results":"26","hashOfConfig":"15"},{"size":151,"mtime":1611678708405,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1d1w8t9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/andreyshkurenko/Projects/Andrewgram/client/src/index.js",[],["58","59"],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/reportWebVitals.js",[],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/App.js",["60","61","62","63"],"import './App.css';\nimport Auth from \"./components/AuthComponents/Auth\";\nimport {useEffect, useState} from \"react\";\nimport Theme from \"./components/Theme/theme\";\nimport Entry from \"./components/EntryComponents/Entry\";\nimport AndrewgramRoutes from \"./routes/AndrewgramRoutes\";\n\n\nfunction App() {\n\n    const [isEnter, setIsEnter] = useState(true);\n\n    useEffect(() => {\n\n        (async function csrf() {\n            fetch('/csrf')\n        })();\n\n    }, [])\n    return (\n\n        <Theme>\n            <div className=\"App\">\n                {/*<Auth/>*/}\n                <AndrewgramRoutes/>\n            </div>\n        </Theme>\n    );\n}\n\nexport default App;\n","/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/AuthComponents/Auth.js",[],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/AuthComponents/Login.js",[],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/AuthComponents/Register.js",["64","65"],"import React, {useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useHttp} from \"../../hooks/http.hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    inputs: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    input: {\n        width: '60%',\n        marginTop: '20px'\n    },\n    \"form-actions\": {\n        width: '100%',\n        marginTop: '2rem',\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    \"form-title\": {\n        textAlign: \"center\",\n        fontSize: '1.5rem'\n    },\n    form: {\n        '& .MuiFormHelperText-root\t': {\n            fontSize: '1rem'\n        },\n    },\n    'register-error': {\n        color: theme.colors.error,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    'register-success': {\n        color: theme.colors.success,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: '1.2rem'\n    }\n}));\nconst validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n\nconst Register = () => {\n    const [errors, setErrors] = useState({login: false, password: false, name: false, email: false, rePassword: false});\n    const [errorText, setErrorText] = useState({login: \"\", password: \"\", name: \"\", email: \"\", rePassword: \"\"});\n    const [inputs, setInputs] = useState({login: \"\", password: \"\", name: \"\", email: \"\", rePassword: \"\"});\n\n    const {loading, request} = useHttp();\n    const [isServerError, setIsServerError] = useState(false);\n    const [serverErrorText, setServerErrorText] = useState('');\n    const [isSuccess, setIsSuccess] = useState(false);\n\n\n    const checkFieldValue = (field, min, error) => {\n\n        if (field.value.length < min) {\n            setErrors(prevState => ({...prevState, [field.name]: true}));\n            setErrorText(prevState => ({...prevState, [field.name]: error}))\n            return true;\n        } else if (field.value.length >= min) {\n            setErrors(prevState => ({...prevState, [field.name]: false}));\n            setErrorText(prevState => ({...prevState, [field.name]: ''}))\n            return false;\n        }\n    }\n\n    const handleInputs = (e) => {\n        if (e.target.name === 'login') {\n            checkFieldValue(e.target, 5, 'Минимальная длина 5 символов', setErrors, setErrorText);\n        }\n        if (e.target.name === 'password') {\n            checkFieldValue(e.target, 7, 'Минимальная длина 7 символов', setErrors, setErrorText);\n        }\n        if (e.target.name === 'email') {\n            if (!validateEmail(e.target.value)) {\n                setErrors(prevState => ({...prevState, email: true}));\n                setErrorText(prevState => ({...prevState, email: 'Введите правильный email'}))\n            } else {\n                setErrors(prevState => ({...prevState, email: false}));\n                setErrorText(prevState => ({...prevState, email: ''}))\n            }\n        }\n        if (e.target.name === 'rePassword') {\n            if (e.target.value !== inputs.password) {\n                setErrors(prevState => ({...prevState, rePassword: true}));\n                setErrorText(prevState => ({...prevState, rePassword: 'Пароли не совпадают'}))\n            } else if (errors.rePassword) {\n                setErrors(prevState => ({...prevState, rePassword: false}));\n                setErrorText(prevState => ({...prevState, rePassword: ''}))\n            }\n        }\n        return setInputs(prevInput => ({...prevInput, [e.target.name]: e.target.value}))\n    }\n\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        try {\n            let isValid = true;\n            for (let value in inputs) {\n                if (value === 'name') continue;\n                if (!inputs[value]) {\n                    isValid = false;\n                    setErrors(prevState => ({...prevState, [value]: true}))\n                    setErrorText(prevState => ({...prevState, [value]: \"Введите значение\"}))\n                }\n            }\n            if (!isValid) return;\n\n            for (let error in errors) {\n                if (error === 'name') continue;\n                if (errors[error]) return;\n            }\n\n            const userInputs = {...inputs};\n\n            delete userInputs.rePassword;\n\n            const userValues = {...userInputs};\n\n\n            const user = await request('/auth/register', 'post', userValues);\n\n            if (!user.user) {\n                throw new Error('Ошибка регистрации')\n            } else {\n                if (isServerError) {\n                    setIsServerError(false);\n                }\n                setInputs({login: \"\", name: \"\", email: \"\", password: \"\", rePassword: \"\"})\n                setIsSuccess(true);\n            }\n        } catch (e) {\n            if (e.message.toLowerCase().includes('логин')) {\n                setErrors(prevState => ({...prevState, login: true}));\n            } else if (e.message.includes('email')) {\n                setErrors(prevState => ({...prevState, email: true}));\n            } else if (e.message.toLowerCase().includes('пароль') || e.message.toLowerCase().includes('пароли')) {\n                setErrors(prevState => ({...prevState, password: true, rePassword: true}));\n            }\n            setIsServerError(true);\n            setServerErrorText(e.message);\n        }\n    }\n\n\n    const classes = useStyles();\n    return (\n        <div>\n            <div className={classes[\"form-title\"]}>Введите данные</div>\n            <form className={classes.form}>\n                <div className={classes.inputs}>\n                    <TextField\n                        className={classes.input}\n                        error={errors.login}\n                        id=\"filled-error-helper-text2\"\n                        label=\"Логин\"\n                        onChange={handleInputs}\n                        helperText={errorText.login}\n                        variant=\"filled\"\n                        name={'login'}\n                        value={inputs.login}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.name}\n                        id=\"filled-error-helper-text5\"\n                        label=\"Имя\"\n                        onChange={handleInputs}\n                        helperText={errorText.name}\n                        variant=\"filled\"\n                        name={'name'}\n                        value={inputs.name}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.email}\n                        id=\"filled-error-helper-text6\"\n                        label=\"Email\"\n                        onChange={handleInputs}\n                        helperText={errorText.email}\n                        variant=\"filled\"\n                        name={'email'}\n                        value={inputs.email}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.password}\n                        type='password'\n                        id=\"filled-error-helper-text3\"\n                        label=\"Пароль\"\n                        onChange={handleInputs}\n                        helperText={errorText.password}\n                        variant=\"filled\"\n                        name={'password'}\n                        value={inputs.password}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.rePassword}\n                        type='password'\n                        id=\"filled-error-helper-text4\"\n                        label=\"Пароль ещё раз\"\n                        onChange={handleInputs}\n                        helperText={errorText.rePassword}\n                        variant=\"filled\"\n                        name={'rePassword'}\n                        value={inputs.rePassword}\n                    />\n                </div>\n                {isServerError && <p className={classes['register-error']}>{serverErrorText}</p>}\n                {isSuccess && <p className={classes['register-success']}>Вы успешно зарегистрировались</p>}\n                <div className={classes[\"form-actions\"]}>\n                    <Button onClick={handleForm} disabled={loading} type={'submit'} variant=\"contained\" color=\"primary\">\n                        Зарегестривароваться\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;","/Users/andreyshkurenko/Projects/Andrewgram/client/src/hooks/http.hook.js",["66","67","68","69","70","71"],"import {useCallback, useState} from \"react\";\n\nfunction getCookie(name) {\n    let matches = document.cookie.match(new RegExp(\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n\n    const request = useCallback(async (url, method = 'GET', body = {}, headers = {}) => {\n        setLoading(true);\n        try {\n\n            const token = getCookie(\"XSRF-TOKEN\");\n\n\n            const init = method === 'GET' ? {\n                method,\n                headers: {...headers, 'Content-Type': 'application/json', 'x-csrf-token': token}\n            } : {\n                method,\n                body: await JSON.stringify(body),\n                headers: {...headers, 'Content-Type': 'application/json', 'x-csrf-token': token}\n            };\n\n            const response = await fetch(url, {...init});\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Что-то пошло не так')\n            }\n            return data;\n        } catch (error) {\n            throw new Error(error.message);\n        } finally {\n            setLoading(false);\n        }\n    }, [])\n\n\n    return {\n        loading, request,\n    }\n}","/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/Theme/theme.js",[],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/components/EntryComponents/Entry.js",[],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/routes/AndrewgramRoutes.js",["72"],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/pages/EntryPage.js",[],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/pages/AuthPage.js",[],"/Users/andreyshkurenko/Projects/Andrewgram/client/src/pages/Andrewgram.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":11,"column":12,"nodeType":"79","messageId":"80","endLine":11,"endColumn":19},{"ruleId":"77","severity":1,"message":"83","line":11,"column":21,"nodeType":"79","messageId":"80","endLine":11,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":46,"column":26,"nodeType":"86","messageId":"87","endLine":46,"endColumn":27,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"85","line":46,"column":51,"nodeType":"86","messageId":"87","endLine":46,"endColumn":52,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"90","line":5,"column":38,"nodeType":"86","messageId":"87","endLine":5,"endColumn":39,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":5,"column":46,"nodeType":"86","messageId":"87","endLine":5,"endColumn":47,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"94","line":5,"column":48,"nodeType":"86","messageId":"87","endLine":5,"endColumn":49,"suggestions":"95"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":50,"nodeType":"86","messageId":"87","endLine":5,"endColumn":51,"suggestions":"96"},{"ruleId":"84","severity":1,"message":"97","line":5,"column":56,"nodeType":"86","messageId":"87","endLine":5,"endColumn":57,"suggestions":"98"},{"ruleId":"84","severity":1,"message":"99","line":5,"column":58,"nodeType":"86","messageId":"87","endLine":5,"endColumn":59,"suggestions":"100"},{"ruleId":"77","severity":1,"message":"101","line":4,"column":24,"nodeType":"79","messageId":"80","endLine":4,"endColumn":32},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'Entry' is defined but never used.","'isEnter' is assigned a value but never used.","'setIsEnter' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["104","105"],["106","107"],"Unnecessary escape character: \\..",["108","109"],"Unnecessary escape character: \\(.",["110","111"],"Unnecessary escape character: \\).",["112","113"],["114","115"],"Unnecessary escape character: \\/.",["116","117"],"Unnecessary escape character: \\+.",["118","119"],"'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"120","fix":"121","desc":"122"},{"messageId":"123","fix":"124","desc":"125"},{"messageId":"120","fix":"126","desc":"122"},{"messageId":"123","fix":"127","desc":"125"},{"messageId":"120","fix":"128","desc":"122"},{"messageId":"123","fix":"129","desc":"125"},{"messageId":"120","fix":"130","desc":"122"},{"messageId":"123","fix":"131","desc":"125"},{"messageId":"120","fix":"132","desc":"122"},{"messageId":"123","fix":"133","desc":"125"},{"messageId":"120","fix":"134","desc":"122"},{"messageId":"123","fix":"135","desc":"125"},{"messageId":"120","fix":"136","desc":"122"},{"messageId":"123","fix":"137","desc":"125"},{"messageId":"120","fix":"138","desc":"122"},{"messageId":"123","fix":"139","desc":"125"},"removeEscape",{"range":"140","text":"141"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"142","text":"143"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"144","text":"141"},{"range":"145","text":"143"},{"range":"146","text":"141"},{"range":"147","text":"143"},{"range":"148","text":"141"},{"range":"149","text":"143"},{"range":"150","text":"141"},{"range":"151","text":"143"},{"range":"152","text":"141"},{"range":"153","text":"143"},{"range":"154","text":"141"},{"range":"155","text":"143"},{"range":"156","text":"141"},{"range":"157","text":"143"},[1147,1148],"",[1147,1147],"\\",[1172,1173],[1172,1172],[162,163],[162,162],[170,171],[170,170],[172,173],[172,172],[174,175],[174,174],[180,181],[180,180],[182,183],[182,182]]
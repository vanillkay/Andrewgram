[{"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/index.js":"1","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/reportWebVitals.js":"2","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/App.js":"3","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/routes/AndrewgramRoutes.js":"4","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Auth.js":"5","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Theme/theme.js":"6","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/EntryComponents/Entry.js":"7","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Login.js":"8","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Register.js":"9","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/EntryPage.js":"10","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/Andrewgram.js":"11","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/AuthPage.js":"12","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/hooks/http.hook.js":"13","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ForgotPassword.js":"14","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ForgotPasswordPage.js":"15","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ResetPasswordPage.js":"16","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ResetPassword.js":"17","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Loaders/Loader.js":"18","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/store.js":"19","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/reducer.js":"20","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/reducer.js":"21","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/selectors.js":"22","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/types.js":"23","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/actions.js":"24","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostsList/PostsList.js":"25","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/Post/Post.js":"26","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/PostIcons/PostIcons.js":"27","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/Likes/Likes.js":"28","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/NewComment/NewComment.js":"29","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/PostComments/PostComments.js":"30","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/reducer.js":"31","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/selectors.js":"32","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/types.js":"33","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/actions.js":"34","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo.js":"35","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/SubscribeSection.js":"36","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/Subscribes.js":"37","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/reducer.js":"38","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/selectors.js":"39","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/types.js":"40","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/actions.js":"41","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ProfilePage.js":"42","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileRef/ProfileRef.js":"43","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileInfo.js":"44","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePostsGrid.js":"45","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePost.js":"46","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewPost.js":"47","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/operations.js":"48","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewAvatar.js":"49","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileSubs.js":"50"},{"size":744,"mtime":1612516239085,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":1611561350800,"results":"53","hashOfConfig":"52"},{"size":459,"mtime":1612523279303,"results":"54","hashOfConfig":"52"},{"size":1346,"mtime":1612781708293,"results":"55","hashOfConfig":"52"},{"size":3749,"mtime":1612357519109,"results":"56","hashOfConfig":"52"},{"size":675,"mtime":1612445098841,"results":"57","hashOfConfig":"52"},{"size":1798,"mtime":1611680695177,"results":"58","hashOfConfig":"52"},{"size":6191,"mtime":1613316071071,"results":"59","hashOfConfig":"52"},{"size":9060,"mtime":1612361639811,"results":"60","hashOfConfig":"52"},{"size":571,"mtime":1612353747253,"results":"61","hashOfConfig":"52"},{"size":2455,"mtime":1613741869553,"results":"62","hashOfConfig":"52"},{"size":198,"mtime":1611668852326,"results":"63","hashOfConfig":"52"},{"size":1280,"mtime":1613045911339,"results":"64","hashOfConfig":"52"},{"size":4564,"mtime":1612367054237,"results":"65","hashOfConfig":"52"},{"size":850,"mtime":1612360461722,"results":"66","hashOfConfig":"52"},{"size":1234,"mtime":1612363445515,"results":"67","hashOfConfig":"52"},{"size":5795,"mtime":1612367161862,"results":"68","hashOfConfig":"52"},{"size":505,"mtime":1612358284965,"results":"69","hashOfConfig":"52"},{"size":371,"mtime":1613760847698,"results":"70","hashOfConfig":"52"},{"size":268,"mtime":1612731148805,"results":"71","hashOfConfig":"52"},{"size":2639,"mtime":1613430833194,"results":"72","hashOfConfig":"52"},{"size":386,"mtime":1613345666466,"results":"73","hashOfConfig":"52"},{"size":449,"mtime":1613425996108,"results":"74","hashOfConfig":"52"},{"size":1003,"mtime":1613426842021,"results":"75","hashOfConfig":"52"},{"size":3047,"mtime":1613743064082,"results":"76","hashOfConfig":"52"},{"size":6810,"mtime":1613744238267,"results":"77","hashOfConfig":"52"},{"size":1459,"mtime":1613345922144,"results":"78","hashOfConfig":"52"},{"size":3280,"mtime":1613756589718,"results":"79","hashOfConfig":"52"},{"size":3950,"mtime":1613523292862,"results":"80","hashOfConfig":"52"},{"size":2865,"mtime":1613427694338,"results":"81","hashOfConfig":"52"},{"size":1197,"mtime":1613323185988,"results":"82","hashOfConfig":"52"},{"size":218,"mtime":1613321222706,"results":"83","hashOfConfig":"52"},{"size":210,"mtime":1613318837871,"results":"84","hashOfConfig":"52"},{"size":530,"mtime":1613318837888,"results":"85","hashOfConfig":"52"},{"size":743,"mtime":1613309600961,"results":"86","hashOfConfig":"52"},{"size":817,"mtime":1612977749687,"results":"87","hashOfConfig":"52"},{"size":2263,"mtime":1613318837899,"results":"88","hashOfConfig":"52"},{"size":2194,"mtime":1613759020530,"results":"89","hashOfConfig":"52"},{"size":414,"mtime":1613745737399,"results":"90","hashOfConfig":"52"},{"size":243,"mtime":1613749856342,"results":"91","hashOfConfig":"52"},{"size":566,"mtime":1613749856346,"results":"92","hashOfConfig":"52"},{"size":2071,"mtime":1613760399580,"results":"93","hashOfConfig":"52"},{"size":5432,"mtime":1613758647684,"results":"94","hashOfConfig":"52"},{"size":1986,"mtime":1613514758793,"results":"95","hashOfConfig":"52"},{"size":3990,"mtime":1613523503525,"results":"96","hashOfConfig":"52"},{"size":2496,"mtime":1613740354207,"results":"97","hashOfConfig":"52"},{"size":5001,"mtime":1613322436650,"results":"98","hashOfConfig":"52"},{"size":444,"mtime":1613339563851,"results":"99","hashOfConfig":"52"},{"size":4309,"mtime":1613322985404,"results":"100","hashOfConfig":"52"},{"size":5162,"mtime":1613760216840,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"imbkpi",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/index.js",[],["221","222"],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/reportWebVitals.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/App.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/routes/AndrewgramRoutes.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Auth.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Theme/theme.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/EntryComponents/Entry.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Login.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Register.js",["223","224"],"import React, {useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useHttp} from \"../../hooks/http.hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    inputs: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    input: {\n        width: '60%',\n        marginTop: '20px'\n    },\n    \"form-actions\": {\n        width: '100%',\n        marginTop: '2rem',\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    \"form-title\": {\n        textAlign: \"center\",\n        fontSize: '1.5rem'\n    },\n    form: {\n        '& .MuiFormHelperText-root\t': {\n            fontSize: '1rem'\n        },\n    },\n    'register-error': {\n        color: theme.colors.error,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    'register-success': {\n        color: theme.colors.success,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: '1.2rem'\n    }\n}));\nconst validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n\nconst Register = () => {\n    const [errors, setErrors] = useState({login: false, password: false, name: false, email: false, rePassword: false});\n    const [errorText, setErrorText] = useState({login: \"\", password: \"\", name: \"\", email: \"\", rePassword: \"\"});\n    const [inputs, setInputs] = useState({login: \"\", password: \"\", name: \"\", email: \"\", rePassword: \"\"});\n\n    const {loading, request} = useHttp();\n    const [isServerError, setIsServerError] = useState(false);\n    const [serverErrorText, setServerErrorText] = useState('');\n    const [isSuccess, setIsSuccess] = useState(false);\n\n\n    const checkFieldValue = (field, min, error) => {\n\n        if (field.value.length < min) {\n            setErrors(prevState => ({...prevState, [field.name]: true}));\n            setErrorText(prevState => ({...prevState, [field.name]: error}))\n            return true;\n        } else if (field.value.length >= min) {\n            setErrors(prevState => ({...prevState, [field.name]: false}));\n            setErrorText(prevState => ({...prevState, [field.name]: ''}))\n            return false;\n        }\n    }\n\n    const handleInputs = (e) => {\n        const field = e.target;\n\n        if (field.name === 'login') {\n            checkFieldValue(field, 5, 'Минимальная длина 5 символов');\n        }\n        if (field.name === 'password') {\n            checkFieldValue(field, 7, 'Минимальная длина 7 символов');\n        }\n        if (field.name === 'email') {\n            if (!validateEmail(field.value)) {\n                setErrors(prevState => ({...prevState, email: true}));\n                setErrorText(prevState => ({...prevState, email: 'Введите правильный email'}))\n            } else {\n                setErrors(prevState => ({...prevState, email: false}));\n                setErrorText(prevState => ({...prevState, email: ''}))\n            }\n        }\n        if (field.name === 'rePassword') {\n            if (field.value !== inputs.password) {\n                setErrors(prevState => ({...prevState, rePassword: true}));\n                setErrorText(prevState => ({...prevState, rePassword: 'Пароли не совпадают'}))\n            } else if (errors.rePassword) {\n                setErrors(prevState => ({...prevState, rePassword: false}));\n                setErrorText(prevState => ({...prevState, rePassword: ''}))\n            }\n        }\n        return setInputs(prevInput => ({...prevInput, [field.name]: field.value}))\n    }\n\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        try {\n            let isValid = true;\n            for (let value in inputs) {\n                if (value === 'name') continue;\n                if (!inputs[value]) {\n                    isValid = false;\n                    setErrors(prevState => ({...prevState, [value]: true}))\n                    setErrorText(prevState => ({...prevState, [value]: \"Введите значение\"}))\n                }\n            }\n            if (!isValid) return;\n\n            for (let error in errors) {\n                if (error === 'name') continue;\n                if (errors[error]) return;\n            }\n\n            const userInputs = {...inputs};\n\n            delete userInputs.rePassword;\n\n            const userValues = {...userInputs};\n\n\n            const user = await request('/auth/register', 'post', userValues);\n\n            if (!user.user) {\n                throw new Error('Ошибка регистрации')\n            } else {\n                if (isServerError) {\n                    setIsServerError(false);\n                }\n                setInputs({login: \"\", name: \"\", email: \"\", password: \"\", rePassword: \"\"})\n                setIsSuccess(true);\n            }\n        } catch (e) {\n            if (e.message.toLowerCase().includes('логин')) {\n                setErrors(prevState => ({...prevState, login: true}));\n            } else if (e.message.includes('email')) {\n                setErrors(prevState => ({...prevState, email: true}));\n            } else if (e.message.toLowerCase().includes('пароль') || e.message.toLowerCase().includes('пароли')) {\n                setErrors(prevState => ({...prevState, password: true, rePassword: true}));\n            }\n            setIsServerError(true);\n            setServerErrorText(e.message);\n        }\n    }\n\n\n    const classes = useStyles();\n    return (\n        <div>\n            <div className={classes[\"form-title\"]}>Введите данные</div>\n            <form className={classes.form}>\n                <div className={classes.inputs}>\n                    <TextField\n                        className={classes.input}\n                        error={errors.login}\n                        id=\"filled-error-helper-text2\"\n                        label=\"Логин\"\n                        onChange={handleInputs}\n                        helperText={errorText.login}\n                        variant=\"filled\"\n                        name={'login'}\n                        value={inputs.login}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.name}\n                        id=\"filled-error-helper-text5\"\n                        label=\"Имя\"\n                        onChange={handleInputs}\n                        helperText={errorText.name}\n                        variant=\"filled\"\n                        name={'name'}\n                        value={inputs.name}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.email}\n                        id=\"filled-error-helper-text6\"\n                        label=\"Email\"\n                        onChange={handleInputs}\n                        helperText={errorText.email}\n                        variant=\"filled\"\n                        name={'email'}\n                        value={inputs.email}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.password}\n                        type='password'\n                        id=\"filled-error-helper-text3\"\n                        label=\"Пароль\"\n                        onChange={handleInputs}\n                        helperText={errorText.password}\n                        variant=\"filled\"\n                        name={'password'}\n                        value={inputs.password}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.rePassword}\n                        type='password'\n                        id=\"filled-error-helper-text4\"\n                        label=\"Пароль ещё раз\"\n                        onChange={handleInputs}\n                        helperText={errorText.rePassword}\n                        variant=\"filled\"\n                        name={'rePassword'}\n                        value={inputs.rePassword}\n                    />\n                </div>\n                {isServerError && <p className={classes['register-error']}>{serverErrorText}</p>}\n                {isSuccess && <p className={classes['register-success']}>Вы успешно зарегистрировались</p>}\n                <div className={classes[\"form-actions\"]}>\n                    <Button onClick={handleForm} disabled={loading} type={'submit'} variant=\"contained\" color=\"primary\">\n                        Зарегестривароваться\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/EntryPage.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/Andrewgram.js",["225"],"import React, {useEffect} from 'react';\nimport PostsList from \"../components/AppComponents/PostListComponents/PostsList/PostsList\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SideProfileInfo from \"../components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo\";\nimport Loader from \"../components/Loaders/Loader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAllPostsLoading} from \"../store/posts/selectors\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {getUserInfo} from \"../store/user/selectors\";\nimport {setAllPosts, toggleAllPostsLoading} from \"../store/posts/actions\";\n\nconst useStyles = makeStyles(theme => ({\n    'main': {\n        width: '100%',\n        height: 'auto',\n        minHeight: '97vh',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'column-reverse',\n        justifyContent: \"center\",\n        alignItems: 'center',\n        paddingTop: '4rem'\n    },\n    'main__posts': {\n        width: '100%'\n    },\n    'main__profile-info': {\n        width: '100%',\n    },\n    '@media (min-width: 600px)': {\n        main: {\n            flexDirection: 'row',\n            alignItems: 'flex-start'\n        },\n        'main__posts': {\n            width: '40%',\n            maxWidth: '700px',\n        },\n        'main__profile-info': {\n            width: '20%',\n            marginLeft: '2rem',\n            position: 'sticky',\n            top: 'calc(4rem + 10px)',\n            minWidth: '300px'\n\n        }\n    }\n}))\n\nconst Andrewgram = () => {\n\n    const classes = useStyles();\n\n    const {request} = useHttp();\n\n    const isLoadingInfo = useSelector(getAllPostsLoading);\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo)\n\n    useEffect(() => {\n        dispatch(toggleAllPostsLoading());\n        request('/posts/all', 'post', {login: user.login, length: 3})\n            .then(res => {\n                dispatch(setAllPosts(res.posts, user.login))\n                dispatch(toggleAllPostsLoading());\n            })\n    }, [])\n\n    return (\n        <>\n            {isLoadingInfo ? <Loader/> : <div className={classes.main}>\n                <div className={classes['main__posts']}>\n                    <PostsList/>\n                </div>\n                <div className={classes['main__profile-info']}>\n                    <SideProfileInfo/>\n                </div>\n            </div>}\n        </>\n\n    );\n};\n\nexport default Andrewgram;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/AuthPage.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/hooks/http.hook.js",["226","227","228","229","230","231"],"import {useCallback, useState} from \"react\";\n\nfunction getCookie(name) {\n    let matches = document.cookie.match(new RegExp(\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n\n    const request = useCallback(async (url, method = 'get', body = {}, headers = {}) => {\n        setLoading(true);\n        try {\n\n            const token = getCookie(\"XSRF-TOKEN\");\n\n\n            const init = {\n                method,\n                headers: {...headers, 'Content-Type': 'application/json', 'x-csrf-token': token}\n            }\n\n            if (method !== 'get') {\n                init.body = await JSON.stringify(body);\n            }\n\n            const response = await fetch(url, {...init});\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Что-то пошло не так')\n            }\n            return data;\n        } catch (error) {\n            throw new Error(error.message);\n        } finally {\n            setLoading(false);\n        }\n    }, [])\n\n\n    return {\n        loading, request,\n    }\n}","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ForgotPassword.js",["232","233"],"import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button} from \"@material-ui/core\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nconst useStyles = makeStyles(theme => ({\n    'forgot-form': {\n        minWidth: '300px',\n        maxWidth: '500px',\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    'forgot-form__title': {\n        marginBottom: '2rem'\n    },\n    'forgot-form__action': {\n        marginTop: '1.5rem',\n        minWidth: '200px'\n    },\n    'forgot-form__resp': {\n        marginTop: '1rem',\n        textAlign: 'center',\n        fontSize: '1.2rem'\n\n    },\n    'forgot-form__resp-success': {\n        color: theme.colors.success,\n    },\n    'forgot-form__resp-error': {\n        color: theme.colors.error\n    }\n}));\n\nconst ForgotPassword = (props) => {\n\n    const {setIsAppear} = props;\n\n    const [email, setEmail] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [inputErrorText, setInputErrorText] = useState('');\n    const [response, setResponse] = useState({ready: false, success: false, errorText: ''});\n    const {loading, request} = useHttp();\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const handleInput = (e) => {\n        if (inputError) {\n            setInputErrorText('');\n            setInputError(false);\n        }\n        setEmail(e.target.value);\n    }\n\n    const handleForm = async (e) => {\n        try {\n            e.preventDefault();\n            if (!validateEmail(email)) {\n                setInputError(true);\n                setInputErrorText('Введите корректный email');\n                return;\n            } else {\n                if (inputError) {\n                    setInputErrorText('');\n                    setInputError(false);\n                }\n                const resp = await request('/auth/reset', 'post', {email});\n                if (resp.success) {\n                    setEmail('');\n                    setResponse({ready: true, success: true, errorText: ''});\n                } else {\n                    throw new Error('Что-то пошло не так, повторите попытку позже')\n                }\n            }\n        } catch (e) {\n            setResponse({ready: true, success: false, errorText: e.message || 'Что-то пошло не так, повторите попытку позже'});\n        }\n    };\n\n    const goAuth = () => {\n        setIsAppear(false);\n        setTimeout(() => {\n            history.push('/auth')\n        }, 500);\n    }\n\n\n    return (\n        <form className={classes[\"forgot-form\"]}>\n            <div className={classes['forgot-form__title']}>Введите ваш email</div>\n            <TextField\n                error={inputError}\n                id=\"filled-error-helper-text9\"\n                label=\"Email\"\n                onChange={handleInput}\n                helperText={inputErrorText}\n                variant=\"filled\"\n                name={'email'}\n                value={email}\n            />\n            <div className={classes[\"forgot-form__resp\"]}>\n                {response.ready && (response.success ?\n                    <div className={classes['forgot-form__resp-success']}>На вашу почту отправлено письмо с\n                        инструкцией. Если письма нету – проверьте спам</div> :\n                    <div className={classes['forgot-form__resp-error']}>{response.errorText}</div>)}\n            </div>\n            <Button onClick={handleForm} className={classes['forgot-form__action']} disabled={loading}\n                    type={'submit'} variant=\"contained\"\n                    color=\"primary\">\n                Отправить письмо\n            </Button>\n            <Button onClick={goAuth} className={classes['forgot-form__action']} disabled={loading}\n                    variant=\"contained\"\n                    color=\"primary\">\n                Авторизоваться\n            </Button>\n        </form>\n    );\n};\n\nexport default ForgotPassword;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ForgotPasswordPage.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ResetPasswordPage.js",["234"],"import React, {useEffect, useState} from 'react';\nimport ResetPassword from \"../components/AuthComponents/ResetPassword\";\nimport Loader from \"../components/Loaders/Loader\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    'reset-page': {\n        width: '100%',\n        height: '50vh',\n        fontSize: '1.5rem',\n        paddingTop: '6rem',\n    }\n}))\n\n\nconst ResetPasswordPage = () => {\n\n    const [isValid, setIsValid] = useState(false);\n    const {loading, request} = useHttp();\n    const {token} = useParams();\n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(() => {\n        request('/auth/reset/check', 'post', {token})\n            .then(res => {\n                if (res.success) {\n                    setIsValid(true);\n                } else {\n                    history.push('/auth');\n                }\n            })\n    }, [])\n\n\n    return (\n        <div className={classes['reset-page']}>\n            {loading && <Loader/>}\n            {isValid && <ResetPassword token={token}/>}\n        </div>\n    );\n};\n\nexport default ResetPasswordPage;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ResetPassword.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Loaders/Loader.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/store.js",["235"],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/reducer.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/reducer.js",["236"],"import * as postsActionTypes from './types';\n\n\nconst initialState = {\n    posts: [],\n    userPosts: [],\n    isLoadingAllPosts: false,\n    isLoadedUserPosts: false,\n    isLikedPost: false,\n    isCommentPost: false,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case postsActionTypes.SET_ALL_POSTS:{\n\n            const {posts, login} = action.payload;\n\n            const userPosts = posts.map(item => ({...item, isLiked: !!item.likes.find(item => item.owner === login)}));\n            return {...state, posts: userPosts}\n        }\n        case postsActionTypes.TOGGLE_ALL_POST_LOADING:{\n            return {...state, isLoadingAllPosts: !state.isLoadingAllPosts}\n        }\n        case postsActionTypes.TOGGLE_LIKE_POST: {\n\n            const {id, likeOwner, isUserPost = false} = action.payload;\n\n            const neededPostsArr = isUserPost === true ? 'userPosts' : 'posts';\n\n            const neededPost = state[neededPostsArr].find(item => item._id === id);\n\n            const isInLikes = neededPost.likes.findIndex(item => item.owner.toString() === likeOwner.toString());\n            if (isInLikes !== -1) {\n                neededPost.likes.splice(isInLikes, 1);\n            } else {\n                neededPost.likes.push({owner: likeOwner})\n            }\n            neededPost.isLiked = !neededPost.isLiked;\n            return {...state, [neededPostsArr]: [...state[neededPostsArr]]};\n        }\n        case postsActionTypes.TOGGLE_LIKE_POST_LOADING: {\n            return {...state, isLikedPost: !state.isLikedPost}\n        }\n        case postsActionTypes.TOGGLE_COMMENT_POST_LOADING: {\n            return {...state, isCommentPost: !state.isCommentPost}\n        }\n\n        case postsActionTypes.WRITE_NEW_COMMENT: {\n            const {isUserPost = false, postId, comment} = action.payload;\n\n            const neededPostsArr = isUserPost === true ? 'userPosts' : 'posts';\n\n            const neededPost = state[neededPostsArr].find(item => item._id === postId);\n\n            neededPost.comments.push(comment)\n            return {...state, posts: [...state.posts]}\n        }\n        case postsActionTypes.SET_USER_POSTS: {\n            const {posts, login} = action.payload;\n\n            const userPosts = posts.map(item => ({...item, isLiked: !!item.likes.find(item => item.owner === login)}));\n\n            return {...state, userPosts, isLoadedUserPosts: true}\n        }\n\n        case postsActionTypes.ADD_USER_POST: {\n            state.userPosts.push(action.payload)\n            return {...state, userPosts: [...state.userPosts]}\n        }\n\n    }\n    return state;\n}\n\nexport default reducer;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostsList/PostsList.js",["237"],"import React, {useEffect, useState} from 'react';\nimport Post from \"../PostComponents/Post/Post\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as postsActions from '../../../../store/posts/actions';\nimport {getUserInfo} from \"../../../../store/user/selectors\";\nimport {getPosts} from \"../../../../store/posts/selectors\";\nimport {useHttp} from \"../../../../hooks/http.hook\";\nimport {setAllPosts, toggleLoadingLike} from \"../../../../store/posts/actions\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst PostsList = () => {\n\n    const serverPosts = useSelector(getPosts);\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo);\n\n    const [isAllPosts, setIsAllPosts] = useState(false);\n\n\n    const {request} = useHttp();\n\n\n    const toggleLikePost = e => {\n        const targetData = e.target.dataset;\n        if (targetData.type === 'post' && targetData.info) {\n            dispatch(toggleLoadingLike());\n            request('/post/like', 'post', {id: targetData.info, likerLogin: user.login})\n                .then(res => {\n                    dispatch(postsActions.toggleLike(targetData.info, user.login));\n                })\n                .finally(() => dispatch(toggleLoadingLike()))\n        }\n    }\n\n    const loadPosts = async () => {\n        const res = await request('/posts/all', 'post', {login: user.login, length: serverPosts.length + 3});\n        dispatch(setAllPosts(res.posts, user.login));\n        if (res.isAllPosts) {\n            setIsAllPosts(true)\n        }\n    }\n\n\n    useEffect(() => {\n        document.addEventListener('dblclick', toggleLikePost);\n        return () => {\n            document.removeEventListener('dblclick', toggleLikePost);\n        }\n    }, [])\n\n    return (\n        <InfiniteScroll\n            next={loadPosts} hasMore={!isAllPosts}\n            loader={<CircularProgress style={{margin: '1rem auto', display: 'block'}} color=\"primary\"/>}\n            dataLength={serverPosts.length}\n            endMessage={\n                <p style={{textAlign: 'center'}}>\n                    <b>На этом все!</b>\n                </p>\n            }\n        >\n            {\n                serverPosts.map(item => <Post info={{\n                    isLiked: !!item.isLiked,\n                    likes: item.likes,\n                    comments: item.comments,\n                    id: item._id,\n                    avatar: item.avatar,\n                    imgSrc: item.imageSrc,\n                    ownerLogin: item.ownerLogin\n                }}\n                                              key={item._id}/>)\n            }\n            {\n                !serverPosts.length && <div style={{\n                    fontSize: '2rem',\n                    textAlign: 'center',\n                    textTransform: 'uppercase',\n                    marginTop: '5rem'\n                }}>Публикаций пока что нету</div>\n            }\n        </InfiniteScroll>\n    );\n};\n\nexport default PostsList;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/Post/Post.js",["238","239","240"],"import React, {useEffect, useState} from 'react';\nimport {Skeleton} from \"@material-ui/lab\";\nimport {\n    Avatar,\n    Card,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    makeStyles, Slide,\n} from \"@material-ui/core\";\nimport PostComments from \"../PostComments/PostComments\";\nimport * as postsActions from \"../../../../../store/posts/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Likes from \"../Likes/Likes\";\nimport PostIcons from \"../PostIcons/PostIcons\";\nimport NewComment from \"../NewComment/NewComment\";\nimport {getUserInfo} from \"../../../../../store/user/selectors\";\nimport {Link} from \"react-router-dom\";\nimport {toggleLoadingLike, toggleLoadingPost, writeNewComment} from \"../../../../../store/posts/actions\";\nimport {useHttp} from \"../../../../../hooks/http.hook\";\n\n\nconst useStyles = makeStyles((theme, props) => ({\n    post: {\n        width: '100%',\n        marginBottom: props => props.isModal === true ? '' : '2rem',\n        border: '1px solid rgb(219, 219, 219)',\n        borderRadius: '3px'\n    },\n    'post__profile__name': {\n        fontWeight: 'bold',\n        textDecoration: 'none',\n        color: 'inherit',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    media: {\n        maxHeight: '60vh',\n        overflow: 'hidden',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& img': {\n            width: '100%',\n            height: '100%',\n        }\n    },\n    'post-info': {\n        margin: '1rem 0 0 1rem',\n        '& a': {\n            textDecoration: 'none',\n            color: 'inherit',\n            fontWeight: 'bold',\n            marginRight: '.3rem'\n        }\n    },\n    'post-line': {\n        height: '3px',\n        // width: '50%',\n        margin: '1rem 0 1rem 1rem',\n        backgroundColor: 'rgb(219, 219, 219)'\n    }\n}));\n\n\nconst Post = (props) => {\n\n    const {\n        setModalInfo,\n        handleClose,\n        info,\n        isUserPost = false,\n        loadingPost = false,\n    } = props;\n\n    const {isLiked, id, imgSrc, likes, text, comments, ownerLogin, avatar = ''} = info;\n\n\n    const [isComment, setIsComment] = useState(false);\n\n    const [animationSide, setAnimationSide] = useState('right');\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const classes = useStyles({isModal: !!setModalInfo});\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo);\n\n    const {request} = useHttp()\n\n\n    const toggleLike = () => {\n        dispatch(toggleLoadingLike());\n        request('/post/like', 'post', {id, likerLogin: user.login})\n            .then(res => {\n                if (isUserPost) setModalInfo(prevState => ({...prevState, isLiked: !prevState.isLiked}))\n                dispatch(postsActions.toggleLike(id, user.login, isUserPost));\n            })\n            .finally(() => dispatch(toggleLoadingLike()))\n    }\n\n\n    const toggleComment = () => {\n        setIsComment(prevState => !prevState);\n    }\n\n    const loadComment = (comment) => {\n        dispatch(toggleLoadingPost())\n        request('/post/comment', 'post', {id, owner: user.login, comment})\n            .then(res => {\n                dispatch(writeNewComment(isUserPost, id, {...res.comment}))\n                setAnimationSide('left');\n                setIsComment(false);\n                setTimeout(() => {\n                    setAnimationSide('right');\n                }, 500)\n            }).finally(() => dispatch(toggleLoadingPost()))\n\n    }\n\n\n    const toggleLikePost = e => {\n        const targetData = e.target.dataset;\n        if (targetData.type === 'post' && targetData.info) {\n            toggleLike()\n        }\n    }\n\n    useEffect(() => {\n        if (isUserPost) {\n            document.addEventListener('dblclick', toggleLikePost);\n            return () => {\n                document.removeEventListener('dblclick', toggleLikePost);\n            }\n        }\n    }, [])\n\n\n    return (\n        <Card className={classes.post}>\n            <CardHeader\n                avatar={\n                    loadingPost ? (\n                        <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40}/>\n                    ) : (\n                        <Avatar\n                            alt={text}\n                            src={'/' + avatar}\n                        />\n                    )\n                }\n                title={\n                    loadingPost ? (\n                        <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{marginBottom: 6}}/>\n                    ) : <Link className={classes['post__profile__name']} to={'/profile/' + ownerLogin}>\n                        {ownerLogin}\n                    </Link>\n                }\n                // subheader={loadingPost ? <Skeleton animation=\"wave\" height={10} width=\"40%\"/> : '5 hours ago'}\n            />\n            {loadingPost ? (\n                <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media}/>\n            ) : (\n                <div className={classes.media}>\n                    <CardMedia\n                        component={\"img\"}\n                        title=\"Ted talk\"\n                        src={'/' + imgSrc}\n                        data-type={'post'}\n                        data-info={id}\n                    />\n                </div>\n            )}\n\n            <CardContent>\n                {loadingPost ? (\n                    <>\n                        <Skeleton animation=\"wave\" height={10} style={{marginBottom: 6}}/>\n                        <Skeleton animation=\"wave\" height={10} width=\"80%\"/>\n                    </>\n                ) : (\n                    <>\n                        <PostIcons isLoading={isLoading} isComment={isComment} isLiked={isLiked} toggleLike={toggleLike}\n                                   toggleComment={toggleComment}/>\n                        <Likes likes={likes}/>\n                        {text && text.length !== 0 && <div className={classes['post-info']}><Link to={{\n                            pathname: '/profile/' + ownerLogin,\n                            state: {\n                                fromNotifications: false\n                            }\n                        }}>{ownerLogin}</Link>{text}</div>}\n\n                        <div className={classes['post-line']}/>\n                        <PostComments comments={comments}/>\n                        <Slide in={isComment} direction={animationSide} mountOnEnter\n                               unmountOnExit>\n                            <NewComment avatar={user.avatar} login={ownerLogin} loadComment={loadComment}\n                                        isLoading={isLoading}/>\n                        </Slide>\n                    </>\n                )}\n            </CardContent>\n        </Card>\n    )\n};\n\n\nexport default Post;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/PostIcons/PostIcons.js",["241"],"import React from 'react';\nimport {IconButton} from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSelector} from \"react-redux\";\nimport {getPostCommentLoading, getPostLikeLoading} from \"../../../../../store/posts/selectors\";\n\n\nconst useStyles = makeStyles(theme => ({\n    like: {},\n    'like-active': {\n        color: theme.colors.like,\n\n    },\n}))\n\nconst PostIcons = (props) => {\n\n    const {isLoading, isLiked, toggleLike, isComment, toggleComment} = props;\n\n\n    const isLikeLoading = useSelector(getPostLikeLoading);\n\n    const classes = useStyles();\n    return (\n        <>\n            <IconButton disabled={isLikeLoading} onClick={toggleLike} aria-label=\"add to favorites\">\n                {isLiked ? <FavoriteIcon className={classes['like-active']}/> :\n                    <FavoriteBorderOutlinedIcon className={classes.like}/>}\n            </IconButton>\n            <IconButton disabled={isLoading} onClick={toggleComment} aria-label=\"add comment\">\n                {isComment ? <ChatBubbleIcon color={'action'}/> : <ChatBubbleOutlineOutlinedIcon/>}\n            </IconButton>\n        </>\n    );\n};\n\nexport default PostIcons;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/Likes/Likes.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/NewComment/NewComment.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/PostComments/PostComments.js",["242"],"import React, {useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, Collapse} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n\n    comments: {\n        marginLeft: '1rem'\n    },\n    'show-all-comment-btn': {\n        marginTop: '5px',\n        paddingLeft: 0,\n        '&:hover': {\n            backgroundColor: 'white'\n        }\n    },\n    comment: {\n        '& a': {\n            color: 'black',\n            fontWeight: 'bold',\n            marginRight: '0.5rem',\n            textDecoration: 'none',\n            transition: '.3s',\n            '&:hover':{\n                textDecoration: 'underline'\n            }\n        },\n        '&:last-of-type':{\n            marginBottom: '0'\n        }\n    },\n}))\n\nconst PostComments = (props) => {\n    const {comments} = props;\n\n    const [isAllComments, setIsAllComments] = useState(false);\n\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.comments}>\n            {\n                comments.length > 1 ?\n                    (\n                        <>\n                            <p className={classes.comment}>\n                                <Link to={'/profile/' + comments[0].owner}>{comments[0].owner}</Link>\n                                <span>{comments[0].text}</span>\n                            </p>\n                            <Collapse mountOnEnter unmountOnExit in={isAllComments}>\n                                {\n                                    comments.map((item, index) => {\n                                        if (!index) return;\n                                        return (<p key={item._id} className={classes.comment}>\n                                            <Link to={'/profile/' + item.owner}>{item.owner}</Link>\n                                            <span>{item.text}</span>\n                                        </p>)\n\n                                    })\n                                }\n                            </Collapse>\n                            <Button\n                                disableRipple\n                                className={classes['show-all-comment-btn']}\n                                onClick={() => setIsAllComments(prevState => !prevState)}>\n                                {isAllComments ? 'Скрыть' : `Показать больше (${comments.length - 1 })`}\n                            </Button>\n\n                        </>\n                    ) :\n\n                    (comments.map(item =>\n                        <p key={item.owner} className={classes.comment}>\n                            <Link to={'/profile/' + item.owner}>{item.owner}</Link>\n                            <span>{item.text}</span>\n                        </p>))\n            }\n        </div>\n    );\n};\n\nexport default PostComments;",["243","244"],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/reducer.js",["245"],"import * as subscribesActionTypes from './types'\n\n\nconst initialState = {\n    subscription: [],\n    recommended: [],\n    isLoading: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case subscribesActionTypes.TOGGLE_SUBS:{\n\n            const {login, type} = action.payload;\n\n\n            const arrToAddSubs = type === 'subscription' ? 'recommended' : 'subscription';\n            const subscribedProfile = state[type].find(item => item.login === login);\n            const newArrWithoutSubs = state[type].filter(item => item.login !== login);\n            const newArrWithSubs = [subscribedProfile, ...state[arrToAddSubs]];\n\n            return {...state, [arrToAddSubs]: newArrWithSubs, [type]: newArrWithoutSubs}\n        }\n        case subscribesActionTypes.SET_SUBSCRIPTIONS: {\n\n            return {...state, subscription: action.payload}\n        }\n        case subscribesActionTypes.SET_RECOMMENDED_PROFILES: {\n\n            return {...state, recommended: action.payload}\n        }\n        case subscribesActionTypes.TOGGLE_LOADING: {\n            return {...state, isLoading: !state.isLoading}\n        }\n    }\n    return state\n}\n\nexport default reducer;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/SubscribeSection.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/Subscribes.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/reducer.js",["246"],"import * as userActionTypes from './types';\n\n\nconst initialState = {\n    isAuth: false,\n    isLoadingInfo: true,\n    userInfo: {},\n    visitedUserInfo: {\n        subscriptions: [],\n        subscribers: []\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case userActionTypes.AUTH_USER: {\n            return {...state, isAuth: true, ...action.payload}\n        }\n        case userActionTypes.LOGOUT_USER: {\n            return {isAuth: false}\n        }\n        case userActionTypes.SET_USER_AVATAR: {\n            return {...state, userInfo: {...state.userInfo, avatar: action.payload}}\n        }\n        case userActionTypes.SET_VISITED_USER_INFO: {\n            return {...state, visitedUserInfo: {...state.visitedUserInfo, ...action.payload}}\n        }\n        case userActionTypes.TOGGLE_USER_SUBS: {\n\n            const {login, avatar} = action.payload;\n\n            const neededSubs = state.userInfo.subscriptions.findIndex(item => item.login === login);\n\n\n            if (neededSubs === -1) {\n                return {\n                    ...state,\n                    userInfo: {...state.userInfo, subscriptions: [...state.userInfo.subscriptions, {login, avatar}]},\n                    visitedUserInfo: {\n                        ...state.visitedUserInfo,\n                        subscribers: [...state.visitedUserInfo.subscribers, {login: state.userInfo.login, avatar: state.userInfo.avatar}]\n                    }\n                }\n            } else {\n                state.userInfo.subscriptions.splice(neededSubs, 1)\n\n                const posInUserSubs = state.visitedUserInfo.subscribers.findIndex(item => item.login === login);\n\n                state.visitedUserInfo.subscribers.splice(posInUserSubs, 1)\n                return {\n                    ...state,\n                    userInfo: {...state.userInfo, subscriptions: [...state.userInfo.subscriptions]},\n                    visitedUserInfo: {\n                        ...state.visitedUserInfo,\n                        subscribers: [...state.visitedUserInfo.subscribers]\n                    }\n                }\n            }\n        }\n    }\n    return state;\n}\n\nexport default reducer;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ProfilePage.js",["247"],"import React, {useEffect} from 'react';\nimport ProfileInfo from \"../components/AppComponents/Profile/ProfileInfo\";\nimport ProfilePostsGrid from \"../components/AppComponents/Profile/ProfilePostsGrid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport NewPost from \"../components/AppComponents/Profile/NewPost\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {setUserPosts} from \"../store/posts/actions\";\nimport {useParams} from \"react-router-dom\";\nimport {getUserInfo} from \"../store/user/selectors\";\nimport {getRecommended, getSubscriptions} from \"../store/subscribers/selectors\";\nimport {setVisitedUserInfo} from \"../store/user/actions\";\nimport smoothscroll from 'smoothscroll-polyfill';\n\nsmoothscroll.polyfill();\n\n\nconst useStyles = makeStyles(theme => ({\n    'profile-page': {\n        padding: '4rem 2rem',\n        margin: '0 auto'\n    }\n}))\n\nconst ProfilePage = () => {\n\n    const classes = useStyles();\n\n    const {request, loading} = useHttp()\n\n\n    const {login} = useParams();\n\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo);\n\n    const visitedUser = [...useSelector(getRecommended), ...useSelector(getSubscriptions)].filter(item => item.login === login)[0]\n\n    const isOwn = login === user.login;\n\n\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        });\n        if (!isOwn) {\n            dispatch(setUserPosts([]));\n        }\n        request('/posts/users', 'post', {login})\n            .then(res => {\n                dispatch(setUserPosts(res.posts, user.login))\n                dispatch(setVisitedUserInfo(res.userInfo))\n            });\n    }, [])\n\n\n    return (\n        <div className={classes['profile-page']}>\n            <ProfileInfo user={isOwn ? user : visitedUser} isOwn={isOwn} isLoading={loading}/>\n            {isOwn && <NewPost isLoading={loading}/>}\n            <ProfilePostsGrid user={isOwn ? user : visitedUser} isLoading={loading}/>\n        </div>\n    );\n};\n\nexport default ProfilePage;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileRef/ProfileRef.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileInfo.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePostsGrid.js",["248"],"import React, {useState} from 'react';\nimport ProfilePost from \"./ProfilePost\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Backdrop, Modal} from \"@material-ui/core\";\nimport Post from \"../PostListComponents/PostComponents/Post/Post\";\n\nimport {useSelector} from \"react-redux\";\nimport {getUserPosts, getUserPostsLoaded} from \"../../../store/posts/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile__posts': {\n        display: 'grid',\n        marginTop: '2rem',\n        gridTemplateColumns: 'repeat(1, 1fr)',\n        gridTemplateRows: 'repeat(2, 1fr)',\n        gridColumnGap: '2rem',\n        gridRowGap: '2rem'\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflowY: 'scroll',\n        width: '100vw',\n    },\n    'profile__modal-post': {\n        width: '80%',\n        height: 'auto',\n        outline: 'none',\n        position: 'absolute',\n        top: '1rem',\n        padding: '1rem 0'\n    },\n    'profile__posts-exist': {\n        textAlign: 'center',\n        marginTop: '2rem',\n        fontWeight: 'bold',\n        fontSize: '2rem',\n        gridColumnStart: 1,\n        gridColumnEnd: 5,\n        gridRowStart: 2,\n        gridRowEnd: 3,\n    },\n    '@media (min-width: 600px)': {\n        'profile__posts': {\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gridTemplateRows: 'repeat(2, 1fr)',\n        },\n        'profile__modal-post': {\n            width: '50%',\n            height: 'auto',\n            outline: 'none',\n            position: 'relative'\n        }\n    }\n}))\n\nconst ProfilePostsGrid = (props) => {\n\n    const [isPostOpen, setIsPostOpen] = useState(false);\n    const [modalInfo, setModalInfo] = useState(false);\n    const classes = useStyles();\n\n    const {user, isLoading} = props;\n\n    const posts = useSelector(getUserPosts);\n\n    const isLoaded = useSelector(getUserPostsLoaded);\n\n\n    const handleClose = () => {\n        setIsPostOpen(false);\n    }\n\n\n    const openModal = (info) => {\n        setModalInfo(info);\n        setIsPostOpen(true);\n    }\n\n    const loadingPostsArr = [1, 2, 3, 4, 5, 6];\n\n\n\n    return (\n        <>\n            <div className={classes['profile__posts']}>\n                {!isLoading && posts.map(item => <ProfilePost key={item._id}\n                                                              id={item._id} avatar={user.avatar} imgSrc={item.imageSrc}\n                                                              info={item.info}\n                                                              isLiked={item.isLiked}\n                                                              comments={item.comments} likes={item.likes}\n                                                              ownerLogin={item.ownerLogin} open={openModal}/>)}\n                {!isLoading && !posts.length && <div className={classes['profile__posts-exist']}>Постов нету</div>}\n                {isLoading && loadingPostsArr.map((item, index) => <ProfilePost key={index} isLoading/>)}\n            </div>\n            {\n                isPostOpen &&\n                <Modal\n                    disableAutoFocus\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    disablePortal={true}\n                    className={classes.modal}\n                    open={isPostOpen}\n                    onClose={handleClose}\n                    onClick={(event) => {if (event.target.tagName === 'A'){\n                        handleClose()\n                    }}}\n                    closeAfterTransition\n                    disableScrollLock={true}\n                    BackdropComponent={Backdrop}>\n                    <div className={classes['profile__modal-post']}>\n                        <Post isUserPost={true} handleClose={handleClose} setModalInfo={setModalInfo} info={modalInfo}/>\n                    </div>\n                </Modal>\n            }\n        </>\n    );\n};\n\nexport default ProfilePostsGrid;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePost.js",["249"],"import React from 'react';\nimport {Skeleton} from \"@material-ui/lab\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile-post': {\n        height: '10rem',\n        overflowY: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '&:hover $profile-post__hover': {\n            visibility: 'visible',\n        }\n    },\n    'profile-post__img': {\n        width: '100%', height: 'auto',\n    },\n    'profile-post__hover': {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        backgroundColor: 'rgba(0,0,0, .5)',\n        color: 'white',\n        fontSize: '1.5rem',\n        transition: \".3s\",\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        visibility: 'hidden',\n    },\n    'profile-post__icons-prev':{\n        width: '2rem',\n        height: '2rem',\n        color: 'white',\n        display: 'flex',\n        marginRight: '3px',\n        '&:last-child':{\n            marginLeft: '1rem',\n        }\n    },\n    '@media (min-width: 600px)': {\n        'profile-post': {\n            height: '20rem',\n        }\n    }\n\n}))\n\nconst ProfilePost = (props) => {\n\n    const {isLoading = false, open, isLiked, imgSrc, info, comments, avatar, ownerLogin, likes, id} = props;\n\n    const classes = useStyles();\n\n\n    return (\n        <>\n            {\n                isLoading ?\n                    <div>\n                        <Skeleton animation=\"wave\" variant=\"rect\" style={{width: '20rem', height: '20rem'}}/>\n                    </div>\n                    :\n                    <div className={classes['profile-post']}\n                         onClick={() => open({imgSrc, comments, avatar, text: info, ownerLogin, likes, id, isLiked})}>\n                        <img className={classes['profile-post__img']} src={\"/\" + imgSrc} alt={'post-image'}/>\n                        <div className={classes['profile-post__hover']}>\n                            <FavoriteIcon className={classes['profile-post__icons-prev']}/>{likes.length}\n                            <ChatBubbleIcon className={classes['profile-post__icons-prev']}/>{comments.length}\n                        </div>\n                    </div>\n            }\n        </>\n    );\n};\n\nexport default ProfilePost;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewPost.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/operations.js",["250","251","252"],"import postActionTypes from './types';\nimport {useHttp} from \"../../hooks/http.hook\";\n\n\n// const {request, loading} = useHttp();\n\nexport const loadSubsPosts = () => (dispatch, getState) => {\n    const state = getState();\n    const login = state.user.userInfo.login;\n    // console.log('state',state);\n}\n\n// export const getUsersPosts = (login) => {\n//     request('/posts/users', 'post', {login})\n//         .then(res => console.log(res));\n// }",["253","254"],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewAvatar.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileSubs.js",[],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":46,"column":26,"nodeType":"261","messageId":"262","endLine":46,"endColumn":27,"suggestions":"263"},{"ruleId":"259","severity":1,"message":"260","line":46,"column":51,"nodeType":"261","messageId":"262","endLine":46,"endColumn":52,"suggestions":"264"},{"ruleId":"265","severity":1,"message":"266","line":69,"column":8,"nodeType":"267","endLine":69,"endColumn":10,"suggestions":"268"},{"ruleId":"259","severity":1,"message":"269","line":5,"column":38,"nodeType":"261","messageId":"262","endLine":5,"endColumn":39,"suggestions":"270"},{"ruleId":"259","severity":1,"message":"271","line":5,"column":46,"nodeType":"261","messageId":"262","endLine":5,"endColumn":47,"suggestions":"272"},{"ruleId":"259","severity":1,"message":"273","line":5,"column":48,"nodeType":"261","messageId":"262","endLine":5,"endColumn":49,"suggestions":"274"},{"ruleId":"259","severity":1,"message":"260","line":5,"column":50,"nodeType":"261","messageId":"262","endLine":5,"endColumn":51,"suggestions":"275"},{"ruleId":"259","severity":1,"message":"276","line":5,"column":56,"nodeType":"261","messageId":"262","endLine":5,"endColumn":57,"suggestions":"277"},{"ruleId":"259","severity":1,"message":"278","line":5,"column":58,"nodeType":"261","messageId":"262","endLine":5,"endColumn":59,"suggestions":"279"},{"ruleId":"259","severity":1,"message":"260","line":10,"column":26,"nodeType":"261","messageId":"262","endLine":10,"endColumn":27,"suggestions":"280"},{"ruleId":"259","severity":1,"message":"260","line":10,"column":51,"nodeType":"261","messageId":"262","endLine":10,"endColumn":52,"suggestions":"281"},{"ruleId":"265","severity":1,"message":"282","line":36,"column":8,"nodeType":"267","endLine":36,"endColumn":10,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":1,"column":22,"nodeType":"286","messageId":"287","endLine":1,"endColumn":29},{"ruleId":"288","severity":1,"message":"289","line":14,"column":5,"nodeType":"290","messageId":"291","endLine":72,"endColumn":6},{"ruleId":"265","severity":1,"message":"292","line":52,"column":8,"nodeType":"267","endLine":52,"endColumn":10,"suggestions":"293"},{"ruleId":"284","severity":1,"message":"294","line":71,"column":9,"nodeType":"286","messageId":"287","endLine":71,"endColumn":20},{"ruleId":"284","severity":1,"message":"295","line":84,"column":23,"nodeType":"286","messageId":"287","endLine":84,"endColumn":35},{"ruleId":"265","severity":1,"message":"296","line":139,"column":8,"nodeType":"267","endLine":139,"endColumn":10,"suggestions":"297"},{"ruleId":"284","severity":1,"message":"298","line":9,"column":9,"nodeType":"286","messageId":"287","endLine":9,"endColumn":30},{"ruleId":"299","severity":1,"message":"300","line":56,"column":53,"nodeType":"301","messageId":"302","endLine":56,"endColumn":60},{"ruleId":"255","replacedBy":"303"},{"ruleId":"257","replacedBy":"304"},{"ruleId":"288","severity":1,"message":"289","line":11,"column":5,"nodeType":"290","messageId":"291","endLine":35,"endColumn":6},{"ruleId":"288","severity":1,"message":"289","line":15,"column":5,"nodeType":"290","messageId":"291","endLine":60,"endColumn":6},{"ruleId":"265","severity":1,"message":"305","line":57,"column":8,"nodeType":"267","endLine":57,"endColumn":10,"suggestions":"306"},{"ruleId":"284","severity":1,"message":"307","line":68,"column":11,"nodeType":"286","messageId":"287","endLine":68,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":72,"column":25,"nodeType":"310","endLine":72,"endColumn":110},{"ruleId":"284","severity":1,"message":"311","line":1,"column":8,"nodeType":"286","messageId":"287","endLine":1,"endColumn":23},{"ruleId":"284","severity":1,"message":"312","line":2,"column":9,"nodeType":"286","messageId":"287","endLine":2,"endColumn":16},{"ruleId":"284","severity":1,"message":"313","line":9,"column":11,"nodeType":"286","messageId":"287","endLine":9,"endColumn":16},{"ruleId":"255","replacedBy":"314"},{"ruleId":"257","replacedBy":"315"},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["318","319"],["320","321"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'request', and 'user.login'. Either include them or remove the dependency array.","ArrayExpression",["322"],"Unnecessary escape character: \\..",["323","324"],"Unnecessary escape character: \\(.",["325","326"],"Unnecessary escape character: \\).",["327","328"],["329","330"],"Unnecessary escape character: \\/.",["331","332"],"Unnecessary escape character: \\+.",["333","334"],["335","336"],["337","338"],"React Hook useEffect has missing dependencies: 'history', 'request', and 'token'. Either include them or remove the dependency array.",["339"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'toggleLikePost'. Either include it or remove the dependency array.",["340"],"'handleClose' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isUserPost' and 'toggleLikePost'. Either include them or remove the dependency array.",["341"],"'getPostCommentLoading' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["316"],["317"],"React Hook useEffect has missing dependencies: 'dispatch', 'isOwn', 'login', 'request', and 'user.login'. Either include them or remove the dependency array.",["342"],"'isLoaded' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'postActionTypes' is defined but never used.","'useHttp' is defined but never used.","'login' is assigned a value but never used.",["316"],["317"],"no-global-assign","no-unsafe-negation",{"messageId":"343","fix":"344","desc":"345"},{"messageId":"346","fix":"347","desc":"348"},{"messageId":"343","fix":"349","desc":"345"},{"messageId":"346","fix":"350","desc":"348"},{"desc":"351","fix":"352"},{"messageId":"343","fix":"353","desc":"345"},{"messageId":"346","fix":"354","desc":"348"},{"messageId":"343","fix":"355","desc":"345"},{"messageId":"346","fix":"356","desc":"348"},{"messageId":"343","fix":"357","desc":"345"},{"messageId":"346","fix":"358","desc":"348"},{"messageId":"343","fix":"359","desc":"345"},{"messageId":"346","fix":"360","desc":"348"},{"messageId":"343","fix":"361","desc":"345"},{"messageId":"346","fix":"362","desc":"348"},{"messageId":"343","fix":"363","desc":"345"},{"messageId":"346","fix":"364","desc":"348"},{"messageId":"343","fix":"365","desc":"345"},{"messageId":"346","fix":"366","desc":"348"},{"messageId":"343","fix":"367","desc":"345"},{"messageId":"346","fix":"368","desc":"348"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},"removeEscape",{"range":"377","text":"378"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"379","text":"380"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"381","text":"378"},{"range":"382","text":"380"},"Update the dependencies array to be: [dispatch, request, user.login]",{"range":"383","text":"384"},{"range":"385","text":"378"},{"range":"386","text":"380"},{"range":"387","text":"378"},{"range":"388","text":"380"},{"range":"389","text":"378"},{"range":"390","text":"380"},{"range":"391","text":"378"},{"range":"392","text":"380"},{"range":"393","text":"378"},{"range":"394","text":"380"},{"range":"395","text":"378"},{"range":"396","text":"380"},{"range":"397","text":"378"},{"range":"398","text":"380"},{"range":"399","text":"378"},{"range":"400","text":"380"},"Update the dependencies array to be: [history, request, token]",{"range":"401","text":"402"},"Update the dependencies array to be: [toggleLikePost]",{"range":"403","text":"404"},"Update the dependencies array to be: [isUserPost, toggleLikePost]",{"range":"405","text":"406"},"Update the dependencies array to be: [dispatch, isOwn, login, request, user.login]",{"range":"407","text":"408"},[1147,1148],"",[1147,1147],"\\",[1172,1173],[1172,1172],[2045,2047],"[dispatch, request, user.login]",[162,163],[162,162],[170,171],[170,170],[172,173],[172,172],[174,175],[174,174],[180,181],[180,180],[182,183],[182,182],[341,342],[341,341],[366,367],[366,366],[1017,1019],"[history, request, token]",[1797,1799],"[toggleLikePost]",[3919,3921],"[isUserPost, toggleLikePost]",[1714,1716],"[dispatch, isOwn, login, request, user.login]"]
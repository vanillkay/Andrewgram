[{"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/index.js":"1","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/reportWebVitals.js":"2","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/App.js":"3","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/routes/AndrewgramRoutes.js":"4","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Auth.js":"5","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Theme/theme.js":"6","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/EntryComponents/Entry.js":"7","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Login.js":"8","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Register.js":"9","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/EntryPage.js":"10","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/Andrewgram.js":"11","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/AuthPage.js":"12","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/hooks/http.hook.js":"13","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ForgotPassword.js":"14","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ForgotPasswordPage.js":"15","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ResetPasswordPage.js":"16","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ResetPassword.js":"17","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Loaders/Loader.js":"18","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/store.js":"19","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/reducer.js":"20","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/reducer.js":"21","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/selectors.js":"22","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/types.js":"23","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/actions.js":"24","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostsList/PostsList.js":"25","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/Post/Post.js":"26","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/PostIcons/PostIcons.js":"27","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/Likes/Likes.js":"28","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/NewComment/NewComment.js":"29","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/PostComments/PostComments.js":"30","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/reducer.js":"31","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/selectors.js":"32","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/types.js":"33","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/actions.js":"34","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo.js":"35","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/SubscribeSection.js":"36","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/Subscribes.js":"37","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/reducer.js":"38","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/selectors.js":"39","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/types.js":"40","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/actions.js":"41","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ProfilePage.js":"42","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileRef/ProfileRef.js":"43","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileInfo.js":"44","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePostsGrid.js":"45","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePost.js":"46","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewPost.js":"47","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/operations.js":"48","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewAvatar.js":"49"},{"size":744,"mtime":1612516239085,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1611561350800,"results":"52","hashOfConfig":"51"},{"size":459,"mtime":1612523279303,"results":"53","hashOfConfig":"51"},{"size":1346,"mtime":1612781708293,"results":"54","hashOfConfig":"51"},{"size":3749,"mtime":1612357519109,"results":"55","hashOfConfig":"51"},{"size":675,"mtime":1612445098841,"results":"56","hashOfConfig":"51"},{"size":1798,"mtime":1611680695177,"results":"57","hashOfConfig":"51"},{"size":6191,"mtime":1613316071071,"results":"58","hashOfConfig":"51"},{"size":9060,"mtime":1612361639811,"results":"59","hashOfConfig":"51"},{"size":571,"mtime":1612353747253,"results":"60","hashOfConfig":"51"},{"size":1714,"mtime":1613322126158,"results":"61","hashOfConfig":"51"},{"size":198,"mtime":1611668852326,"results":"62","hashOfConfig":"51"},{"size":1280,"mtime":1613045911339,"results":"63","hashOfConfig":"51"},{"size":4564,"mtime":1612367054237,"results":"64","hashOfConfig":"51"},{"size":850,"mtime":1612360461722,"results":"65","hashOfConfig":"51"},{"size":1234,"mtime":1612363445515,"results":"66","hashOfConfig":"51"},{"size":5795,"mtime":1612367161862,"results":"67","hashOfConfig":"51"},{"size":505,"mtime":1612358284965,"results":"68","hashOfConfig":"51"},{"size":337,"mtime":1612977383524,"results":"69","hashOfConfig":"51"},{"size":268,"mtime":1612731148805,"results":"70","hashOfConfig":"51"},{"size":1629,"mtime":1613325784068,"results":"71","hashOfConfig":"51"},{"size":251,"mtime":1613252834204,"results":"72","hashOfConfig":"51"},{"size":199,"mtime":1613253275421,"results":"73","hashOfConfig":"51"},{"size":518,"mtime":1613299019515,"results":"74","hashOfConfig":"51"},{"size":1771,"mtime":1613323433601,"results":"75","hashOfConfig":"51"},{"size":4874,"mtime":1613325628166,"results":"76","hashOfConfig":"51"},{"size":1258,"mtime":1612522815828,"results":"77","hashOfConfig":"51"},{"size":2813,"mtime":1612527251557,"results":"78","hashOfConfig":"51"},{"size":3358,"mtime":1613314894055,"results":"79","hashOfConfig":"51"},{"size":2785,"mtime":1612520174030,"results":"80","hashOfConfig":"51"},{"size":1197,"mtime":1613323185988,"results":"81","hashOfConfig":"51"},{"size":218,"mtime":1613321222706,"results":"82","hashOfConfig":"51"},{"size":210,"mtime":1613318837871,"results":"83","hashOfConfig":"51"},{"size":530,"mtime":1613318837888,"results":"84","hashOfConfig":"51"},{"size":743,"mtime":1613309600961,"results":"85","hashOfConfig":"51"},{"size":817,"mtime":1612977749687,"results":"86","hashOfConfig":"51"},{"size":2263,"mtime":1613318837899,"results":"87","hashOfConfig":"51"},{"size":592,"mtime":1613310633629,"results":"88","hashOfConfig":"51"},{"size":346,"mtime":1613311743991,"results":"89","hashOfConfig":"51"},{"size":129,"mtime":1613304145345,"results":"90","hashOfConfig":"51"},{"size":341,"mtime":1613305137826,"results":"91","hashOfConfig":"51"},{"size":1713,"mtime":1613323073334,"results":"92","hashOfConfig":"51"},{"size":4349,"mtime":1613322985414,"results":"93","hashOfConfig":"51"},{"size":1600,"mtime":1613322268156,"results":"94","hashOfConfig":"51"},{"size":3100,"mtime":1613325570511,"results":"95","hashOfConfig":"51"},{"size":1209,"mtime":1613324604046,"results":"96","hashOfConfig":"51"},{"size":5001,"mtime":1613322436650,"results":"97","hashOfConfig":"51"},{"size":441,"mtime":1613248201816,"results":"98","hashOfConfig":"51"},{"size":4309,"mtime":1613322985404,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"imbkpi",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/index.js",[],["212","213"],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/reportWebVitals.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/App.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/routes/AndrewgramRoutes.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Auth.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Theme/theme.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/EntryComponents/Entry.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Login.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/Register.js",["214","215"],"import React, {useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useHttp} from \"../../hooks/http.hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    inputs: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    input: {\n        width: '60%',\n        marginTop: '20px'\n    },\n    \"form-actions\": {\n        width: '100%',\n        marginTop: '2rem',\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    \"form-title\": {\n        textAlign: \"center\",\n        fontSize: '1.5rem'\n    },\n    form: {\n        '& .MuiFormHelperText-root\t': {\n            fontSize: '1rem'\n        },\n    },\n    'register-error': {\n        color: theme.colors.error,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    'register-success': {\n        color: theme.colors.success,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: '1.2rem'\n    }\n}));\nconst validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n\nconst Register = () => {\n    const [errors, setErrors] = useState({login: false, password: false, name: false, email: false, rePassword: false});\n    const [errorText, setErrorText] = useState({login: \"\", password: \"\", name: \"\", email: \"\", rePassword: \"\"});\n    const [inputs, setInputs] = useState({login: \"\", password: \"\", name: \"\", email: \"\", rePassword: \"\"});\n\n    const {loading, request} = useHttp();\n    const [isServerError, setIsServerError] = useState(false);\n    const [serverErrorText, setServerErrorText] = useState('');\n    const [isSuccess, setIsSuccess] = useState(false);\n\n\n    const checkFieldValue = (field, min, error) => {\n\n        if (field.value.length < min) {\n            setErrors(prevState => ({...prevState, [field.name]: true}));\n            setErrorText(prevState => ({...prevState, [field.name]: error}))\n            return true;\n        } else if (field.value.length >= min) {\n            setErrors(prevState => ({...prevState, [field.name]: false}));\n            setErrorText(prevState => ({...prevState, [field.name]: ''}))\n            return false;\n        }\n    }\n\n    const handleInputs = (e) => {\n        if (e.target.name === 'login') {\n            checkFieldValue(e.target, 5, 'Минимальная длина 5 символов', setErrors, setErrorText);\n        }\n        if (e.target.name === 'password') {\n            checkFieldValue(e.target, 7, 'Минимальная длина 7 символов', setErrors, setErrorText);\n        }\n        if (e.target.name === 'email') {\n            if (!validateEmail(e.target.value)) {\n                setErrors(prevState => ({...prevState, email: true}));\n                setErrorText(prevState => ({...prevState, email: 'Введите правильный email'}))\n            } else {\n                setErrors(prevState => ({...prevState, email: false}));\n                setErrorText(prevState => ({...prevState, email: ''}))\n            }\n        }\n        if (e.target.name === 'rePassword') {\n            if (e.target.value !== inputs.password) {\n                setErrors(prevState => ({...prevState, rePassword: true}));\n                setErrorText(prevState => ({...prevState, rePassword: 'Пароли не совпадают'}))\n            } else if (errors.rePassword) {\n                setErrors(prevState => ({...prevState, rePassword: false}));\n                setErrorText(prevState => ({...prevState, rePassword: ''}))\n            }\n        }\n        return setInputs(prevInput => ({...prevInput, [e.target.name]: e.target.value}))\n    }\n\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        try {\n            let isValid = true;\n            for (let value in inputs) {\n                if (value === 'name') continue;\n                if (!inputs[value]) {\n                    isValid = false;\n                    setErrors(prevState => ({...prevState, [value]: true}))\n                    setErrorText(prevState => ({...prevState, [value]: \"Введите значение\"}))\n                }\n            }\n            if (!isValid) return;\n\n            for (let error in errors) {\n                if (error === 'name') continue;\n                if (errors[error]) return;\n            }\n\n            const userInputs = {...inputs};\n\n            delete userInputs.rePassword;\n\n            const userValues = {...userInputs};\n\n\n            const user = await request('/auth/register', 'post', userValues);\n\n            if (!user.user) {\n                throw new Error('Ошибка регистрации')\n            } else {\n                if (isServerError) {\n                    setIsServerError(false);\n                }\n                setInputs({login: \"\", name: \"\", email: \"\", password: \"\", rePassword: \"\"})\n                setIsSuccess(true);\n            }\n        } catch (e) {\n            if (e.message.toLowerCase().includes('логин')) {\n                setErrors(prevState => ({...prevState, login: true}));\n            } else if (e.message.includes('email')) {\n                setErrors(prevState => ({...prevState, email: true}));\n            } else if (e.message.toLowerCase().includes('пароль') || e.message.toLowerCase().includes('пароли')) {\n                setErrors(prevState => ({...prevState, password: true, rePassword: true}));\n            }\n            setIsServerError(true);\n            setServerErrorText(e.message);\n        }\n    }\n\n\n    const classes = useStyles();\n    return (\n        <div>\n            <div className={classes[\"form-title\"]}>Введите данные</div>\n            <form className={classes.form}>\n                <div className={classes.inputs}>\n                    <TextField\n                        className={classes.input}\n                        error={errors.login}\n                        id=\"filled-error-helper-text2\"\n                        label=\"Логин\"\n                        onChange={handleInputs}\n                        helperText={errorText.login}\n                        variant=\"filled\"\n                        name={'login'}\n                        value={inputs.login}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.name}\n                        id=\"filled-error-helper-text5\"\n                        label=\"Имя\"\n                        onChange={handleInputs}\n                        helperText={errorText.name}\n                        variant=\"filled\"\n                        name={'name'}\n                        value={inputs.name}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.email}\n                        id=\"filled-error-helper-text6\"\n                        label=\"Email\"\n                        onChange={handleInputs}\n                        helperText={errorText.email}\n                        variant=\"filled\"\n                        name={'email'}\n                        value={inputs.email}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.password}\n                        type='password'\n                        id=\"filled-error-helper-text3\"\n                        label=\"Пароль\"\n                        onChange={handleInputs}\n                        helperText={errorText.password}\n                        variant=\"filled\"\n                        name={'password'}\n                        value={inputs.password}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.rePassword}\n                        type='password'\n                        id=\"filled-error-helper-text4\"\n                        label=\"Пароль ещё раз\"\n                        onChange={handleInputs}\n                        helperText={errorText.rePassword}\n                        variant=\"filled\"\n                        name={'rePassword'}\n                        value={inputs.rePassword}\n                    />\n                </div>\n                {isServerError && <p className={classes['register-error']}>{serverErrorText}</p>}\n                {isSuccess && <p className={classes['register-success']}>Вы успешно зарегистрировались</p>}\n                <div className={classes[\"form-actions\"]}>\n                    <Button onClick={handleForm} disabled={loading} type={'submit'} variant=\"contained\" color=\"primary\">\n                        Зарегестривароваться\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/EntryPage.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/Andrewgram.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/AuthPage.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/hooks/http.hook.js",["216","217","218","219","220","221"],"import {useCallback, useState} from \"react\";\n\nfunction getCookie(name) {\n    let matches = document.cookie.match(new RegExp(\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n\n    const request = useCallback(async (url, method = 'get', body = {}, headers = {}) => {\n        setLoading(true);\n        try {\n\n            const token = getCookie(\"XSRF-TOKEN\");\n\n\n            const init = {\n                method,\n                headers: {...headers, 'Content-Type': 'application/json', 'x-csrf-token': token}\n            }\n\n            if (method !== 'get') {\n                init.body = await JSON.stringify(body);\n            }\n\n            const response = await fetch(url, {...init});\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Что-то пошло не так')\n            }\n            return data;\n        } catch (error) {\n            throw new Error(error.message);\n        } finally {\n            setLoading(false);\n        }\n    }, [])\n\n\n    return {\n        loading, request,\n    }\n}","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ForgotPassword.js",["222","223"],"import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button} from \"@material-ui/core\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nconst useStyles = makeStyles(theme => ({\n    'forgot-form': {\n        minWidth: '300px',\n        maxWidth: '500px',\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    'forgot-form__title': {\n        marginBottom: '2rem'\n    },\n    'forgot-form__action': {\n        marginTop: '1.5rem',\n        minWidth: '200px'\n    },\n    'forgot-form__resp': {\n        marginTop: '1rem',\n        textAlign: 'center',\n        fontSize: '1.2rem'\n\n    },\n    'forgot-form__resp-success': {\n        color: theme.colors.success,\n    },\n    'forgot-form__resp-error': {\n        color: theme.colors.error\n    }\n}));\n\nconst ForgotPassword = (props) => {\n\n    const {setIsAppear} = props;\n\n    const [email, setEmail] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [inputErrorText, setInputErrorText] = useState('');\n    const [response, setResponse] = useState({ready: false, success: false, errorText: ''});\n    const {loading, request} = useHttp();\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const handleInput = (e) => {\n        if (inputError) {\n            setInputErrorText('');\n            setInputError(false);\n        }\n        setEmail(e.target.value);\n    }\n\n    const handleForm = async (e) => {\n        try {\n            e.preventDefault();\n            if (!validateEmail(email)) {\n                setInputError(true);\n                setInputErrorText('Введите корректный email');\n                return;\n            } else {\n                if (inputError) {\n                    setInputErrorText('');\n                    setInputError(false);\n                }\n                const resp = await request('/auth/reset', 'post', {email});\n                if (resp.success) {\n                    setEmail('');\n                    setResponse({ready: true, success: true, errorText: ''});\n                } else {\n                    throw new Error('Что-то пошло не так, повторите попытку позже')\n                }\n            }\n        } catch (e) {\n            setResponse({ready: true, success: false, errorText: e.message || 'Что-то пошло не так, повторите попытку позже'});\n        }\n    };\n\n    const goAuth = () => {\n        setIsAppear(false);\n        setTimeout(() => {\n            history.push('/auth')\n        }, 500);\n    }\n\n\n    return (\n        <form className={classes[\"forgot-form\"]}>\n            <div className={classes['forgot-form__title']}>Введите ваш email</div>\n            <TextField\n                error={inputError}\n                id=\"filled-error-helper-text9\"\n                label=\"Email\"\n                onChange={handleInput}\n                helperText={inputErrorText}\n                variant=\"filled\"\n                name={'email'}\n                value={email}\n            />\n            <div className={classes[\"forgot-form__resp\"]}>\n                {response.ready && (response.success ?\n                    <div className={classes['forgot-form__resp-success']}>На вашу почту отправлено письмо с\n                        инструкцией. Если письма нету – проверьте спам</div> :\n                    <div className={classes['forgot-form__resp-error']}>{response.errorText}</div>)}\n            </div>\n            <Button onClick={handleForm} className={classes['forgot-form__action']} disabled={loading}\n                    type={'submit'} variant=\"contained\"\n                    color=\"primary\">\n                Отправить письмо\n            </Button>\n            <Button onClick={goAuth} className={classes['forgot-form__action']} disabled={loading}\n                    variant=\"contained\"\n                    color=\"primary\">\n                Авторизоваться\n            </Button>\n        </form>\n    );\n};\n\nexport default ForgotPassword;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ForgotPasswordPage.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ResetPasswordPage.js",["224"],"import React, {useEffect, useState} from 'react';\nimport ResetPassword from \"../components/AuthComponents/ResetPassword\";\nimport Loader from \"../components/Loaders/Loader\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    'reset-page': {\n        width: '100%',\n        height: '50vh',\n        fontSize: '1.5rem',\n        paddingTop: '6rem',\n    }\n}))\n\n\nconst ResetPasswordPage = () => {\n\n    const [isValid, setIsValid] = useState(false);\n    const {loading, request} = useHttp();\n    const {token} = useParams();\n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(() => {\n        request('/auth/reset/check', 'post', {token})\n            .then(res => {\n                if (res.success) {\n                    setIsValid(true);\n                } else {\n                    history.push('/auth');\n                }\n            })\n    }, [])\n\n\n    return (\n        <div className={classes['reset-page']}>\n            {loading && <Loader/>}\n            {isValid && <ResetPassword token={token}/>}\n        </div>\n    );\n};\n\nexport default ResetPasswordPage;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AuthComponents/ResetPassword.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/Loaders/Loader.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/store.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/reducer.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/reducer.js",["225"],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostsList/PostsList.js",["226"],"import React, {useEffect} from 'react';\nimport Post from \"../PostComponents/Post/Post\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as postsActions from '../../../../store/posts/actions';\nimport {getUserInfo} from \"../../../../store/user/selectors\";\nimport {loadSubsPosts} from \"../../../../store/posts/operations\";\nimport {getPosts} from \"../../../../store/posts/selectors\";\n\nconst PostsList = () => {\n\n    const serverPosts = useSelector(getPosts);\n\n    const dispatch = useDispatch();\n\n    const userInfo = useSelector(getUserInfo)\n\n    const toggleLikePost = e => {\n        const targetData = e.target.dataset;\n        if (targetData.type === 'post' && targetData.info) {\n            dispatch(postsActions.toggleLike(targetData.info, userInfo.login))\n        }\n    }\n\n\n    useEffect(() => {\n        dispatch(loadSubsPosts());\n        document.addEventListener('dblclick', toggleLikePost);\n        return () => {\n            document.removeEventListener('dblclick', toggleLikePost);\n        }\n    }, [])\n    return (\n        <div>\n            {\n                serverPosts.map((item, index) => <Post info={{\n                    isLiked: item.isLiked,\n                    likes: item.likesAmount,\n                    serverComments: item.serverComments,\n                    id: item.id\n                }}\n                                                       key={index}/>)\n            }\n            {\n                !serverPosts.length && <div style={{\n                    fontSize: '2rem',\n                    textAlign: 'center',\n                    textTransform: 'uppercase',\n                    marginTop: '5rem'\n                }}>постов пока что нету</div>\n            }\n\n        </div>\n    );\n};\n\nexport default PostsList;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/Post/Post.js",["227"],"import React, {useState} from 'react';\nimport {Skeleton} from \"@material-ui/lab\";\nimport {\n    Avatar,\n    Card,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    makeStyles, Slide,\n} from \"@material-ui/core\";\nimport PostComments from \"../PostComments/PostComments\";\nimport * as postsActions from \"../../../../../store/posts/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Likes from \"../Likes/Likes\";\nimport PostIcons from \"../PostIcons/PostIcons\";\nimport NewComment from \"../NewComment/NewComment\";\nimport {getUserInfo} from \"../../../../../store/user/selectors\";\nimport {Link} from \"react-router-dom\";\nimport {writeNewComment} from \"../../../../../store/posts/actions\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    post: {\n        width: '100%',\n        marginBottom: '2rem',\n        border: '1px solid rgb(219, 219, 219)',\n        borderRadius: '3px'\n    },\n    media: {\n        maxHeight: '60vh',\n        overflow: 'hidden',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& img': {\n            width: '100%',\n            height: '100%',\n        }\n    },\n    'post-info':{\n        margin: '1rem 0 0 1rem',\n        '& a':{\n            textDecoration: 'none',\n            color: 'inherit',\n            fontWeight: 'bold',\n            marginRight: '.3rem'\n        }\n    }\n}));\n\n\nconst Post = (props) => {\n\n    const {\n        info,\n        isUserPost,\n        loading = false,\n    } = props;\n\n    const {isLiked, id, likes, text, comments, ownerLogin, avatar = ''} = info;\n\n\n    const [isComment, setIsComment] = useState(false);\n\n    const [animationSide, setAnimationSide] = useState('right');\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo)\n\n    console.log(id)\n\n    const toggleLike = () => {\n        dispatch(postsActions.toggleLike(id, user.login));\n    }\n\n\n    const toggleComment = () => {\n        setIsComment(prevState => !prevState);\n    }\n\n    const loadComment = (comment) => {\n        dispatch(writeNewComment(id, {owner: user.login, comment}))\n        setAnimationSide('left');\n        setIsComment(false);\n        setTimeout(() => {\n            setAnimationSide('right');\n        }, 500)\n\n    }\n\n\n    return (\n        <Card className={classes.post}>\n            <CardHeader\n                avatar={\n                    loading ? (\n                        <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40}/>\n                    ) : (\n                        <Avatar\n                            alt={text}\n                            src={'/' + avatar}\n                        />\n                    )\n                }\n                title={\n                    loading ? (\n                        <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{marginBottom: 6}}/>\n                    ) : ownerLogin\n                }\n                subheader={loading ? <Skeleton animation=\"wave\" height={10} width=\"40%\"/> : '5 hours ago'}\n            />\n            {loading ? (\n                <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media}/>\n            ) : (\n                <div className={classes.media}>\n                    <CardMedia\n                        component={\"img\"}\n                        title=\"Ted talk\"\n                        src={'/' + info.imgSrc}\n                        data-type={'post'}\n                        data-info={id}\n                    />\n                </div>\n            )}\n\n            <CardContent>\n                {loading ? (\n                    <>\n                        <Skeleton animation=\"wave\" height={10} style={{marginBottom: 6}}/>\n                        <Skeleton animation=\"wave\" height={10} width=\"80%\"/>\n                    </>\n                ) : (\n                    <>\n                        <PostIcons isLoading={isLoading} isComment={isComment} isLiked={isLiked} toggleLike={toggleLike}\n                                   toggleComment={toggleComment}/>\n                        <Likes likes={likes}/>\n                        <div className={classes['post-info']}><Link  to={{pathname: '/profile/' + ownerLogin,\n                            state: {\n                                fromNotifications: false\n                            }}}>{ownerLogin}</Link>{text}</div>\n                        <PostComments comments={comments}/>\n                        <Slide in={isComment} direction={animationSide} mountOnEnter\n                               unmountOnExit>\n                            <NewComment avatar={avatar} login={ownerLogin} loadComment={loadComment} isLoading={isLoading}/>\n                        </Slide>\n                    </>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n\n\nexport default Post;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/PostIcons/PostIcons.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/Likes/Likes.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/NewComment/NewComment.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/PostListComponents/PostComponents/PostComments/PostComments.js",["228","229"],"import React, {useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, Collapse} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\n    comments: {\n        marginLeft: '1rem'\n    },\n    'show-all-comment-btn': {\n        marginTop: '5px',\n        paddingLeft: 0,\n        '&:hover': {\n            backgroundColor: 'white'\n        }\n    },\n    comment: {\n        '& a': {\n            color: 'black',\n            fontWeight: 'bold',\n            marginRight: '0.5rem',\n            textDecoration: 'none',\n            transition: '.3s',\n            '&:hover':{\n                textDecoration: 'underline'\n            }\n        },\n        '&:last-of-type':{\n            marginBottom: '0'\n        }\n    },\n}))\n\nconst PostComments = (props) => {\n    const {comments} = props;\n\n    const [isAllComments, setIsAllComments] = useState(false);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.comments}>\n            {\n                comments.length > 1 ?\n                    (\n                        <>\n                            <p className={classes.comment}>\n                                <a href={'/' + comments[0].owner}>{comments[0].owner}</a>\n                                <span>{comments[0].comment}</span>\n                            </p>\n                            <Collapse mountOnEnter unmountOnExit in={isAllComments}>\n                                {\n                                    comments.map((item, index) => {\n                                        if (!index) return;\n                                        return (<p key={item.owner} className={classes.comment}>\n                                            <a href={'/' + item.owner}>{item.owner}</a>\n                                            <span>{item.comment}</span>\n                                        </p>)\n\n                                    })\n                                }\n                            </Collapse>\n                            <Button\n                                disableRipple\n                                className={classes['show-all-comment-btn']}\n                                onClick={() => setIsAllComments(prevState => !prevState)}>\n                                {isAllComments ? 'Скрыть' : `Показать больше (${comments.length - 1 })`}\n                            </Button>\n\n                        </>\n                    ) :\n\n                    (comments.map(item =>\n                        <p key={item.owner} className={classes.comment}>\n                            <a href=\"#\">{item.owner}</a>\n                            <span>{item.comment}</span>\n                        </p>))\n            }\n        </div>\n    );\n};\n\nexport default PostComments;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/reducer.js",["230"],"import * as subscribesActionTypes from './types'\n\n\nconst initialState = {\n    subscription: [],\n    recommended: [],\n    isLoading: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case subscribesActionTypes.TOGGLE_SUBS:{\n\n            const {login, type} = action.payload;\n\n\n            const arrToAddSubs = type === 'subscription' ? 'recommended' : 'subscription';\n            const subscribedProfile = state[type].find(item => item.login === login);\n            const newArrWithoutSubs = state[type].filter(item => item.login !== login);\n            const newArrWithSubs = [subscribedProfile, ...state[arrToAddSubs]];\n\n            return {...state, [arrToAddSubs]: newArrWithSubs, [type]: newArrWithoutSubs}\n        }\n        case subscribesActionTypes.SET_SUBSCRIPTIONS: {\n\n            return {...state, subscription: action.payload}\n        }\n        case subscribesActionTypes.SET_RECOMMENDED_PROFILES: {\n\n            return {...state, recommended: action.payload}\n        }\n        case subscribesActionTypes.TOGGLE_LOADING: {\n            return {...state, isLoading: !state.isLoading}\n        }\n    }\n    return state\n}\n\nexport default reducer;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/subscribers/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/SubscribeSection.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/SideProfileInfoComponents/SubscribeSection/Subscribes.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/reducer.js",["231"],"import * as userActionTypes from './types';\n\n\nconst initialState = {\n    isAuth: false,\n    isLoadingInfo: true,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case userActionTypes.AUTH_USER: {\n            return {...state, isAuth: true, ...action.payload}\n        }\n        case userActionTypes.LOGOUT_USER: {\n            return {isAuth: false}\n        }\n        case userActionTypes.SET_USER_AVATAR: {\n            return {...state, userInfo: {...state.userInfo, avatar: action.payload}}\n        }\n    }\n    return state;\n}\n\nexport default reducer;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/selectors.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/types.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/user/actions.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/pages/ProfilePage.js",["232"],"import React, {useEffect} from 'react';\nimport ProfileInfo from \"../components/AppComponents/Profile/ProfileInfo\";\nimport ProfilePostsGrid from \"../components/AppComponents/Profile/ProfilePostsGrid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport NewPost from \"../components/AppComponents/Profile/NewPost\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {setUserPosts} from \"../store/posts/actions\";\nimport {useParams} from \"react-router-dom\";\nimport {getUserInfo} from \"../store/user/selectors\";\nimport {getRecommended, getSubscriptions} from \"../store/subscribers/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile-page': {\n        padding: '4rem 2rem 0',\n        margin: '0 auto'\n    }\n}))\n\nconst ProfilePage = () => {\n\n    const classes = useStyles();\n\n    const {request, loading} = useHttp()\n\n\n    const {login} = useParams();\n\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo);\n\n    const visitedUser = [...useSelector(getRecommended), ...useSelector(getSubscriptions)].filter(item => item.login === login)[0]\n\n    const isOwn = login === user.login;\n\n\nuseEffect(() => {\n    if (!isOwn){\n        dispatch(setUserPosts([]));\n    }\n    request('/posts/users', 'post', {login})\n        .then(res => dispatch(setUserPosts(res)));\n}, [])\n\n\n\n\n\n    return (\n        <div className={classes['profile-page']}>\n            <ProfileInfo user={isOwn ? user : visitedUser} isOwn={isOwn} isLoading={loading}/>\n            {isOwn && <NewPost isLoading={loading}/>}\n            <ProfilePostsGrid user={isOwn ? user : visitedUser} isLoading={loading}/>\n        </div>\n    );\n};\n\nexport default ProfilePage;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileRef/ProfileRef.js",["233","234"],"import React, {useState} from 'react';\nimport {Avatar, Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {toggleLoading, toggleSubs} from \"../../../../store/subscribers/actions\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {useHttp} from \"../../../../hooks/http.hook\";\nimport {logoutUser} from \"../../../../store/user/actions\";\nimport NewAvatar from \"../NewAvatar\";\nimport {getUserInfo} from \"../../../../store/user/selectors\";\nimport {getRecommended} from \"../../../../store/subscribers/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile': {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%'\n    },\n    'profile__info': {\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n        color: 'inherit'\n    },\n    'profile__avatar': {\n        width: '4rem',\n        height: '4rem',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    'profile__name': {\n        marginLeft: '1rem',\n        fontWeight: 'bold',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    'profile__sbsc-btn': {\n        fontSize: '.8rem',\n        margin: '0 1rem .2rem 0',\n        textTransform: 'none',\n        color: props => props.type === 'subscription' ? '' : theme.colors.main,\n        '&:hover': {\n            background: 'none'\n        }\n    },\n    'profile__logout-btn': {\n        minWidth: '5rem',\n        minHeight: '2rem'\n    }\n}))\n\nconst ProfileRef = (props) => {\n\n    const {\n        type,\n        isOwn,\n        avatarClass,\n        isLoading,\n        isPageComp = false,\n        avatar = '',\n        login = 'andrew'\n    } = props;\n\n    const dispatch = useDispatch();\n\n\n    const {request, loading} = useHttp();\n    const [isNewAvatar, setNewAvatar] = useState(false);\n\n    const user = useSelector(getUserInfo);\n\n\n    const toggleSubsBtn = () => {\n        dispatch(toggleLoading());\n        request('/user/subs', 'post', {login, avatar: avatar, type, userLogin: user.login})\n            .then(res => {\n                if (res.success) {\n                    dispatch(toggleSubs({login, type}))\n                }\n            }).finally(() => {\n            dispatch(toggleLoading());\n        });\n\n    }\n\n    const btnText = type === 'subscription' ? 'Отписаться' : 'Подписаться';\n\n    const logout = () => {\n        request('/auth/logout')\n            .then(res => {\n                if (res.success) {\n                    dispatch(logoutUser());\n                }\n            })\n    }\n\n    const classes = useStyles({type, isOwn});\n\n    return (\n        <div className={classes.profile}>\n            {isPageComp ?\n                <>\n                    <div className={classes['profile__info']}>\n                        <Avatar className={avatarClass || classes['profile__avatar']} src={'/' + avatar}/>\n                        <div className={classes['profile__name']}>{login}</div>\n                    </div>\n                    {isOwn && <Button variant={\"contained\"}\n                                      color={\"primary\"}\n                                      onClick={() => setNewAvatar(true)}\n                                      disabled={loading}\n                                      className={classes['profile__logout-btn']}>Изменить аватар</Button>}</> :\n                <Link to={'profile/' + login} className={classes['profile__info']}>\n                    <Avatar alt=\"Avatar\" className={avatarClass || classes['profile__avatar']} src={avatar}/>\n                    <div className={classes['profile__name']}>{login}</div>\n                </Link>}\n            {isOwn ? <Button variant={\"contained\"}\n                             color={\"primary\"}\n                             onClick={logout}\n                             disabled={loading}\n                             className={classes['profile__logout-btn']}>Выйти</Button> :\n                <Button disableRipple disabled={isLoading} onClick={toggleSubsBtn}\n                        className={classes['profile__sbsc-btn']}>{btnText}</Button>\n            }\n            {isNewAvatar && <NewAvatar login={login} open={setNewAvatar}/>}\n\n        </div>\n    );\n};\n\nexport default ProfileRef;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfileInfo.js",["235","236"],"import React from 'react';\nimport ProfileRef from \"./ProfileRef/ProfileRef\";\nimport {useSelector} from \"react-redux\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport {getLoading, getRecommended} from \"../../../store/subscribers/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile-info': {\n        paddingLeft: '10rem',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n    },\n    'profile-loading': {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    }\n}))\n\nconst ProfileInfo = (props) => {\n\n    const {isLoading, isOwn} = props;\n\n\n    const {user} = props;\n\n\n    const classes = useStyles();\n\n    const recommended = useSelector(getRecommended);\n\n    const isLoadingSubs = useSelector(getLoading)\n\n    const userProfType = recommended.find(item => item.login === user.login) ? 'recommended' : 'subscription';\n\n\n\n    return (\n        <div className={classes['profile-info']}>\n            {!isLoading && <ProfileRef type={isOwn ? '' : userProfType} isLoading={isLoadingSubs} login={user.login} avatar={user.avatar || ''} isPageComp isOwn={isOwn}/>}\n            {isLoading &&\n            <div className={classes['profile-loading']}>\n                <Skeleton animation={'wave'} variant=\"circle\" height={'5rem'} width={'5rem'}/>\n                <Skeleton animation={'wave'} variant=\"text\" height={'4vh'} width={'30%'} style={{marginLeft: '2rem'}}/>\n            </div>}\n        </div>\n    );\n};\n\nexport default ProfileInfo;","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePostsGrid.js",["237"],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/ProfilePost.js",["238"],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewPost.js",[],"/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/store/posts/operations.js",["239","240","241"],"import postActionTypes from './types';\nimport {useHttp} from \"../../hooks/http.hook\";\n\n\n// const {request, loading} = useHttp();\n\nexport const loadSubsPosts = () => (dispatch, getState) => {\n    const state = getState();\n    const login = state.user.userInfo.login;\n    console.log('state',state);\n}\n\n// export const getUsersPosts = (login) => {\n//     request('/posts/users', 'post', {login})\n//         .then(res => console.log(res));\n// }","/Users/andreyshkurenko/Projects/MyProjects/Portfolio/Andrewgram/client/src/components/AppComponents/Profile/NewAvatar.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":46,"column":26,"nodeType":"248","messageId":"249","endLine":46,"endColumn":27,"suggestions":"250"},{"ruleId":"246","severity":1,"message":"247","line":46,"column":51,"nodeType":"248","messageId":"249","endLine":46,"endColumn":52,"suggestions":"251"},{"ruleId":"246","severity":1,"message":"252","line":5,"column":38,"nodeType":"248","messageId":"249","endLine":5,"endColumn":39,"suggestions":"253"},{"ruleId":"246","severity":1,"message":"254","line":5,"column":46,"nodeType":"248","messageId":"249","endLine":5,"endColumn":47,"suggestions":"255"},{"ruleId":"246","severity":1,"message":"256","line":5,"column":48,"nodeType":"248","messageId":"249","endLine":5,"endColumn":49,"suggestions":"257"},{"ruleId":"246","severity":1,"message":"247","line":5,"column":50,"nodeType":"248","messageId":"249","endLine":5,"endColumn":51,"suggestions":"258"},{"ruleId":"246","severity":1,"message":"259","line":5,"column":56,"nodeType":"248","messageId":"249","endLine":5,"endColumn":57,"suggestions":"260"},{"ruleId":"246","severity":1,"message":"261","line":5,"column":58,"nodeType":"248","messageId":"249","endLine":5,"endColumn":59,"suggestions":"262"},{"ruleId":"246","severity":1,"message":"247","line":10,"column":26,"nodeType":"248","messageId":"249","endLine":10,"endColumn":27,"suggestions":"263"},{"ruleId":"246","severity":1,"message":"247","line":10,"column":51,"nodeType":"248","messageId":"249","endLine":10,"endColumn":52,"suggestions":"264"},{"ruleId":"265","severity":1,"message":"266","line":36,"column":8,"nodeType":"267","endLine":36,"endColumn":10,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":12,"column":5,"nodeType":"271","messageId":"272","endLine":45,"endColumn":6},{"ruleId":"265","severity":1,"message":"273","line":31,"column":8,"nodeType":"267","endLine":31,"endColumn":10,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":66,"column":23,"nodeType":"277","messageId":"278","endLine":66,"endColumn":35},{"ruleId":"279","severity":1,"message":"280","line":54,"column":53,"nodeType":"281","messageId":"282","endLine":54,"endColumn":60},{"ruleId":"283","severity":1,"message":"284","line":75,"column":29,"nodeType":"285","endLine":75,"endColumn":41},{"ruleId":"269","severity":1,"message":"270","line":11,"column":5,"nodeType":"271","messageId":"272","endLine":35,"endColumn":6},{"ruleId":"269","severity":1,"message":"270","line":9,"column":5,"nodeType":"271","messageId":"272","endLine":19,"endColumn":6},{"ruleId":"265","severity":1,"message":"286","line":45,"column":4,"nodeType":"267","endLine":45,"endColumn":6,"suggestions":"287"},{"ruleId":"275","severity":1,"message":"288","line":6,"column":15,"nodeType":"277","messageId":"278","endLine":6,"endColumn":25},{"ruleId":"275","severity":1,"message":"289","line":11,"column":9,"nodeType":"277","messageId":"278","endLine":11,"endColumn":23},{"ruleId":"275","severity":1,"message":"290","line":4,"column":9,"nodeType":"277","messageId":"278","endLine":4,"endColumn":20},{"ruleId":"275","severity":1,"message":"291","line":5,"column":9,"nodeType":"277","messageId":"278","endLine":5,"endColumn":18},{"ruleId":"275","severity":1,"message":"292","line":51,"column":11,"nodeType":"277","messageId":"278","endLine":51,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":34,"column":25,"nodeType":"285","endLine":34,"endColumn":110},{"ruleId":"275","severity":1,"message":"295","line":1,"column":8,"nodeType":"277","messageId":"278","endLine":1,"endColumn":23},{"ruleId":"275","severity":1,"message":"296","line":2,"column":9,"nodeType":"277","messageId":"278","endLine":2,"endColumn":16},{"ruleId":"275","severity":1,"message":"297","line":9,"column":11,"nodeType":"277","messageId":"278","endLine":9,"endColumn":16},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["300","301"],["302","303"],"Unnecessary escape character: \\..",["304","305"],"Unnecessary escape character: \\(.",["306","307"],"Unnecessary escape character: \\).",["308","309"],["310","311"],"Unnecessary escape character: \\/.",["312","313"],"Unnecessary escape character: \\+.",["314","315"],["316","317"],["318","319"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'request', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["320"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'dispatch' and 'toggleLikePost'. Either include them or remove the dependency array.",["321"],"no-unused-vars","'setIsLoading' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch', 'isOwn', 'login', and 'request'. Either include them or remove the dependency array.",["322"],"'useHistory' is defined but never used.","'getRecommended' is defined but never used.","'getUserInfo' is defined but never used.","'useParams' is defined but never used.","'isLoaded' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'postActionTypes' is defined but never used.","'useHttp' is defined but never used.","'login' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"323","fix":"324","desc":"325"},{"messageId":"326","fix":"327","desc":"328"},{"messageId":"323","fix":"329","desc":"325"},{"messageId":"326","fix":"330","desc":"328"},{"messageId":"323","fix":"331","desc":"325"},{"messageId":"326","fix":"332","desc":"328"},{"messageId":"323","fix":"333","desc":"325"},{"messageId":"326","fix":"334","desc":"328"},{"messageId":"323","fix":"335","desc":"325"},{"messageId":"326","fix":"336","desc":"328"},{"messageId":"323","fix":"337","desc":"325"},{"messageId":"326","fix":"338","desc":"328"},{"messageId":"323","fix":"339","desc":"325"},{"messageId":"326","fix":"340","desc":"328"},{"messageId":"323","fix":"341","desc":"325"},{"messageId":"326","fix":"342","desc":"328"},{"messageId":"323","fix":"343","desc":"325"},{"messageId":"326","fix":"344","desc":"328"},{"messageId":"323","fix":"345","desc":"325"},{"messageId":"326","fix":"346","desc":"328"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},"removeEscape",{"range":"353","text":"354"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"355","text":"356"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"357","text":"354"},{"range":"358","text":"356"},{"range":"359","text":"354"},{"range":"360","text":"356"},{"range":"361","text":"354"},{"range":"362","text":"356"},{"range":"363","text":"354"},{"range":"364","text":"356"},{"range":"365","text":"354"},{"range":"366","text":"356"},{"range":"367","text":"354"},{"range":"368","text":"356"},{"range":"369","text":"354"},{"range":"370","text":"356"},{"range":"371","text":"354"},{"range":"372","text":"356"},{"range":"373","text":"354"},{"range":"374","text":"356"},"Update the dependencies array to be: [history, request, token]",{"range":"375","text":"376"},"Update the dependencies array to be: [dispatch, toggleLikePost]",{"range":"377","text":"378"},"Update the dependencies array to be: [dispatch, isOwn, login, request]",{"range":"379","text":"380"},[1147,1148],"",[1147,1147],"\\",[1172,1173],[1172,1172],[162,163],[162,162],[170,171],[170,170],[172,173],[172,172],[174,175],[174,174],[180,181],[180,180],[182,183],[182,182],[341,342],[341,341],[366,367],[366,366],[1017,1019],"[history, request, token]",[1022,1024],"[dispatch, toggleLikePost]",[1353,1355],"[dispatch, isOwn, login, request]"]
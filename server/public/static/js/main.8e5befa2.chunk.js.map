{"version":3,"sources":["components/Theme/theme.js","components/EntryComponents/Entry.js","pages/EntryPage.js","hooks/http.hook.js","store/user/types.js","store/subscribers/types.js","store/subscribers/actions.js","components/AuthComponents/Login.js","store/user/actions.js","components/AuthComponents/Register.js","components/AuthComponents/Auth.js","pages/AuthPage.js","components/AppComponents/PostListComponents/PostComponents/PostComments/PostComments.js","store/posts/types.js","store/posts/actions.js","components/AppComponents/PostListComponents/PostComponents/Likes/Likes.js","store/posts/selectors.js","components/AppComponents/PostListComponents/PostComponents/PostIcons/PostIcons.js","components/AppComponents/PostListComponents/PostComponents/NewComment/NewComment.js","store/user/selectors.js","components/AppComponents/PostListComponents/PostComponents/Post/Post.js","components/AppComponents/PostListComponents/PostsList/PostsList.js","components/AppComponents/Profile/NewAvatar.js","store/subscribers/selectors.js","components/AppComponents/Profile/ProfileRef/ProfileRef.js","components/AppComponents/SideProfileInfoComponents/SubscribeSection/Subscribes.js","components/AppComponents/SideProfileInfoComponents/SubscribeSection/SubscribeSection.js","components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo.js","components/Loaders/Loader.js","pages/Andrewgram.js","components/AuthComponents/ForgotPassword.js","pages/ForgotPasswordPage.js","components/AuthComponents/ResetPassword.js","pages/ResetPasswordPage.js","components/AppComponents/Profile/ProfileInfo.js","components/AppComponents/Profile/ProfilePost.js","components/AppComponents/Profile/ProfilePostsGrid.js","components/AppComponents/Profile/NewPost.js","pages/ProfilePage.js","routes/AndrewgramRoutes.js","App.js","reportWebVitals.js","store/posts/reducer.js","store/subscribers/reducer.js","store/user/reducer.js","store/reducer.js","store/store.js","index.js"],"names":["theme","createMuiTheme","colors","main","error","success","like","typography","Theme","props","ThemeProvider","children","useStyles","makeStyles","fontSize","marginTop","textAlign","Entry","history","useHistory","classes","useState","title","actions","isAppear","setIsAppear","useEffect","setTimeout","prevState","className","Fade","in","timeout","enter","exit","Button","onClick","push","variant","color","width","height","boxSizing","display","alignItems","justifyContent","EntryPage","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","useHttp","loading","setLoading","request","useCallback","url","a","method","body","headers","token","init","JSON","stringify","fetch","response","json","data","ok","Error","message","AUTH_USER","LOGOUT_USER","SET_USER_AVATAR","TOGGLE_SUBS","SET_SUBSCRIPTIONS","SET_RECOMMENDED_PROFILES","TOGGLE_LOADING","toggleLoading","type","subscribesActionTypes","inputs","flexDirection","input","maxWidth","margin","form","fontWeight","Login","login","password","setError","errorText","setErrorText","setInputs","isServerError","setIsServerError","serverErrorText","setServerErrorText","dispatch","useDispatch","handleInputs","e","target","value","prevInput","handleForm","preventDefault","isValid","user","userInfo","userActionTypes","payload","subscriptions","recommended","toLowerCase","includes","TextField","id","label","onChange","helperText","disabled","style","Register","email","rePassword","errors","setErrors","isSuccess","setIsSuccess","checkFieldValue","field","min","length","test","String","userInputs","userValues","TabPanel","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","LinkTab","Tab","component","event","FullWidthTabs","useTheme","React","setValue","AppBar","position","Tabs","newValue","indicatorColor","textColor","aria-label","axis","onChangeIndex","dir","direction","borderRadius","paddingTop","Auth","Slide","AuthPage","comments","marginLeft","paddingLeft","backgroundColor","comment","marginRight","textDecoration","transition","marginBottom","PostComments","isAllComments","setIsAllComments","to","owner","text","Collapse","mountOnEnter","unmountOnExit","map","item","_id","disableRipple","TOGGLE_LIKE_POST","TOGGLE_LIKE_POST_LOADING","TOGGLE_COMMENT_POST_LOADING","WRITE_NEW_COMMENT","SET_USER_POSTS","ADD_USER_POST","TOGGLE_ALL_POST_LOADING","SET_ALL_POSTS","toggleLike","likeOwner","isUserPost","postsActionTypes","setUserPosts","posts","toggleLoadingLike","toggleLoadingPost","toggleAllPostsLoading","likes","cursor","modal","minWidth","boxShadow","shadows","padding","outline","maxHeight","overflowX","paddingBottom","top","borderBottom","right","Likes","open","setOpen","handleClose","Modal","disableAutoFocus","disableEnforceFocus","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","getPosts","getAllPostsLoading","isLoadingAllPosts","getUserPosts","userPosts","getUserPostsLoaded","isLoadedUserPosts","getPostLikeLoading","isLikedPost","getPostCommentLoading","isCommentPost","PostIcons","isLoading","isLiked","isComment","toggleComment","isLikeLoading","useSelector","IconButton","left","bottom","flexWrap","NewComment","forwardRef","loadComment","avatar","setComment","isPostLoading","ref","Grid","container","spacing","alert","Avatar","alt","src","FormControl","fullWidth","Input","multiline","placeholder","endAdornment","InputAdornment","CircularProgress","isAuth","getUserInfo","post","isModal","border","media","overflow","Post","setModalInfo","info","loadingPost","imgSrc","ownerLogin","setIsComment","animationSide","setAnimationSide","likerLogin","then","res","postsActions","finally","toggleLikePost","targetData","dataset","addEventListener","removeEventListener","Card","CardHeader","Skeleton","animation","CardMedia","data-type","data-info","CardContent","pathname","state","fromNotifications","postId","writeNewComment","PostsList","serverPosts","imageSrc","textTransform","fontFamily","NewAvatar","img","setImg","isError","inputImg","setInputImg","useRef","download","formData","FormData","append","current","files","set","path","accept","multiple","inputRef","file","reader","FileReader","result","readAsDataURL","getSubscriptions","subscribers","subscription","getRecommended","getLoading","background","minHeight","ProfileRef","isOwn","avatarClass","isPageComp","isNewAvatar","setNewAvatar","btnText","profile","userLogin","Subscribes","SubscribeSection","subscribed","SideProfileInfo","Loader","Andrewgram","isLoadingInfo","validateEmail","ForgotPassword","setEmail","inputError","setInputError","inputErrorText","setInputErrorText","ready","setResponse","ForgotPasswordPage","ResetPassword","setPassword","serverError","setServerError","isReady","setIsReady","Object","assign","resp","catch","ResetPasswordPage","setIsValid","useParams","ProfileInfo","isLoadingSubs","userProfType","find","overflowY","ProfilePost","gridTemplateColumns","gridTemplateRows","gridColumnGap","gridRowGap","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","ProfilePostsGrid","isPostOpen","setIsPostOpen","modalInfo","openModal","alignSelf","NewPost","isNewPost","setIsNewPost","newPostInfo","setNewPostInfo","setIsError","fileInput","ProfilePage","visitedUser","filter","ProtectedRoute","exact","AndrewgramRoutes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","neededPostsArr","neededPost","isInLikes","findIndex","toString","splice","arrToAddSubs","subscribedProfile","newArrWithoutSubs","newArrWithSubs","rootReducer","combineReducers","devtools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e5befa2.chunk.js","sourcesContent":["import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\n\n\nconst theme = createMuiTheme({\n    colors: {\n        main: '#3f51b5',\n        error: '#f44336',\n        success: '#4caf50',\n        like: 'rgb(219, 86, 91)'\n    },\n    typography: {\n        \"fontFamily\": \"\\\"Montserrat\\\", \\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n        \"fontSize\": 14,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 400,\n        \"fontWeightMedium\": 500\n    }\n});\n\n\n\n\nconst Theme = (props) => {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    );\n};\n\nexport default Theme;","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button, Fade} from \"@material-ui/core\";\nimport {useHistory} from 'react-router-dom'\n\n\nconst useStyles = makeStyles(() => ({\n    'entry__title': {\n        fontSize: '2.5rem'\n    },\n    'entry__actions': {\n        marginTop: '50px',\n        textAlign: 'center'\n    }\n}))\n\n\nconst Entry = () => {\n\n    const history = useHistory()\n    const classes = useStyles();\n\n    const [isAppear, setIsAppear] = useState({title: false, actions: false});\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsAppear(prevState => ({...prevState, title: true}));\n        }, 500);\n        setTimeout(() => {\n            setIsAppear(prevState => ({...prevState, actions: true}));\n        }, 1000)\n    }, []);\n\n\n    const startApp = () => {\n        setTimeout(() => {\n            setIsAppear(prevState => ({...prevState, title: false}));\n        }, 0);\n        setTimeout(() => {\n            setIsAppear(prevState => ({...prevState, actions: false}));\n        }, 0)\n        setTimeout(() => {\n            history.push('/auth')\n        }, 500)\n    }\n\n    return (\n        <div className={classes['entry__content']}>\n            <Fade in={isAppear.title} timeout={{enter: 2000, exit: 500,}}>\n                <div className={classes['entry__title']}>Добро пожаловать в Andrewgram</div>\n            </Fade>\n            <div className={classes['entry__actions']}>\n                <Fade in={isAppear.actions} timeout={{enter: 1500, exit: 500,}}>\n                    <Button onClick={startApp} variant=\"contained\" color=\"primary\">\n                        Войти\n                    </Button>\n                </Fade>\n            </div>\n        </div>\n    );\n};\n\nexport default Entry;","import React from 'react';\nimport Entry from \"../components/EntryComponents/Entry\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\n\nconst useStyles = makeStyles(() => ({\n    'entry-page': {\n        width: '100%',\n        height: '90vh',\n        boxSizing: 'border-box',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}))\n\nconst EntryPage = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes['entry-page']}>\n            <Entry/>\n        </div>\n    );\n};\n\nexport default EntryPage;","import {useCallback, useState} from \"react\";\n\nfunction getCookie(name) {\n    let matches = document.cookie.match(new RegExp(\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n\n    const request = useCallback(async (url, method = 'get', body = {}, headers = {}) => {\n        setLoading(true);\n        try {\n\n            const token = getCookie(\"XSRF-TOKEN\");\n\n\n            const init = {\n                method,\n                headers: {...headers, 'Content-Type': 'application/json', 'x-csrf-token': token}\n            }\n\n            if (method !== 'get') {\n                init.body = await JSON.stringify(body);\n            }\n\n            const response = await fetch(url, {...init});\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Что-то пошло не так')\n            }\n            return data;\n        } catch (error) {\n            throw new Error(error.message);\n        } finally {\n            setLoading(false);\n        }\n    }, [])\n\n\n    return {\n        loading, request,\n    }\n}","export const AUTH_USER = 'AUTH_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const SET_USER_AVATAR = 'SET_USER_AVATAR';","export const TOGGLE_SUBS = 'TOGGLE_SUBS';\nexport const SET_SUBSCRIPTIONS = 'SET_SUBSCRIPTIONS';\nexport const SET_RECOMMENDED_PROFILES= 'SET_RECOMMENDED_PROFILES';\nexport const TOGGLE_LOADING = 'TOGGLE_LOADING';","import * as subscribesActionTypes from './types'\n\nexport const toggleSubs = (info) => ({\n    type: subscribesActionTypes.TOGGLE_SUBS,\n    payload: info\n});\n\nexport const setSubscriptions = (subscriptions) => ({\n    type: subscribesActionTypes.SET_SUBSCRIPTIONS,\n    payload: subscriptions || []\n})\n\nexport const setRecommended  = (recommended) => ({\n    type: subscribesActionTypes.SET_RECOMMENDED_PROFILES,\n    payload: recommended || []\n})\n\nexport const toggleLoading = () => ({\n    type: subscribesActionTypes.TOGGLE_LOADING\n})","import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button} from \"@material-ui/core\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {useHistory} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {authUser} from \"../../store/user/actions\";\nimport {setRecommended, setSubscriptions} from \"../../store/subscribers/actions\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    inputs: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    input: {\n        width: '60%',\n        marginTop: '20px'\n    },\n    \"form-actions\": {\n        width: '100%',\n        maxWidth: '200px',\n        margin: '2rem auto 0',\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n        flexDirection: 'column'\n    },\n    \"form-title\": {\n        textAlign: \"center\",\n        fontSize: '1.5rem'\n    },\n    form: {\n        '& .MuiFormHelperText-root\t': {\n            fontSize: '1rem'\n        },\n    },\n    'login-error': {\n        color: theme.colors.error,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    }\n}));\n\nconst Login = (props) => {\n    const [error, setError] = useState({login: false, password: false});\n    const [errorText, setErrorText] = useState({login: \"\", password: \"\"});\n    const [inputs, setInputs] = useState({login: \"\", password: \"\"});\n\n    const [isServerError, setIsServerError] = useState(false);\n    const [serverErrorText, setServerErrorText] = useState('')\n\n    const {loading, request} = useHttp();\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const {setIsAppear} = props;\n\n\n    const handleInputs = (e) => {\n        if (error[e.target.name]) {\n            setError(prevState => ({...prevState, [e.target.name]: false}))\n            setErrorText(prevState => ({...prevState, [e.target.name]: \"\"}))\n        }\n        if (!e.target.value) {\n            setError(prevState => ({...prevState, [e.target.name]: true}))\n            setErrorText(prevState => ({...prevState, [e.target.name]: \"Введите значение\"}))\n        }\n        return setInputs(prevInput => ({...prevInput, [e.target.name]: e.target.value}))\n    }\n\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        try {\n            if (error.login || error.password) {\n                if (!inputs.login || !inputs.password) {\n                    return;\n                }\n            }\n            let isValid = true;\n            for (let value in inputs) {\n                if (!inputs[value]) {\n                    setError(prevState => ({\n                        ...prevState, [value]: true,\n                    }))\n                    setErrorText(prevState => ({\n                        ...prevState, [value]: 'Введите значение',\n                    }))\n                    isValid = false;\n                }\n            }\n\n            if (!isValid) return;\n\n\n            const user = await request('/auth/login', 'post', inputs);\n\n            if (!user.userInfo) {\n                throw new Error('Такого пользователя нету')\n            } else {\n                if (isServerError) {\n                    setIsServerError(false);\n                }\n                setIsAppear(false);\n                setTimeout(() => {\n                    history.push('/app');\n                }, 700)\n            }\n\n            dispatch(authUser(user));\n            dispatch(setSubscriptions(user.userInfo.subscriptions));\n            dispatch(setRecommended(user.userInfo.recommended));\n        } catch (e) {\n            if (e.message.toLowerCase().includes('пароль')) {\n                setError(prevState => ({...prevState, password: true}))\n            } else if (e.message.toLowerCase().includes('пользователя')) {\n                setError(prevState => ({...prevState, login: true}))\n            }\n            setIsServerError(true);\n            setServerErrorText(e.message);\n\n        }\n    }\n\n    const forgotPasswordHandle = () => {\n        setIsAppear(false);\n        setTimeout(() => {\n            history.push('/auth/reset');\n        }, 700)\n    }\n\n    const classes = useStyles();\n    return (\n        <div>\n            <div className={classes[\"form-title\"]}>Введите данные</div>\n            <form className={classes.form}>\n                <div className={classes.inputs}>\n                    <TextField\n                        className={classes.input}\n                        error={error.login}\n                        id=\"filled-error-helper-text\"\n                        label=\"Логин\"\n                        onChange={handleInputs}\n                        helperText={errorText.login}\n                        variant=\"filled\"\n                        name={'login'}\n                        value={inputs.login}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={error.password}\n                        type='password'\n                        id=\"filled-error-helper-text1\"\n                        label=\"Пароль\"\n                        onChange={handleInputs}\n                        helperText={errorText.password}\n                        variant=\"filled\"\n                        name={'password'}\n                        value={inputs.password}\n                    />\n                </div>\n                {isServerError && <p className={classes['login-error']}>{serverErrorText}</p>}\n                <div className={classes[\"form-actions\"]}>\n                    <Button onClick={handleForm} disabled={loading} type={'submit'} variant=\"contained\" color=\"primary\">\n                        Войти\n                    </Button>\n                    <Button onClick={forgotPasswordHandle} variant=\"contained\" style={{marginTop: '20px'}} disabled={loading} color=\"primary\">\n                        Забыли пароль\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;","import * as userActionTypes from './types';\n\nexport const authUser = (userInfo) => ({\n    type: userActionTypes.AUTH_USER,\n    payload: {...userInfo}\n})\n\nexport const logoutUser = () => ({\n    type: userActionTypes.LOGOUT_USER,\n})\n\nexport const setUserAvatar = (avatar) => ({\n    type: userActionTypes.SET_USER_AVATAR,\n    payload: avatar\n})","import React, {useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useHttp} from \"../../hooks/http.hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    inputs: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    input: {\n        width: '60%',\n        marginTop: '20px'\n    },\n    \"form-actions\": {\n        width: '100%',\n        marginTop: '2rem',\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    \"form-title\": {\n        textAlign: \"center\",\n        fontSize: '1.5rem'\n    },\n    form: {\n        '& .MuiFormHelperText-root\t': {\n            fontSize: '1rem'\n        },\n    },\n    'register-error': {\n        color: theme.colors.error,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    'register-success': {\n        color: theme.colors.success,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: '1.2rem'\n    }\n}));\nconst validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n\nconst Register = () => {\n    const [errors, setErrors] = useState({login: false, password: false, name: false, email: false, rePassword: false});\n    const [errorText, setErrorText] = useState({login: \"\", password: \"\", name: \"\", email: \"\", rePassword: \"\"});\n    const [inputs, setInputs] = useState({login: \"\", password: \"\", name: \"\", email: \"\", rePassword: \"\"});\n\n    const {loading, request} = useHttp();\n    const [isServerError, setIsServerError] = useState(false);\n    const [serverErrorText, setServerErrorText] = useState('');\n    const [isSuccess, setIsSuccess] = useState(false);\n\n\n    const checkFieldValue = (field, min, error) => {\n\n        if (field.value.length < min) {\n            setErrors(prevState => ({...prevState, [field.name]: true}));\n            setErrorText(prevState => ({...prevState, [field.name]: error}))\n            return true;\n        } else if (field.value.length >= min) {\n            setErrors(prevState => ({...prevState, [field.name]: false}));\n            setErrorText(prevState => ({...prevState, [field.name]: ''}))\n            return false;\n        }\n    }\n\n    const handleInputs = (e) => {\n        const field = e.target;\n\n        if (field.name === 'login') {\n            checkFieldValue(field, 5, 'Минимальная длина 5 символов');\n        }\n        if (field.name === 'password') {\n            checkFieldValue(field, 7, 'Минимальная длина 7 символов');\n        }\n        if (field.name === 'email') {\n            if (!validateEmail(field.value)) {\n                setErrors(prevState => ({...prevState, email: true}));\n                setErrorText(prevState => ({...prevState, email: 'Введите правильный email'}))\n            } else {\n                setErrors(prevState => ({...prevState, email: false}));\n                setErrorText(prevState => ({...prevState, email: ''}))\n            }\n        }\n        if (field.name === 'rePassword') {\n            if (field.value !== inputs.password) {\n                setErrors(prevState => ({...prevState, rePassword: true}));\n                setErrorText(prevState => ({...prevState, rePassword: 'Пароли не совпадают'}))\n            } else if (errors.rePassword) {\n                setErrors(prevState => ({...prevState, rePassword: false}));\n                setErrorText(prevState => ({...prevState, rePassword: ''}))\n            }\n        }\n        return setInputs(prevInput => ({...prevInput, [field.name]: field.value}))\n    }\n\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        try {\n            let isValid = true;\n            for (let value in inputs) {\n                if (value === 'name') continue;\n                if (!inputs[value]) {\n                    isValid = false;\n                    setErrors(prevState => ({...prevState, [value]: true}))\n                    setErrorText(prevState => ({...prevState, [value]: \"Введите значение\"}))\n                }\n            }\n            if (!isValid) return;\n\n            for (let error in errors) {\n                if (error === 'name') continue;\n                if (errors[error]) return;\n            }\n\n            const userInputs = {...inputs};\n\n            delete userInputs.rePassword;\n\n            const userValues = {...userInputs};\n\n\n            const user = await request('/auth/register', 'post', userValues);\n\n            if (!user.user) {\n                throw new Error('Ошибка регистрации')\n            } else {\n                if (isServerError) {\n                    setIsServerError(false);\n                }\n                setInputs({login: \"\", name: \"\", email: \"\", password: \"\", rePassword: \"\"})\n                setIsSuccess(true);\n            }\n        } catch (e) {\n            if (e.message.toLowerCase().includes('логин')) {\n                setErrors(prevState => ({...prevState, login: true}));\n            } else if (e.message.includes('email')) {\n                setErrors(prevState => ({...prevState, email: true}));\n            } else if (e.message.toLowerCase().includes('пароль') || e.message.toLowerCase().includes('пароли')) {\n                setErrors(prevState => ({...prevState, password: true, rePassword: true}));\n            }\n            setIsServerError(true);\n            setServerErrorText(e.message);\n        }\n    }\n\n\n    const classes = useStyles();\n    return (\n        <div>\n            <div className={classes[\"form-title\"]}>Введите данные</div>\n            <form className={classes.form}>\n                <div className={classes.inputs}>\n                    <TextField\n                        className={classes.input}\n                        error={errors.login}\n                        id=\"filled-error-helper-text2\"\n                        label=\"Логин\"\n                        onChange={handleInputs}\n                        helperText={errorText.login}\n                        variant=\"filled\"\n                        name={'login'}\n                        value={inputs.login}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.name}\n                        id=\"filled-error-helper-text5\"\n                        label=\"Имя\"\n                        onChange={handleInputs}\n                        helperText={errorText.name}\n                        variant=\"filled\"\n                        name={'name'}\n                        value={inputs.name}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.email}\n                        id=\"filled-error-helper-text6\"\n                        label=\"Email\"\n                        onChange={handleInputs}\n                        helperText={errorText.email}\n                        variant=\"filled\"\n                        name={'email'}\n                        value={inputs.email}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.password}\n                        type='password'\n                        id=\"filled-error-helper-text3\"\n                        label=\"Пароль\"\n                        onChange={handleInputs}\n                        helperText={errorText.password}\n                        variant=\"filled\"\n                        name={'password'}\n                        value={inputs.password}\n                    />\n                    <TextField\n                        className={classes.input}\n                        error={errors.rePassword}\n                        type='password'\n                        id=\"filled-error-helper-text4\"\n                        label=\"Пароль ещё раз\"\n                        onChange={handleInputs}\n                        helperText={errorText.rePassword}\n                        variant=\"filled\"\n                        name={'rePassword'}\n                        value={inputs.rePassword}\n                    />\n                </div>\n                {isServerError && <p className={classes['register-error']}>{serverErrorText}</p>}\n                {isSuccess && <p className={classes['register-success']}>Вы успешно зарегистрировались</p>}\n                <div className={classes[\"form-actions\"]}>\n                    <Button onClick={handleForm} disabled={loading} type={'submit'} variant=\"contained\" color=\"primary\">\n                        Зарегестривароваться\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;","import React, {useEffect, useState} from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport {Slide} from \"@material-ui/core\";\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nfunction LinkTab(props) {\n    return (\n        <Tab\n            component=\"a\"\n            onClick={(event) => {\n                event.preventDefault();\n            }}\n            {...props}\n        />\n    );\n}\n\n\nfunction FullWidthTabs(props) {\n\n    const {setIsAppear} = props;\n\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <LinkTab  label=\"Авторизоваться\" {...a11yProps(0)} />\n                    <LinkTab  label=\"Зарегистрироваться\" {...a11yProps(1)} />\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={!value ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <TabPanel value={value} index={0} dir={theme.direction}>\n\n                    <Login setIsAppear={setIsAppear}/>\n                </TabPanel>\n                <TabPanel value={value} index={1} dir={theme.direction}>\n                    <Register setIsAppear={setIsAppear}/>\n                </TabPanel>\n            </SwipeableViews>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    \"auth-page\": {\n        margin: '0 auto',\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n\n    },\n    \"auth-page__auth-block\": {\n        width: '100%',\n        maxWidth: '700px',\n        boxSizing: 'border-box',\n        borderRadius: '20px',\n        paddingTop: '3rem',\n    }\n}));\n\n\nconst Auth = () => {\n\n    const classes = useStyles();\n    const [isAppear, setIsAppear] = useState(false);\n\n\n    useEffect(() => {\n        setIsAppear(true)\n    }, [])\n\n\n    return (\n        <Slide in={isAppear} timeout={{ enter: 1000, exit: 500,}}>\n            <div className={classes[\"auth-page\"]}>\n                <div className={classes[\"auth-page__auth-block\"]}>\n                    <FullWidthTabs setIsAppear={setIsAppear}/>\n                </div>\n            </div>\n        </Slide>\n    );\n};\n\nexport default Auth;","import React from 'react';\nimport Auth from \"../components/AuthComponents/Auth\";\n\nconst AuthPage = () => {\n    return (\n        <>\n            <Auth/>\n        </>\n    );\n};\n\nexport default AuthPage;","import React, {useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, Collapse} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n\n    comments: {\n        marginLeft: '1rem'\n    },\n    'show-all-comment-btn': {\n        marginTop: '5px',\n        paddingLeft: 0,\n        '&:hover': {\n            backgroundColor: 'white'\n        }\n    },\n    comment: {\n        '& a': {\n            color: 'black',\n            fontWeight: 'bold',\n            marginRight: '0.5rem',\n            textDecoration: 'none',\n            transition: '.3s',\n            '&:hover':{\n                textDecoration: 'underline'\n            }\n        },\n        '&:last-of-type':{\n            marginBottom: '0'\n        }\n    },\n}))\n\nconst PostComments = (props) => {\n    const {comments} = props;\n\n    const [isAllComments, setIsAllComments] = useState(false);\n\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.comments}>\n            {\n                comments.length > 1 ?\n                    (\n                        <>\n                            <p className={classes.comment}>\n                                <Link to={'/profile/' + comments[0].owner}>{comments[0].owner}</Link>\n                                <span>{comments[0].text}</span>\n                            </p>\n                            <Collapse mountOnEnter unmountOnExit in={isAllComments}>\n                                {\n                                    comments.map((item, index) => {\n                                        if (!index) return;\n                                        return (<p key={item._id} className={classes.comment}>\n                                            <Link to={'/profile/' + item.owner}>{item.owner}</Link>\n                                            <span>{item.text}</span>\n                                        </p>)\n\n                                    })\n                                }\n                            </Collapse>\n                            <Button\n                                disableRipple\n                                className={classes['show-all-comment-btn']}\n                                onClick={() => setIsAllComments(prevState => !prevState)}>\n                                {isAllComments ? 'Скрыть' : `Показать больше (${comments.length - 1 })`}\n                            </Button>\n\n                        </>\n                    ) :\n\n                    (comments.map(item =>\n                        <p key={item.owner} className={classes.comment}>\n                            <Link to={'/profile/' + item.owner}>{item.owner}</Link>\n                            <span>{item.text}</span>\n                        </p>))\n            }\n        </div>\n    );\n};\n\nexport default PostComments;","export const TOGGLE_LIKE_POST = 'TOGGLE_LIKE_POST';\nexport const TOGGLE_LIKE_POST_LOADING = 'TOGGLE_LIKE_POST_LOADING';\nexport const TOGGLE_COMMENT_POST_LOADING = 'TOGGLE_COMMENT_LOADING';\nexport const WRITE_NEW_COMMENT = 'WRITE_NEW_COMMENT';\nexport const SET_USER_POSTS = 'SET_USER_POSTS';\nexport const ADD_USER_POST = 'ADD_USER_POST';\nexport const TOGGLE_ALL_POST_LOADING = 'TOGGLE_ALL_POST_LOADING';\nexport const SET_ALL_POSTS = 'SET_ALL_POSTS';\n","import * as postsActionTypes from './types';\n\nexport const toggleLike = (id, likeOwner, isUserPost) => ({\n    type: postsActionTypes.TOGGLE_LIKE_POST,\n    payload: {id, likeOwner, isUserPost}\n})\n\nexport const writeNewComment = (isUserPost, postId, comment) => ({\n    type: postsActionTypes.WRITE_NEW_COMMENT,\n    payload: {isUserPost,postId, comment}\n})\n\nexport const setUserPosts = (posts, login) => ({\n    type: postsActionTypes.SET_USER_POSTS,\n    payload: {posts, login}\n})\n\nexport const addUserPost = (post) => ({\n    type: postsActionTypes.ADD_USER_POST,\n    payload: post\n})\n\nexport const toggleLoadingLike = () => ({\n    type: postsActionTypes.TOGGLE_LIKE_POST_LOADING\n})\n\nexport const toggleLoadingPost = () => ({\n    type: postsActionTypes.TOGGLE_COMMENT_POST_LOADING\n})\n\nexport const toggleAllPostsLoading = () => ({\n    type: postsActionTypes.TOGGLE_ALL_POST_LOADING\n})\n\nexport const setAllPosts = (posts, login) => ({\n    type: postsActionTypes.SET_ALL_POSTS,\n    payload: {posts, login}\n})","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Fade, Modal, Backdrop} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport {Link} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles(theme => ({\n    likes: {\n        margin: '0 0 0 1rem',\n        fontWeight: 'bold',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n    },\n    'all-likes': {\n        minWidth: '250px',\n        boxSizing: 'border-box',\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        boxShadow: theme.shadows[5],\n        padding: '1rem 0',\n        '&:focus': {\n            outline: 'none'\n        }\n    },\n    'all-likes__list': {\n        maxHeight: '12rem',\n        overflowX: 'hidden',\n        padding: '0 2rem'\n    },\n    'all-likes__title': {\n        textAlign: 'center',\n        fontWeight: 'bold',\n        position: 'sticky',\n        paddingBottom: '1rem',\n        top: 0,\n        borderBottom: '2px solid black'\n    },\n    'all-likes__close-btn': {\n        position: 'absolute',\n        top: 0,\n        right: '1rem',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    '@media (min-width: 600px)': {\n        'all-likes': {\n            minWidth: '400px'\n        }\n    }\n}))\n\n\nconst Likes = (props) => {\n\n    const {likes} = props;\n\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <>\n            <p onClick={handleOpen} className={classes.likes}>{likes.length} отметок \"Нравится\"</p>\n            <Modal\n                disableAutoFocus\n                disableEnforceFocus\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes['all-likes']}>\n                        <div className={classes['all-likes__title']}>Отметки \"Нравится\"\n                            <CloseIcon onClick={handleClose}\n                                       className={classes['all-likes__close-btn']}/>\n                        </div>\n                        <div className={classes['all-likes__list']}>\n                            {likes.map((item, index) => <Link style={{textDecoration: 'none', marginTop: '1rem',display: 'block', fontWeight: 'bold', color: 'inherit'}} key={index} to={'/profile/' + item.owner}>{item.owner}</Link>)}\n                        </div>\n                    </div>\n                </Fade>\n            </Modal>\n        </>\n    );\n};\n\nexport default Likes;","export const getPosts = ({posts}) => posts.posts;\nexport const getAllPostsLoading = ({posts}) => posts.isLoadingAllPosts;\nexport const getUserPosts = ({posts}) => posts.userPosts;\nexport const getUserPostsLoaded = ({posts}) => posts.isLoadedUserPosts;\nexport const getPostLikeLoading = ({posts}) => posts.isLikedPost\nexport const getPostCommentLoading = ({posts}) => posts.isCommentPost","import React from 'react';\nimport {IconButton} from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSelector} from \"react-redux\";\nimport {getPostCommentLoading, getPostLikeLoading} from \"../../../../../store/posts/selectors\";\n\n\nconst useStyles = makeStyles(theme => ({\n    like: {},\n    'like-active': {\n        color: theme.colors.like,\n\n    },\n}))\n\nconst PostIcons = (props) => {\n\n    const {isLoading, isLiked, toggleLike, isComment, toggleComment} = props;\n\n\n    const isLikeLoading = useSelector(getPostLikeLoading);\n\n    const classes = useStyles();\n    return (\n        <>\n            <IconButton disabled={isLikeLoading} onClick={toggleLike} aria-label=\"add to favorites\">\n                {isLiked ? <FavoriteIcon className={classes['like-active']}/> :\n                    <FavoriteBorderOutlinedIcon className={classes.like}/>}\n            </IconButton>\n            <IconButton disabled={isLoading} onClick={toggleComment} aria-label=\"add comment\">\n                {isComment ? <ChatBubbleIcon color={'action'}/> : <ChatBubbleOutlineOutlinedIcon/>}\n            </IconButton>\n        </>\n    );\n};\n\nexport default PostIcons;","import React, {useState} from 'react';\nimport {Avatar, Button, CircularProgress, FormControl, Grid, Input, InputAdornment} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSelector} from \"react-redux\";\nimport {getPostCommentLoading} from \"../../../../../store/posts/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'new-comment': {\n        position: 'relative'\n    },\n    'new-comment-loader': {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        left: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    'new-comment-field': {\n        marginTop: '0.5rem',\n        flexWrap: 'wrap',\n    },\n    'new-comment-input': {\n        padding: '1rem',\n        boxSizing: 'border-box',\n    },\n    'comment-btn': {\n        '&:hover': {\n            backgroundColor: 'rgba(0,0,0,0)',\n        }\n    },\n    '@media (min-width: 600px)': {\n        'new-comment-input': {\n            width: '100%',\n            boxSizing: 'border-box',\n            marginLeft: '0.5rem'\n        },\n        'new-comment-field': {\n            flexWrap: 'nowrap',\n        }\n    }\n}))\n\nconst NewComment = React.forwardRef((props, forwardRef) => {\n\n    const {isLoading, loadComment, avatar} = props;\n\n    const [comment, setComment] = useState('');\n\n\n    const handleCommentInput = (e) => {\n        setComment(e.target.value);\n    }\n\n    const addComment = () => {\n        loadComment(comment);\n    }\n\n    const isPostLoading = useSelector(getPostCommentLoading);\n\n    const classes = useStyles();\n    return (\n        <div className={classes['new-comment']} ref={forwardRef}>\n            <Grid container className={classes['new-comment-field']} spacing={1}\n                  alignItems=\"flex-end\">\n                <Grid item>\n                    <Button disabled={isLoading} className={classes['comment-btn']} disableRipple\n                            onClick={() => alert('hello')}>\n                        <Avatar\n                            alt=\"Avatar\"\n                            src={'/' + avatar}\n                        />\n                    </Button>\n                </Grid>\n                <Grid className={classes['new-comment-input']} item>\n                    <FormControl fullWidth variant=\"outlined\">\n                        <Input\n                            disabled={isLoading}\n                            variant={'outlined'}\n                            value={comment}\n                            onChange={handleCommentInput}\n                            multiline\n                            style={{width: '100%'}}\n                            id=\"filled-adornment-password\"\n                            placeholder=\"Добавьте комментарий...\"\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <Button disabled={isPostLoading} onClick={addComment}\n                                            className={classes['comment-btn']}\n                                            disableRipple>Опубликовать</Button>\n                                </InputAdornment>\n                            }\n                        />\n                    </FormControl>\n                </Grid>\n                <Grid item>\n                </Grid>\n            </Grid>\n            {isLoading && <div className={classes['new-comment-loader']}><CircularProgress/></div>}\n        </div>\n    );\n});\n\nexport default NewComment;","export const isAuth = ({user}) => user.isAuth;\nexport const getUserInfo = ({user}) => user.userInfo || {login: 'andrew'};\nexport const getIsLoadingInfo = ({user}) => user.isLoadingInfo\nexport const getUserSubscriptions = ({user}) => user.userInfo.subscriptions || [];\nexport const getUserSubscribers = ({user}) => user.userInfo.subscribers || [];","import React, {useEffect, useState} from 'react';\nimport {Skeleton} from \"@material-ui/lab\";\nimport {\n    Avatar,\n    Card,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    makeStyles, Slide,\n} from \"@material-ui/core\";\nimport PostComments from \"../PostComments/PostComments\";\nimport * as postsActions from \"../../../../../store/posts/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Likes from \"../Likes/Likes\";\nimport PostIcons from \"../PostIcons/PostIcons\";\nimport NewComment from \"../NewComment/NewComment\";\nimport {getUserInfo} from \"../../../../../store/user/selectors\";\nimport {Link} from \"react-router-dom\";\nimport {toggleLoadingLike, toggleLoadingPost, writeNewComment} from \"../../../../../store/posts/actions\";\nimport {useHttp} from \"../../../../../hooks/http.hook\";\n\n\nconst useStyles = makeStyles((theme, props) => ({\n    post: {\n        width: '100%',\n        marginBottom: props => props.isModal === true ? '' : '2rem',\n        border: '1px solid rgb(219, 219, 219)',\n        borderRadius: '3px'\n    },\n    'post__profile__name': {\n        fontWeight: 'bold',\n        textDecoration: 'none',\n        color: 'inherit',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    media: {\n        maxHeight: '60vh',\n        overflow: 'hidden',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& img': {\n            width: '100%',\n            height: '100%',\n        }\n    },\n    'post-info': {\n        margin: '1rem 0 0 1rem',\n        '& a': {\n            textDecoration: 'none',\n            color: 'inherit',\n            fontWeight: 'bold',\n            marginRight: '.3rem'\n        }\n    },\n    'post-line': {\n        height: '3px',\n        // width: '50%',\n        margin: '1rem 0 1rem 1rem',\n        backgroundColor: 'rgb(219, 219, 219)'\n    }\n}));\n\n\nconst Post = (props) => {\n\n    const {\n        setModalInfo,\n        handleClose,\n        info,\n        isUserPost = false,\n        loadingPost = false,\n    } = props;\n\n    const {isLiked, id, imgSrc, likes, text, comments, ownerLogin, avatar = ''} = info;\n\n\n    const [isComment, setIsComment] = useState(false);\n\n    const [animationSide, setAnimationSide] = useState('right');\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const classes = useStyles({isModal: !!setModalInfo});\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo);\n\n    const {request} = useHttp()\n\n\n    const toggleLike = () => {\n        dispatch(toggleLoadingLike());\n        request('/post/like', 'post', {id, likerLogin: user.login})\n            .then(res => {\n                if (isUserPost) setModalInfo(prevState => ({...prevState, isLiked: !prevState.isLiked}))\n                dispatch(postsActions.toggleLike(id, user.login, isUserPost));\n            })\n            .finally(() => dispatch(toggleLoadingLike()))\n    }\n\n\n    const toggleComment = () => {\n        setIsComment(prevState => !prevState);\n    }\n\n    const loadComment = (comment) => {\n        dispatch(toggleLoadingPost())\n        request('/post/comment', 'post', {id, owner: user.login, comment})\n            .then(res => {\n                dispatch(writeNewComment(isUserPost, id, {...res.comment}))\n                setAnimationSide('left');\n                setIsComment(false);\n                setTimeout(() => {\n                    setAnimationSide('right');\n                }, 500)\n            }).finally(() => dispatch(toggleLoadingPost()))\n\n    }\n\n\n    const toggleLikePost = e => {\n        const targetData = e.target.dataset;\n        if (targetData.type === 'post' && targetData.info) {\n            toggleLike()\n        }\n    }\n\n    useEffect(() => {\n        if (isUserPost) {\n            document.addEventListener('dblclick', toggleLikePost);\n            return () => {\n                document.removeEventListener('dblclick', toggleLikePost);\n            }\n        }\n    }, [])\n\n\n    return (\n        <Card className={classes.post}>\n            <CardHeader\n                avatar={\n                    loadingPost ? (\n                        <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40}/>\n                    ) : (\n                        <Avatar\n                            alt={text}\n                            src={'/' + avatar}\n                        />\n                    )\n                }\n                title={\n                    loadingPost ? (\n                        <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{marginBottom: 6}}/>\n                    ) : <Link className={classes['post__profile__name']} to={'/profile/' + ownerLogin}>\n                        {ownerLogin}\n                    </Link>\n                }\n                // subheader={loadingPost ? <Skeleton animation=\"wave\" height={10} width=\"40%\"/> : '5 hours ago'}\n            />\n            {loadingPost ? (\n                <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media}/>\n            ) : (\n                <div className={classes.media}>\n                    <CardMedia\n                        component={\"img\"}\n                        title=\"Ted talk\"\n                        src={'/' + imgSrc}\n                        data-type={'post'}\n                        data-info={id}\n                    />\n                </div>\n            )}\n\n            <CardContent>\n                {loadingPost ? (\n                    <>\n                        <Skeleton animation=\"wave\" height={10} style={{marginBottom: 6}}/>\n                        <Skeleton animation=\"wave\" height={10} width=\"80%\"/>\n                    </>\n                ) : (\n                    <>\n                        <PostIcons isLoading={isLoading} isComment={isComment} isLiked={isLiked} toggleLike={toggleLike}\n                                   toggleComment={toggleComment}/>\n                        <Likes likes={likes}/>\n                        <div className={classes['post-info']}><Link to={{\n                            pathname: '/profile/' + ownerLogin,\n                            state: {\n                                fromNotifications: false\n                            }\n                        }}>{ownerLogin}</Link>{text}</div>\n                        <div className={classes['post-line']}/>\n                        <PostComments comments={comments}/>\n                        <Slide in={isComment} direction={animationSide} mountOnEnter\n                               unmountOnExit>\n                            <NewComment avatar={user.avatar} login={ownerLogin} loadComment={loadComment}\n                                        isLoading={isLoading}/>\n                        </Slide>\n                    </>\n                )}\n            </CardContent>\n        </Card>\n    )\n};\n\n\nexport default Post;","import React, {useEffect} from 'react';\nimport Post from \"../PostComponents/Post/Post\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as postsActions from '../../../../store/posts/actions';\nimport {getUserInfo} from \"../../../../store/user/selectors\";\nimport {getPosts} from \"../../../../store/posts/selectors\";\nimport {useHttp} from \"../../../../hooks/http.hook\";\nimport {toggleLoadingLike} from \"../../../../store/posts/actions\";\n\nconst PostsList = () => {\n\n    const serverPosts = useSelector(getPosts);\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo);\n\n\n    const {request} = useHttp();\n\n\n    const toggleLikePost = e => {\n        const targetData = e.target.dataset;\n        if (targetData.type === 'post' && targetData.info) {\n            dispatch(toggleLoadingLike());\n            request('/post/like', 'post', {id: targetData.info, likerLogin: user.login})\n                .then(res => {\n                    dispatch(postsActions.toggleLike(targetData.info, user.login));\n                })\n                .finally(() => dispatch(toggleLoadingLike()))\n        }\n    }\n\n\n    useEffect(() => {\n        document.addEventListener('dblclick', toggleLikePost);\n        return () => {\n            document.removeEventListener('dblclick', toggleLikePost);\n        }\n    }, [])\n\n    return (\n        <div>\n            {\n                serverPosts.map((item, index) => <Post info={{\n                    isLiked: !!item.isLiked,\n                    likes: item.likes,\n                    comments: item.comments,\n                    id: item._id,\n                    avatar: item.avatar,\n                    imgSrc: item.imageSrc,\n                    ownerLogin: item.ownerLogin\n                }}\n                                                       key={index}/>)\n            }\n            {\n                !serverPosts.length && <div style={{\n                    fontSize: '2rem',\n                    textAlign: 'center',\n                    textTransform: 'uppercase',\n                    marginTop: '5rem'\n                }}>постов пока что нету</div>\n            }\n\n        </div>\n    );\n};\n\nexport default PostsList;","import React, {useRef, useState} from 'react';\nimport {Avatar, Backdrop, Button, Input, Modal} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch} from \"react-redux\";\nimport {setUserAvatar} from \"../../../store/user/actions\";\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontFamily: 'Montserrat',\n    },\n    'new-avatar': {\n        fontFamily: 'Montserrat',\n        minWidth: '500px',\n        boxSizing: 'border-box',\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        boxShadow: theme.shadows[5],\n        position: 'relative',\n        padding: '3rem',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '&:focus': {\n            outline: 'none'\n        }\n    },\n    'new-avatar__file-error': {\n        marginTop: '1rem',\n        textAlign: 'center',\n        color: theme.colors.error,\n        fontWeight: 'bold',\n    },\n    'new-avatar__load-btn': {\n        marginTop: '2rem'\n    }\n}))\n\nconst NewAvatar = (props) => {\n\n    const {open, login} = props;\n\n    const classes = useStyles();\n\n    const [img, setImg] = useState('');\n\n    const [error, setError] = useState({isError: false, text: ''});\n\n    const [inputImg, setInputImg] = useState('');\n\n\n    const dispatch = useDispatch();\n\n    const input = useRef();\n\n\n    const downloadImg = event => {\n\n        const file = event.target.files[0];\n        if (!file.type) {\n            setInputImg('')\n            setImg('')\n            setError({\n                isError: true,\n                text: 'Ошибка, эта функция не поддерживается в вашем браузере !'\n            });\n            return;\n        }\n        if (!file.type.match('image.*')) {\n            setInputImg('')\n            setImg('')\n            setError({isError: true, text: 'Выбраный файл не есть изображением !'})\n            return;\n        }\n        setError({isError: false, text: ''})\n        setInputImg(event.target.file)\n        const reader = new FileReader();\n        reader.addEventListener('load', event => {\n            setImg(event.target.result);\n        });\n        reader.readAsDataURL(file);\n    };\n\n    const download = async () => {\n        try {\n\n            const formData = new FormData();\n            formData.append('avatar', input.current.files[0]);\n            formData.set('user', login);\n\n            const res = await fetch('/user/avatar', {\n                method: 'post',\n                body: formData\n            })\n\n            const data = await res.json();\n\n            if (data.path) {\n                dispatch(setUserAvatar(data.path))\n                open(false);\n            }else{\n                setError({isError: true, text: 'Что-то пошло не так попробуйте позже'})\n            }\n        } catch (e) {\n            setError({isError: true, text: 'Cерверная ошибка попробуйте позже'})\n        }\n    }\n\n\n    return (\n        <Modal\n            disableAutoFocus\n            disableEnforceFocus\n            className={classes.modal}\n            open={true}\n            onClose={() => open(false)}\n            closeAfterTransition\n            BackdropComponent={Backdrop}>\n            <div className={classes['new-avatar']}>\n                <Avatar style={{width: '7rem', height: '7rem'}} src={img}/>\n                <Input\n                    accept=\"image/*\"\n                    id=\"contained-button-file\"\n                    multiple\n                    type=\"file\"\n                    name={'avatar'}\n                    value={inputImg}\n                    inputRef={input}\n                    style={{marginTop: '1rem'}}\n                    onChange={downloadImg}\n                />\n                {error.isError && <div className={classes['new-avatar__file-error']}>{error.text}</div>}\n                <Button className={classes['new-avatar__load-btn']} onClick={download} variant={'contained'}\n                        color={'primary'}\n                >загрузить</Button>\n            </div>\n        </Modal>\n\n    );\n};\n\nexport default NewAvatar;","export const getSubscriptions = ({subscribers}) => subscribers.subscription;\nexport const getRecommended = ({subscribers}) => subscribers.recommended;\nexport const getLoading = ({subscribers}) => subscribers.isLoading;","import React, {useState} from 'react';\nimport {Avatar, Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {toggleLoading, toggleSubs} from \"../../../../store/subscribers/actions\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {useHttp} from \"../../../../hooks/http.hook\";\nimport {logoutUser} from \"../../../../store/user/actions\";\nimport NewAvatar from \"../NewAvatar\";\nimport {getUserInfo} from \"../../../../store/user/selectors\";\nimport {getRecommended} from \"../../../../store/subscribers/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile': {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%'\n    },\n    'profile__info': {\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n        color: 'inherit'\n    },\n    'profile__avatar': {\n        width: '4rem',\n        height: '4rem',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    'profile__name': {\n        marginLeft: '1rem',\n        fontWeight: 'bold',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    'profile__sbsc-btn': {\n        fontSize: '.8rem',\n        margin: '0 1rem .2rem 0',\n        textTransform: 'none',\n        color: props => props.type === 'subscription' ? '' : theme.colors.main,\n        '&:hover': {\n            background: 'none'\n        }\n    },\n    'profile__logout-btn': {\n        minWidth: '5rem',\n        minHeight: '2rem'\n    }\n}))\n\nconst ProfileRef = (props) => {\n\n    const {\n        type,\n        isOwn,\n        avatarClass,\n        isLoading,\n        isPageComp = false,\n        avatar = '',\n        login = 'andrew'\n    } = props;\n\n    const dispatch = useDispatch();\n\n\n    const {request, loading} = useHttp();\n    const [isNewAvatar, setNewAvatar] = useState(false);\n\n    const user = useSelector(getUserInfo);\n\n\n    const toggleSubsBtn = () => {\n        dispatch(toggleLoading());\n        request('/user/subs', 'post', {login, avatar: avatar, type, userLogin: user.login})\n            .then(res => {\n                if (res.success) {\n                    dispatch(toggleSubs({login, type}))\n                }\n            }).finally(() => {\n            dispatch(toggleLoading());\n        });\n\n    }\n\n    const btnText = type === 'subscription' ? 'Отписаться' : 'Подписаться';\n\n    const logout = () => {\n        request('/auth/logout')\n            .then(res => {\n                if (res.success) {\n                    dispatch(logoutUser());\n                }\n            })\n    }\n\n    const classes = useStyles({type, isOwn});\n\n    return (\n        <div className={classes.profile}>\n            {isPageComp ?\n                <>\n                    <div className={classes['profile__info']}>\n                        <Avatar className={avatarClass || classes['profile__avatar']} src={'/' + avatar}/>\n                        <div className={classes['profile__name']}>{login}</div>\n                    </div>\n                    {isOwn && <Button variant={\"contained\"}\n                                      color={\"primary\"}\n                                      onClick={() => setNewAvatar(true)}\n                                      disabled={loading}\n                                      className={classes['profile__logout-btn']}>Изменить аватар</Button>}</> :\n                <Link to={'profile/' + login} className={classes['profile__info']}>\n                    <Avatar alt=\"Avatar\" className={avatarClass || classes['profile__avatar']} src={avatar}/>\n                    <div className={classes['profile__name']}>{login}</div>\n                </Link>}\n            {isOwn ? <Button variant={\"contained\"}\n                             color={\"primary\"}\n                             onClick={logout}\n                             disabled={loading}\n                             className={classes['profile__logout-btn']}>Выйти</Button> :\n                <Button disableRipple disabled={isLoading} onClick={toggleSubsBtn}\n                        className={classes['profile__sbsc-btn']}>{btnText}</Button>\n            }\n            {isNewAvatar && <NewAvatar login={login} open={setNewAvatar}/>}\n\n        </div>\n    );\n};\n\nexport default ProfileRef;","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ProfileRef from \"../../Profile/ProfileRef/ProfileRef\";\nimport {useSelector} from \"react-redux\";\nimport {getLoading} from \"../../../../store/subscribers/selectors\";\n\n\nconst useStyles = makeStyles((theme, info) => ({\n    'subscribe-section': {\n        marginTop: info => info.type === 'recommended' ? '2rem' : 0,\n        border: '1px solid rgb(219, 219, 219)',\n        backgroundColor: '2px solid black',\n        borderRadius: '3px',\n        padding: '1rem 0 1rem 1rem',\n        boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n    },\n    'subscribe-section__list': {\n        marginTop: '1rem',\n        overflowX: 'hidden',\n        maxHeight: '200px',\n        fontSize: '1rem',\n        '& div': {\n            marginBottom: '.5rem'\n        }\n    },\n    'subscribe-section__no-subs-text': {\n        textAlign: 'center',\n        fontWeight: 'bold',\n        padding: '1rem 1rem 0 0'\n    },\n    'subscribe-section__profile': {\n        width: '3rem',\n        height: '3rem',\n    }\n}))\n\nconst Subscribes = (props = []) => {\n\n    const {type, subscribers = []} = props;\n\n    const classes = useStyles({type});\n\n    const isLoading = useSelector(getLoading)\n\n\n    return (\n        <div className={classes['subscribe-section']}>\n            <span>{type === 'subscription' ? 'Подписки' : 'Рекомендации для вас'}</span>\n            <div className={classes['subscribe-section__list']}>\n                {subscribers.map((item, index) =>\n                    <ProfileRef key={index}\n                                type={type}\n                                avatar={item.avatar}\n                                isLoading = {isLoading}\n                                avatarClass={classes['subscribe-section__profile']}\n                                login={item.login}/>)}\n                {!subscribers.length && <div\n                    className={classes['subscribe-section__no-subs-text']}>{type === 'subscription' ? 'Подписок пока нет' : 'Рекомендаций пока нету'}\n                </div>}\n            < /div>\n        </div>\n    );\n};\n\nexport default Subscribes;","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Subscribes from \"./Subscribes\";\nimport {useSelector} from \"react-redux\";\nimport {getRecommended, getSubscriptions} from \"../../../../store/subscribers/selectors\";\n\n\nconst useStyles = makeStyles(theme => ({\n    'subscribe-section': {\n        marginTop: '2rem'\n    },\n\n}))\n\nconst SubscribeSection = () => {\n\n    const classes = useStyles();\n\n    const subscribed = useSelector(getSubscriptions);\n\n    const recommended = useSelector(getRecommended);\n\n\n    return (\n        <section className={classes['subscribe-section']}>\n            <Subscribes subscribers={subscribed} type={'subscription'}/>\n            <Subscribes subscribers={recommended} type={'recommended'}/>\n        </section>\n    );\n};\n\nexport default SubscribeSection;","import React from 'react';\nimport ProfileRef from \"../../Profile/ProfileRef/ProfileRef\";\nimport SubscribeSection from \"../SubscribeSection/SubscribeSection\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSelector} from \"react-redux\";\nimport {getUserInfo} from \"../../../../store/user/selectors\";\n\nconst useStyles = makeStyles(() => ({\n    'profile-info':{\n        padding: '.5rem'\n    }\n}))\nconst SideProfileInfo = () => {\n\n    const user = useSelector(getUserInfo);\n\n    const classes = useStyles();\n    return (\n        <div className={classes['profile-info']}>\n            <ProfileRef isOwn avatar={user.avatar} login={user.login}/>\n            <SubscribeSection/>\n        </div>\n    );\n};\n\nexport default SideProfileInfo;","import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => {\n    return (\n        <div id=\"cube-loader\">\n            <div className=\"caption\">\n                <div className=\"cube-loader\">\n                    <div className=\"cube loader-1\"/>\n                    <div className=\"cube loader-2\"/>\n                    <div className=\"cube loader-4\"/>\n                    <div className=\"cube loader-3\"/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;","import React, {useEffect} from 'react';\nimport PostsList from \"../components/AppComponents/PostListComponents/PostsList/PostsList\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SideProfileInfo from \"../components/AppComponents/SideProfileInfoComponents/SideProfileInfo/SideProfileInfo\";\nimport Loader from \"../components/Loaders/Loader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAllPostsLoading} from \"../store/posts/selectors\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {getUserInfo} from \"../store/user/selectors\";\nimport {setAllPosts, toggleAllPostsLoading} from \"../store/posts/actions\";\n\nconst useStyles = makeStyles(theme => ({\n    'main': {\n        width: '100%',\n        height: 'auto',\n        minHeight: '97vh',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'column-reverse',\n        justifyContent: \"center\",\n        alignItems: 'center',\n        paddingTop: '4rem'\n    },\n    'main__posts': {\n        width: '100%'\n    },\n    'main__profile-info': {\n        width: '100%',\n    },\n    '@media (min-width: 600px)': {\n        main: {\n            flexDirection: 'row',\n            alignItems: 'flex-start'\n        },\n        'main__posts': {\n            width: '40%',\n            maxWidth: '700px',\n        },\n        'main__profile-info': {\n            width: '20%',\n            marginLeft: '2rem',\n            position: 'sticky',\n            top: 'calc(4rem + 10px)',\n            minWidth: '300px'\n\n        }\n    }\n}))\n\nconst Andrewgram = () => {\n\n    const classes = useStyles();\n\n    const {request} = useHttp();\n\n    const isLoadingInfo = useSelector(getAllPostsLoading);\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo)\n\n    useEffect(() => {\n        dispatch(toggleAllPostsLoading());\n        request('/posts/all', 'post', {login: user.login})\n            .then(res => {\n                dispatch(setAllPosts(res.posts, user.login))\n                dispatch(toggleAllPostsLoading());\n            })\n    }, [])\n\n    return (\n        <>\n            {isLoadingInfo ? <Loader/> : <div className={classes.main}>\n                <div className={classes['main__posts']}>\n                    <PostsList/>\n                </div>\n                <div className={classes['main__profile-info']}>\n                    <SideProfileInfo/>\n                </div>\n            </div>}\n        </>\n\n    );\n};\n\nexport default Andrewgram;","import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button} from \"@material-ui/core\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nconst useStyles = makeStyles(theme => ({\n    'forgot-form': {\n        minWidth: '300px',\n        maxWidth: '500px',\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    'forgot-form__title': {\n        marginBottom: '2rem'\n    },\n    'forgot-form__action': {\n        marginTop: '1.5rem',\n        minWidth: '200px'\n    },\n    'forgot-form__resp': {\n        marginTop: '1rem',\n        textAlign: 'center',\n        fontSize: '1.2rem'\n\n    },\n    'forgot-form__resp-success': {\n        color: theme.colors.success,\n    },\n    'forgot-form__resp-error': {\n        color: theme.colors.error\n    }\n}));\n\nconst ForgotPassword = (props) => {\n\n    const {setIsAppear} = props;\n\n    const [email, setEmail] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [inputErrorText, setInputErrorText] = useState('');\n    const [response, setResponse] = useState({ready: false, success: false, errorText: ''});\n    const {loading, request} = useHttp();\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const handleInput = (e) => {\n        if (inputError) {\n            setInputErrorText('');\n            setInputError(false);\n        }\n        setEmail(e.target.value);\n    }\n\n    const handleForm = async (e) => {\n        try {\n            e.preventDefault();\n            if (!validateEmail(email)) {\n                setInputError(true);\n                setInputErrorText('Введите корректный email');\n                return;\n            } else {\n                if (inputError) {\n                    setInputErrorText('');\n                    setInputError(false);\n                }\n                const resp = await request('/auth/reset', 'post', {email});\n                if (resp.success) {\n                    setEmail('');\n                    setResponse({ready: true, success: true, errorText: ''});\n                } else {\n                    throw new Error('Что-то пошло не так, повторите попытку позже')\n                }\n            }\n        } catch (e) {\n            setResponse({ready: true, success: false, errorText: e.message || 'Что-то пошло не так, повторите попытку позже'});\n        }\n    };\n\n    const goAuth = () => {\n        setIsAppear(false);\n        setTimeout(() => {\n            history.push('/auth')\n        }, 500);\n    }\n\n\n    return (\n        <form className={classes[\"forgot-form\"]}>\n            <div className={classes['forgot-form__title']}>Введите ваш email</div>\n            <TextField\n                error={inputError}\n                id=\"filled-error-helper-text9\"\n                label=\"Email\"\n                onChange={handleInput}\n                helperText={inputErrorText}\n                variant=\"filled\"\n                name={'email'}\n                value={email}\n            />\n            <div className={classes[\"forgot-form__resp\"]}>\n                {response.ready && (response.success ?\n                    <div className={classes['forgot-form__resp-success']}>На вашу почту отправлено письмо с\n                        инструкцией. Если письма нету – проверьте спам</div> :\n                    <div className={classes['forgot-form__resp-error']}>{response.errorText}</div>)}\n            </div>\n            <Button onClick={handleForm} className={classes['forgot-form__action']} disabled={loading}\n                    type={'submit'} variant=\"contained\"\n                    color=\"primary\">\n                Отправить письмо\n            </Button>\n            <Button onClick={goAuth} className={classes['forgot-form__action']} disabled={loading}\n                    variant=\"contained\"\n                    color=\"primary\">\n                Авторизоваться\n            </Button>\n        </form>\n    );\n};\n\nexport default ForgotPassword;","import React, {useEffect, useState} from 'react';\nimport ForgotPassword from \"../components/AuthComponents/ForgotPassword\";\nimport {Slide} from \"@material-ui/core\";\nimport {makeStyles} from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    'forgot-page': {\n        width: '100%',\n        height: '50vh',\n        fontSize: '1.5rem',\n        paddingTop: '4rem'\n    }\n}))\n\nconst ForgotPasswordPage = () => {\n    const [isAppear, setIsAppear] = useState(false);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setIsAppear(true)\n    }, [])\n    return (\n        <Slide in={isAppear} timeout={{enter: 1000, exit: 500,}}>\n            <div className={classes['forgot-page']}>\n                <ForgotPassword setIsAppear={setIsAppear}/>\n            </div>\n        </Slide>\n    );\n};\n\nexport default ForgotPasswordPage;","import React, {useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button} from \"@material-ui/core\";\nimport {useHttp} from \"../../hooks/http.hook\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles(theme => ({\n    'reset-form': {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        maxWidth: '500px',\n        margin: '0 auto'\n    },\n    'reset-form__input': {\n        marginBottom: '1rem',\n        minWidth: '250px'\n    },\n    'reset-form__title': {\n        marginBottom: '2rem'\n    },\n    'reset-form__action': {\n        marginTop: '2rem'\n    },\n    'reset-form__resp': {\n        fontSize: '1.2rem'\n    },\n    'reset-form__resp-success': {\n        color: theme.colors.success\n    },\n    'reset-form__resp-error': {\n        color: theme.colors.error\n    }\n}))\n\nconst ResetPassword = (props) => {\n\n    const {token} = props;\n\n    const [password, setPassword] = useState({password: '', rePassword: ''});\n    const [error, setError] = useState({password: false, rePassword: false});\n    const [errorText, setErrorText] = useState({password: '', rePassword: ''});\n\n\n    const [serverError, setServerError] = useState({isError: false, errorText: ''});\n    const [isReady, setIsReady] = useState(false);\n\n\n    const classes = useStyles();\n    const history = useHistory();\n    const {loading, request} = useHttp();\n\n\n    const handleInputs = (e) => {\n        const field = e.target;\n        if (field.name === 'password') {\n            if (field.value.length < 7) {\n                setError(prevState => ({...prevState, password: true}));\n                setErrorText(prevState => ({...prevState, password: 'Минимальная длина 7 символов'}));\n            } else {\n                setError(prevState => ({...prevState, password: false}));\n                setErrorText(prevState => ({...prevState, password: ''}));\n            }\n        }\n        if (field.name === 'rePassword') {\n            if (password.password !== field.value) {\n                setError(prevState => ({...prevState, rePassword: true}));\n                setErrorText(prevState => ({...prevState, rePassword: 'Пароли должны совпадать'}));\n            } else {\n                setError(prevState => ({...prevState, rePassword: false}));\n                setErrorText(prevState => ({...prevState, rePassword: ''}));\n            }\n        }\n        setPassword(prevState => ({...prevState, [field.name]: field.value}));\n    };\n\n    const resetPassword = (e) => {\n        e.preventDefault();\n\n        if (password.password.length < 7) {\n            setError(prevState => ({...prevState, password: true}));\n            setErrorText(prevState => ({...prevState, password: 'Минимальная длина 7 символов'}));\n            return;\n        }\n\n        if (password.password !== password.rePassword) {\n            setError(prevState => ({...prevState, rePassword: true}));\n            setErrorText(prevState => ({...prevState, rePassword: 'Пароли должны совпадать'}));\n            return;\n        }\n\n        request('/auth/reset/password', 'post', Object.assign(password, {token}))\n            .then(resp => {\n                if (resp.success) {\n                    setServerError({isError: false, errorText: ''});\n                    setPassword({password: '', rePassword: ''});\n                }\n            })\n            .catch(e => setServerError({isError: true, errorText: e.message || e}))\n            .finally(() => setIsReady(true));\n    }\n\n    return (\n        <form className={classes['reset-form']}>\n            <div className={classes['reset-form__title']}>Введите новый пароль</div>\n            <TextField\n                className={classes['reset-form__input']}\n                error={error.password}\n                type='password'\n                id=\"filled-error-helper-text23\"\n                label=\"Пароль\"\n                onChange={handleInputs}\n                helperText={errorText.password}\n                variant=\"filled\"\n                name={'password'}\n                value={password.password}\n            />\n            <TextField\n                className={classes['reset-form__input']}\n                error={error.rePassword}\n                type='password'\n                id=\"filled-error-helper-text44\"\n                label=\"Пароль ещё раз\"\n                onChange={handleInputs}\n                helperText={errorText.rePassword}\n                variant=\"filled\"\n                name={'rePassword'}\n                value={password.rePassword}\n            />\n            <div className={classes['reset-form__resp']}>\n                {isReady && serverError.isError &&\n                <div className={classes['reset-form__resp-error']}>{serverError.errorText}</div>}\n                {isReady && !serverError.isError &&\n                <div className={classes['reset-form__resp-success']}>Вы успешно изменили пароль</div>}\n            </div>\n            <Button onClick={resetPassword} className={classes['reset-form__action']} disabled={loading} type={'submit'}\n                    variant=\"contained\" color=\"primary\">\n                Измeнить пароль\n            </Button>\n            {isReady && !serverError.isError &&\n            <Button onClick={() => history.push('/auth')} className={classes['reset-form__action']} disabled={loading}\n                    type={'submit'}\n                    variant=\"contained\" color=\"primary\">\n                Авторизоваться\n            </Button>}\n        </form>\n    );\n};\n\nexport default ResetPassword;","import React, {useEffect, useState} from 'react';\nimport ResetPassword from \"../components/AuthComponents/ResetPassword\";\nimport Loader from \"../components/Loaders/Loader\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(theme => ({\n    'reset-page': {\n        width: '100%',\n        height: '50vh',\n        fontSize: '1.5rem',\n        paddingTop: '6rem',\n    }\n}))\n\n\nconst ResetPasswordPage = () => {\n\n    const [isValid, setIsValid] = useState(false);\n    const {loading, request} = useHttp();\n    const {token} = useParams();\n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(() => {\n        request('/auth/reset/check', 'post', {token})\n            .then(res => {\n                if (res.success) {\n                    setIsValid(true);\n                } else {\n                    history.push('/auth');\n                }\n            })\n    }, [])\n\n\n    return (\n        <div className={classes['reset-page']}>\n            {loading && <Loader/>}\n            {isValid && <ResetPassword token={token}/>}\n        </div>\n    );\n};\n\nexport default ResetPasswordPage;","import React from 'react';\nimport ProfileRef from \"./ProfileRef/ProfileRef\";\nimport {useSelector} from \"react-redux\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport {getLoading, getRecommended} from \"../../../store/subscribers/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile-info': {\n        paddingLeft: '10rem',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n    },\n    'profile-loading': {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    }\n}))\n\nconst ProfileInfo = (props) => {\n\n    const {isLoading, isOwn} = props;\n\n\n    const {user} = props;\n\n\n    const classes = useStyles();\n\n    const recommended = useSelector(getRecommended);\n\n    const isLoadingSubs = useSelector(getLoading)\n\n    const userProfType = recommended.find(item => item.login === user.login) ? 'recommended' : 'subscription';\n\n\n\n    return (\n        <div className={classes['profile-info']}>\n            {!isLoading && <ProfileRef type={isOwn ? '' : userProfType} isLoading={isLoadingSubs} login={user.login} avatar={user.avatar || ''} isPageComp isOwn={isOwn}/>}\n            {isLoading &&\n            <div className={classes['profile-loading']}>\n                <Skeleton animation={'wave'} variant=\"circle\" height={'5rem'} width={'5rem'}/>\n                <Skeleton animation={'wave'} variant=\"text\" height={'4vh'} width={'30%'} style={{marginLeft: '2rem'}}/>\n            </div>}\n        </div>\n    );\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport {Skeleton} from \"@material-ui/lab\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile-post':{\n        height: '20rem',\n        overflowY: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    'profile-post__img': {\n        width: '100%', height: 'auto',\n    }\n}))\n\nconst ProfilePost = (props) => {\n\n    const {isLoading = false, open, isLiked, imgSrc, info, comments, avatar, ownerLogin, likes, id} = props;\n\n    const classes = useStyles();\n\n\n    return (\n        <>\n            {\n                isLoading ?\n                    <div>\n                        <Skeleton animation=\"wave\" variant=\"rect\" style={{width: '20rem', height: '20rem'}}/>\n                    </div>\n                    :\n                    <div className={classes['profile-post']} onClick={() => open({imgSrc, comments, avatar, text: info, ownerLogin, likes, id, isLiked})}>\n                        <img className={classes['profile-post__img']} src={\"/\" + imgSrc} alt={'post-image'}/>\n                    </div>\n            }\n        </>\n    );\n};\n\nexport default ProfilePost;","import React, {useState} from 'react';\nimport ProfilePost from \"./ProfilePost\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Backdrop, Modal} from \"@material-ui/core\";\nimport Post from \"../PostListComponents/PostComponents/Post/Post\";\nimport {useSelector} from \"react-redux\";\nimport {getUserPosts, getUserPostsLoaded} from \"../../../store/posts/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile__posts': {\n        display: 'grid',\n        marginTop: '2rem',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridTemplateRows: 'repeat(2, 1fr)',\n        gridColumnGap: '2rem',\n        gridRowGap: '2rem'\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        overflowY: 'visible',\n        position: 'absolute'\n\n\n    },\n    'profile__modal-post': {\n        width: '50%',\n        height: 'auto',\n        outline: 'none',\n        position: 'relative'\n    },\n    'profile__posts-exist': {\n        textAlign: 'center',\n        marginTop: '2rem',\n        fontWeight: 'bold',\n        fontSize: '2rem',\n        gridColumnStart: 1,\n        gridColumnEnd: 5,\n        gridRowStart: 2,\n        gridRowEnd: 3,\n    }\n}))\n\nconst ProfilePostsGrid = (props) => {\n\n    const [isPostOpen, setIsPostOpen] = useState(false);\n    const [modalInfo, setModalInfo] = useState(false);\n    const classes = useStyles();\n\n    const {user, isLoading} = props;\n\n    const posts = useSelector(getUserPosts);\n\n    const isLoaded = useSelector(getUserPostsLoaded);\n\n\n    const handleClose = () => {\n        setIsPostOpen(false);\n    }\n\n\n    const openModal = (info) => {\n        setModalInfo(info);\n        setIsPostOpen(true);\n    }\n\n    const loadingPostsArr = [1, 2, 3, 4, 5, 6];\n\n\n    return (\n        <>\n            <div className={classes['profile__posts']}>\n                {!isLoading && posts.map(item => <ProfilePost key={item._id}\n                                                              id={item._id} avatar={user.avatar} imgSrc={item.imageSrc}\n                                                              info={item.info}\n                                                              isLiked={item.isLiked}\n                                                              comments={item.comments} likes={item.likes}\n                                                              ownerLogin={item.ownerLogin} open={openModal}/>)}\n                {!isLoading && !posts.length && <div className={classes['profile__posts-exist']}>Постов нету</div>}\n                {isLoading && loadingPostsArr.map((item, index) => <ProfilePost key={index} isLoading/>)}\n            </div>\n            {\n                isPostOpen &&\n                <Modal\n                    disableAutoFocus\n                    disableEnforceFocus\n                    className={classes.modal}\n                    open={isPostOpen}\n                    onClose={handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}>\n                    <div className={classes['profile__modal-post']}>\n                        <Post isUserPost={true} handleClose={handleClose} setModalInfo={setModalInfo} info={modalInfo}/>\n                    </div>\n                </Modal>\n            }\n        </>\n    );\n};\n\nexport default ProfilePostsGrid;","import React, {useRef, useState} from 'react';\nimport {Backdrop, Button, Input, Modal, TextField} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {useDispatch} from \"react-redux\";\nimport {addUserPost} from \"../../../store/posts/actions\";\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontFamily: 'Montserrat',\n\n    },\n    'new-post': {\n        fontFamily: 'Montserrat',\n        minWidth: '500px',\n        boxSizing: 'border-box',\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        boxShadow: theme.shadows[5],\n        position: 'relative',\n        padding: '3rem',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '&:focus': {\n            outline: 'none'\n        }\n    },\n    'new-post__title': {\n        marginBottom: '1rem',\n        fontWeight: 'bold',\n        fontSize: '1.5rem'\n    },\n    'new-post__close-btn': {\n        position: 'absolute',\n        top: '1.5rem',\n        right: '1.5rem'\n    },\n    'new-post__info': {\n        alignSelf: 'flex-start',\n        width: '100%',\n    },\n    'new-post__load-btn': {\n        marginTop: '1rem'\n    },\n    'new-post__input-file': {\n        width: '100%',\n        marginBottom: '2rem'\n    },\n    'new-post__input-title': {\n        fontSize: '1.2rem',\n        marginBottom: '1rem'\n    },\n    'new-post__error': {\n        color: theme.colors.error,\n        fontWeight: 'bold',\n        marginTop: '1rem'\n    }\n}))\n\nconst NewPost = () => {\n    const [isNewPost, setIsNewPost] = useState(false);\n\n    const [newPostInfo, setNewPostInfo] = useState('');\n\n    const [isError, setIsError] = useState(false)\n\n    const handleInput = (e) => {\n        setNewPostInfo(e.target.value);\n    }\n\n    const classes = useStyles();\n\n    const fileInput = useRef();\n\n    const dispatch = useDispatch();\n\n    const handleOpen = () => {\n        setIsNewPost(true)\n    }\n\n    const handleClose = () => {\n        setIsNewPost(false)\n    }\n\n    const download = async () => {\n        try{\n            if (!fileInput.current.files[0]) {\n                setIsError(true);\n                return\n            }\n            if (isError) setIsError(false);\n            let formData = new FormData()\n            formData.append('avatar', fileInput.current.files[0]);\n            formData.set('user', 'andrew');\n            formData.set('info', newPostInfo);\n\n            const res = await fetch('/post/new', {\n                method: 'post',\n                body: formData\n            })\n\n            const data = await res.json();\n\n            if (data.post){\n                dispatch(addUserPost(data.post));\n                setIsNewPost(false);\n                setNewPostInfo('');\n            }\n\n        }catch (e) {\n\n        }\n\n    }\n\n    return (\n        <div style={{textAlign: 'center', marginTop: '1rem'}}>\n            <Button onClick={handleOpen}>Создать пост</Button>\n            <Modal\n                disableAutoFocus\n                disableEnforceFocus\n                className={classes.modal}\n                open={isNewPost}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}>\n                <div className={classes['new-post']}>\n                    <CloseIcon onClick={handleClose}\n                               className={classes['new-post__close-btn']}/>\n                    <div className={classes['new-post__title']}>Создание нового поста</div>\n                    <div className={classes['new-post__input-title']}>Фото поста</div>\n                    <Input\n                        accept=\"image/*\"\n                        id=\"contained-button-file\"\n                        multiple\n                        className={classes['new-post__input-file']}\n                        type=\"file\"\n                        name={'avatar'}\n                        inputRef={fileInput}\n\n                    />\n                    <div className={classes['new-post__input-title']}>Информация о посте</div>\n                    <TextField\n                        className={classes['new-post__info']}\n                        id=\"standard-textarea\"\n                        placeholder=\"Информация\"\n                        multiline\n                        onChange={handleInput}\n                        value={newPostInfo}\n                    />\n                    {isError && <div className={classes['new-post__error']}>Сначала загрузите фото</div>}\n                    <Button className={classes['new-post__load-btn']} variant={'contained'} color={'primary'}\n                            onClick={download}>загрузить</Button>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default NewPost;","import React, {useEffect} from 'react';\nimport ProfileInfo from \"../components/AppComponents/Profile/ProfileInfo\";\nimport ProfilePostsGrid from \"../components/AppComponents/Profile/ProfilePostsGrid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport NewPost from \"../components/AppComponents/Profile/NewPost\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {setUserPosts} from \"../store/posts/actions\";\nimport {useParams} from \"react-router-dom\";\nimport {getUserInfo} from \"../store/user/selectors\";\nimport {getRecommended, getSubscriptions} from \"../store/subscribers/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n    'profile-page': {\n        padding: '4rem 2rem 0',\n        margin: '0 auto'\n    }\n}))\n\nconst ProfilePage = () => {\n\n    const classes = useStyles();\n\n    const {request, loading} = useHttp()\n\n\n    const {login} = useParams();\n\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(getUserInfo);\n\n    const visitedUser = [...useSelector(getRecommended), ...useSelector(getSubscriptions)].filter(item => item.login === login)[0]\n\n    const isOwn = login === user.login;\n\n\nuseEffect(() => {\n    if (!isOwn){\n        dispatch(setUserPosts([]));\n    }\n    request('/posts/users', 'post', {login})\n        .then(res => dispatch(setUserPosts(res, user.login)));\n}, [login])\n\n\n\n\n\n    return (\n        <div className={classes['profile-page']}>\n            <ProfileInfo user={isOwn ? user : visitedUser} isOwn={isOwn} isLoading={loading}/>\n            {isOwn && <NewPost isLoading={loading}/>}\n            <ProfilePostsGrid user={isOwn ? user : visitedUser} isLoading={loading}/>\n        </div>\n    );\n};\n\nexport default ProfilePage;","import React from 'react';\nimport EntryPage from \"../pages/EntryPage\";\nimport AuthPage from \"../pages/AuthPage\";\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Andrewgram from \"../pages/Andrewgram\";\nimport ForgotPasswordPage from \"../pages/ForgotPasswordPage\";\nimport ResetPasswordPage from \"../pages/ResetPasswordPage\";\nimport {useSelector} from \"react-redux\";\nimport {isAuth} from \"../store/user/selectors\";\nimport ProfilePage from \"../pages/ProfilePage\";\n\n\nconst ProtectedRoute = (props) => {\n\n    const {exact, path, component} = props;\n\n    const isAuthUser = useSelector(isAuth);\n\n    return (\n        isAuthUser ? <Route exact={exact} path={path} component={component}/> : <Redirect to={'/auth'}/>\n    )\n}\nconst AndrewgramRoutes = () => {\n\n\n\n    return (\n        <Switch>\n            <Route exact path='/' component={EntryPage}/>\n            <Route exact path='/auth' component={AuthPage}/>\n            <Route exact path='/auth/reset' component={ForgotPasswordPage}/>\n            <Route exact path='/auth/reset/:token' component={ResetPasswordPage}/>\n            <ProtectedRoute exact path='/app' component={Andrewgram}/>\n            <ProtectedRoute exact path='/profile/:login' component={ProfilePage}/>\n            {/*<Route path='*' component={Page404}/>*/}\n        </Switch>\n    );\n};\n\nexport default AndrewgramRoutes;","import './App.css';\nimport {useEffect} from \"react\";\nimport Theme from \"./components/Theme/theme\";\nimport AndrewgramRoutes from \"./routes/AndrewgramRoutes\";\n\n\nfunction App() {\n\n\n    useEffect(() => {\n\n        (async function csrf() {\n            await fetch('/csrf')\n        })();\n\n    }, [])\n    return (\n\n        <Theme>\n            <div className=\"App\">\n                <AndrewgramRoutes/>\n            </div>\n        </Theme>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as postsActionTypes from './types';\n\n\nconst initialState = {\n    posts: [],\n    userPosts: [],\n    isLoadingAllPosts: false,\n    isLoadedUserPosts: false,\n    isLikedPost: false,\n    isCommentPost: false,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case postsActionTypes.SET_ALL_POSTS:{\n\n            const {posts, login} = action.payload;\n\n            const userPosts = posts.map(item => ({...item, isLiked: !!item.likes.find(item => item.owner === login)}));\n            return {...state, posts: userPosts}\n        }\n        case postsActionTypes.TOGGLE_ALL_POST_LOADING:{\n            return {...state, isLoadingAllPosts: !state.isLoadingAllPosts}\n        }\n        case postsActionTypes.TOGGLE_LIKE_POST: {\n\n            const {id, likeOwner, isUserPost = false} = action.payload;\n\n            const neededPostsArr = isUserPost === true ? 'userPosts' : 'posts';\n\n            const neededPost = state[neededPostsArr].find(item => item._id === id);\n\n            const isInLikes = neededPost.likes.findIndex(item => item.owner.toString() === likeOwner.toString());\n            if (isInLikes !== -1) {\n                neededPost.likes.splice(isInLikes, 1);\n            } else {\n                neededPost.likes.push({owner: likeOwner})\n            }\n            neededPost.isLiked = !neededPost.isLiked;\n            return {...state, [neededPostsArr]: [...state[neededPostsArr]]};\n        }\n        case postsActionTypes.TOGGLE_LIKE_POST_LOADING: {\n            return {...state, isLikedPost: !state.isLikedPost}\n        }\n        case postsActionTypes.TOGGLE_COMMENT_POST_LOADING: {\n            return {...state, isCommentPost: !state.isCommentPost}\n        }\n\n        case postsActionTypes.WRITE_NEW_COMMENT: {\n            const {isUserPost = false, postId, comment} = action.payload;\n\n            const neededPostsArr = isUserPost === true ? 'userPosts' : 'posts';\n\n            const neededPost = state[neededPostsArr].find(item => item._id === postId);\n\n            neededPost.comments.push(comment)\n            return {...state, posts: [...state.posts]}\n        }\n        case postsActionTypes.SET_USER_POSTS: {\n            const {posts, login} = action.payload;\n\n            const userPosts = posts.map(item => ({...item, isLiked: !!item.likes.find(item => item.owner === login)}));\n\n            return {...state, userPosts, isLoadedUserPosts: true}\n        }\n\n        case postsActionTypes.ADD_USER_POST: {\n            state.userPosts.push(action.payload)\n            return {...state, userPosts: [...state.userPosts]}\n        }\n\n    }\n    return state;\n}\n\nexport default reducer;","import * as subscribesActionTypes from './types'\n\n\nconst initialState = {\n    subscription: [],\n    recommended: [],\n    isLoading: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case subscribesActionTypes.TOGGLE_SUBS:{\n\n            const {login, type} = action.payload;\n\n\n            const arrToAddSubs = type === 'subscription' ? 'recommended' : 'subscription';\n            const subscribedProfile = state[type].find(item => item.login === login);\n            const newArrWithoutSubs = state[type].filter(item => item.login !== login);\n            const newArrWithSubs = [subscribedProfile, ...state[arrToAddSubs]];\n\n            return {...state, [arrToAddSubs]: newArrWithSubs, [type]: newArrWithoutSubs}\n        }\n        case subscribesActionTypes.SET_SUBSCRIPTIONS: {\n\n            return {...state, subscription: action.payload}\n        }\n        case subscribesActionTypes.SET_RECOMMENDED_PROFILES: {\n\n            return {...state, recommended: action.payload}\n        }\n        case subscribesActionTypes.TOGGLE_LOADING: {\n            return {...state, isLoading: !state.isLoading}\n        }\n    }\n    return state\n}\n\nexport default reducer;","import * as userActionTypes from './types';\n\n\nconst initialState = {\n    isAuth: false,\n    isLoadingInfo: true,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case userActionTypes.AUTH_USER: {\n            return {...state, isAuth: true, ...action.payload}\n        }\n        case userActionTypes.LOGOUT_USER: {\n            return {isAuth: false}\n        }\n        case userActionTypes.SET_USER_AVATAR: {\n            return {...state, userInfo: {...state.userInfo, avatar: action.payload}}\n        }\n    }\n    return state;\n}\n\nexport default reducer;","import {combineReducers} from 'redux';\nimport posts from './posts/reducer';\nimport subscribers from './subscribers/reducer';\nimport user from './user/reducer'\n\n\nconst rootReducer = combineReducers({\n    posts,\n    subscribers,\n    user\n})\n\nexport default rootReducer;\n","import {createStore, compose, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport thunk from 'redux-thunk';\n\n\n\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst store = createStore(\n    reducer,\n    compose(applyMiddleware(thunk), devtools)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router>\n                <App/>\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}